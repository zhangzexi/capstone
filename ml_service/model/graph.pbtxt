node {
  name: "global_step/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
        }
        tensor_content```@\000\000\300@\000\000\000@\000\000\000@\000\000\200@\000\000\200@\000\000\000@\000\000@@\000\000\240@\000\000\200?\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\200@\000\000\200?\000\000@@\000\000\200@\000\000\000@\000\000\240@\000\000@@\000\000\200?\000\000\000@\000\000 @\000\000\200?\000\000\260@\000\000@@\000\000@@\000\000\000@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\200?\000\000\000@\000\000\240@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\200?\000\000\000@\000\000\200@\000\000@@\000\000\200?\000\000\000@\000\000@@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\200@\000\000\200@\000\000\200@\000\000@@\000\000\200?\000\000@@\000\000@@\000\000\200?\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\240@\000\000\000@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000 @\000\000@@\000\000\000@\000\000\200?\000\000\000@\000\000@@\000\000\200@\000\000\000@\000\000\200@\000\000@@\000\000@@\000\000\000@\000\000\200?\000\000\000@\000\000\200@\000\000 @\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000\000@\000\000@@\000\000@@\000\000 @\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\240@\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000@@\000\000\300@\000\000\000@\000\000 @\000\000\000@\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000@@\000\000\000@\000\000\240@\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000@@\000\000``@\000\000\200?\000\000\000A\000\000@@\000\000\000@\000\000\240@\000\000@@\000\000\200?\000\000\200@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000`@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\200?\000\000@@\000\000@@\000\000\200?\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\200@\000\000@@\000\000\240@\000\000\200?\000\000@@\000\000`@\000\000@@\000\000\200@\000\000\000@\000\000\200@\000\000\000@\000\000@@\000\000@@\000\000\200?\000\000@@\000\000\200@\000\000\000@\000\000\200@\000\000\000@\000\000\000@\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000\000@\000\000\200?\000\000\200?\000\000\340@\000\000@@\000\000@@\000\000\200@\000\000\000@\000\000@@\000\000\200?\000\000\000@\000\000\000@\000\000\000@\000\000\200@\000\000\200?\000\000@@\000\000@@\000\000\000@\000\000\000@\000\000@@\000\000\200@\000\000\240@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000\000@\000\000\200@\000\000\000@\000\000\200?\000\000@@\000\000\200?\000\000@@\000\000@@\000\000\200@\000\000@@\000\000\000@\000\000@@\000\000\200?\000\000\000@\000\000\200@\000\000@@\000\000\200?\000\000\200@\000\000\200?\000\000\000@\000\000\300?\000\000\200?\000\000\200@\000\000@@\000\000\000@\000\000\200?\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000\300@\000\000\000@\000\000@@\000\000\200?\000\000\000@\000\000\000@\000\000@@\000\000\200?\000\000\300?\000\000\000@\000\000\000@\000\000\000@\000\000\200@\000\000@@\000\000\000@\000\000\000@\000\000\000@\000\000@@\000\000@@\000\000\000@\000\000@@\000\000\200?\000\000\000@\000\000\200?\000\000\200?\000\000\000@\000\000@@\000\000@@\000\000@@\000\000\200?\000\000\000@\000\000\000@\000\000\200@\000\000\200@\000\000\200?\000\000\200@\000\000\200@\000\000@@\000\000\240@\000\000\200?\000\000@@\000\000\000@\000\000@@\000\000\200?\000\000\200@\000\000\000@\000\000@@\000\000@@\000\000@@\000\000 @"
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
        }
        tensor_content: "\000\240\275D\000\200\240D\000\000\314D\000\000\252D\000@\235D\000\000\354D\000\020OE\000\000\356C\000@\022E\000 \226D\000P\037E\000\340\022E\000\200\367D\0000\023E\000\200#E\000P\034E\000`\253D\000\000\221D\000\000\237D\000@\334D\000\240\014E\000\200\325D\000@\272D\000\200\210D\000\000\311D\000\240\326D\000\000\346D\000\340\335D\000\200;E\000\340\360D\000P&E\000`\341D\000 \322D\000\000\203D\000p\000E\000\240\020E\000\200\210D\000\300\313D\000\000\214D\000X\341E\000\240\246D\000 \200D\000\300\262D\000\300}E\000\340\264D\000\200\350D\000\300\226D\000@-E\000\010\221E\000\360\"E\000`\270D\000@1D\000\340\300D\000\200\220D\000\240+E\000\030\204E\000@\315E\000\240EE\000\300\304D\0000~E\000\300\215D\000\000\315D\000\200\307D\000\000\234D\000P\000E\000 \257D\000`\275D\000\000\216D\000\300\250D\000\200\213D\000\000bD\000@\203D\000@|D\000\260\026E\000\300\367D\000\220/E\000\300\306D\000\360\037E\000@\326D\000X\230E\000\200\274D\000\300\nE\000`\304D\000@\350D\000\240\254D\000\200\332D\000\000RE\000\000\225D\000\200\273D\000@\034E\000\220ZE\000\260\034E\000\340\006E\000\2006D\000@\241D\000\300\273D\000\320\006E\000@\325D\000\300\004E\000\300\217D\000@\\E\000\300\272D\000\200\323D\000\340\010E\000 \000E\000\300\240E\000\240\213D\000\260\030E\000\260\340E\000\340KE\000\340\323D\000\240\233D\000`\301D\000\300\215D\000\240\344D\000\260\016E\000\340\257D\000@\327D\000\000JD\000\020\005E\000\000\365E\000\000\252D\000\200;E\000\200}D\000p(E\000\340\255D\000\200\230D\000\240\317D\000\240\033E\000\300kD\000`\357D\000\200\253D\000`\001E\000 \216D\000\220BE\000\340\376D\000`\241D\000\340\367D\000@bE\000\200\215D\000\000\243D\000@\274D\000@\017E\000\030\363E\000@;D\000\230\231E\000\200\274D\000\240\355D\000\240\344D\000\360@E\000\000\322D\000\000\236D\000\320\tE\000\200\\D\000@\304D\000\200\370D\000\200mD\000\350\210E\000\000\037E\000\320\007E\000@gE\000\000zE\000\350\210E\000 2E\000\200\215D\000\020\205E\000 \273D\000\240\001E\000\000\203D\000\000\256D\000\000\204D\000\000\372C\000\200cD\000\240\254D\000@:E\000`\347D\000\200\242D\000\240\013E\000\200\014E\000\300\231D\000\3009D\000\340\254D\000\000\343D\000\000\211D\000\360uE\000 \273D\000p*E\000`\325D\000\300\210D\000\300\357D\000\200\312D\000PBE\000\000\247D\000\300\037E\000\200\216D\000\330\310E\000\300\254D\000\300\031E\000\300\rD\000\000ZD\000\200cD\000\300\331D\000\300\215D\000\240\325D\000\220(E\000 \222D\000\000\306D\000\000]D\000\200HD\000\300\235D\000\000\241D\000`\352D\000\300\224D\000\300EE\000 \212D\000P\022E\000\200\211D\000\000\220D\000 \240D\000\300ZD\000P\023E\000@\252D\000\200\035E\000\200\323D\000\300[D\000@\364D\000@HD\000\000\233D\000`HE\000\300\342D\000\260(E\000@\203D\000\340SE\000\340\260D\000\340\344D\000\220KE\000@\244D\000@YD\000P?E\000\020\207E\000\340\271D\000 -E\000\220ME\000\200\212D\000\200\314D\000\200\350D\000\200RE\000\340RE\000\240\211D\000\240\211D\000\260\031E\000\200\272D\000\000\332D\000\340\037E\000\000RD\000\200\261D\000\300\024E\000\300\370D\000\330\204E\000@\035E\000\240\304D\000\360 E\000@\336D\000\300\206D\000\000\014E\000\200\001E\000@\222D\000\300\023D\000`\231D\000@\203D\000\200\210D\000\020\006E\000\000\002E\000\000\377D\000\340\222E\000\000\310D\000\340\016E\000\200\273D\000@5E\000\000\341E\000@\247D\000\000\334D\000\340\331D\000@\323D\000\200\201D\000\300FD\000@vD\000`$E\000\340\rE\000\200\244D\000\240oE\000\000\221D\000\300\017E\000@/E\0000\237E\000@\306D\000\200\277D\000\240wE\000\340\346D\000\200;D\000\200\344D\000\300\312D\000@\343D\000P\036E\000`\276D\000@\243D\000@\317D\000\000\000E\000\240\312D\000@\000E\000`\227D\000\000\265D\000\200\311D\0000\014E\000\000\372D\000h\207E\000pUE\000`\234D\000 \243D\000@(D\000\000\300D\000 \201D\000@;E\0000EE\000\300\023E\000`KE\000\240\271D\000\360\020E\000\000\250D\000 \313D\000\000\314D\000\220EE\000\000\332D\000\300%E\000\200\350D\000\000\256D\000\000\220D\000`\250D\000\000\257D\000\000DD\000\340\366D\000\200\321D\000\340,E\000\300AE\000\200\276D\000\200\tE\000\200\360D\000\230\245E\000\0005E\000\240\243D\000\200hD\000@\362D\000\300\330D\000\000\034E\000\000\245D\000\200\354D\000\200\030E\000`cE\000\200\021E\000\000\023E\000\340\273E\000\240\225D\000\000<E\000 \325D\000\000\202D\000 \332D\000\320\001E\000\340\201D\000\020VE\000\300\314D\000`\242D\000\000RD\000 \370D\000`\316D\000\240\205D\000\200\205D\000\270\220E\000\000VE\000pxE\000\340\253D\000\000\214D\000\000\271D\000\000!D\000 \221E\000\000aD\000 \243D\000\200\365D\000\240\221D\000\020\213E\000\300 E\000`\365D\000@\250D\000\240aE\000\200\377D\000\2405E\000`[E\000@\355D\000p\024E\000\2009D\000\000zD\000\000\251D\000\200\023E\000\300\325D\000\340\236D\000\260)E\000\240\260D\000@\315D\000\200\224D\000\240\250D\000\300\261D\000\200\210D\000\000\264D\000\000]D\000\000/D\000@\265D\000P$E\000\200\360D\000\000\320D\000\340\006E\000\240\276D\000\220\nE\000p\031E\000P\036E\000\200vD\000\000\325D\000\200\305D\000\300<E\000\200\216D\0000\035E\000\300\021E\000\0007E\000\240\370D\000\240\366D\000\000BE\000\340\267D\000\000uD\000`\276D\000\200mD\000\200\235D\000\200\334D\000 \000E\000\320=E\000\200\020E\000\360=E\000`\305D\000`#E\000@\227E\000\340\316D\000\300\320D\000@\260D\000\240IE\000 LE\0000\tE\000\000\372D\000\360zE\000\300\307D\000\000XD\000\3000D\000@\337D\000\340\320D\000@\305D\000\000\207D\000\200\273D\000\270\214E\000\000\307D\000 CE\000\200\245D\000\240\273D\000\320TE\000\360\027E\000 \346D\000\200@D\000\300\256D\000\300AE\000\340\255D\000\000zD\000@\365D\000\000\207D\000\340\265D\000\000aD\0000\000E\000@\213D\000 \217D\000`\340D\000\000\245D\000\200\022E\000\000\006E\000@\221D\000\000\261D\000\000\303D\000\200\265D\000\020ZE\000@\034E\000\2000D\000\300\213D\000\000\254D\000\340\233D\000@GD\000\200^D\000\340\307D\000p\243E\000\340\237D\000\000\220D\000\300CD\000\340\246D\000 \002E\000\000_D\000\000\007D\000\000\226D\000 \315D\000\300\002E\000\020\033E\000\220nE\000@\373D\000@\221D\000 \213D\000\020\001E\000\200lD\000\240\271D\000\220\016E\000\200;E\000\320ME\000\000cD\000\340\016E\000`\271D\000`\331D\000`\362D\000@\375D\000\300\203D\000\340TE\000 \202D\000`\203D\00009E\000\000\220D\000@\366D\000\300\254D\000\200jD\000`\346D\000\340\'E\000\000CD\000@\317D\000\200sE\000\300[D\000\240\230D\000\300\365D\000p[E\000\000\223D\000\300\244D\000\300\200D\000\340xE\000\000pD\000\300\237D\000\340\227D\000`\206D\000\200TE\000\000zD\000P#E\000\000\026D\000 \337D\000\200\014E\000\000\013E\000@\276D\000\000%E\000`\346D\000`\206E\000`.E\000@\022E\000\300lD\000@\200D\000\200\317D\000\340\317D\000\300\013E\000\000\314D\000\000zD\000`\261D\000\340\275D\000`\331D\000\200+E\000\020\003E\000\020\202E\000\340\000E\000@\220D\000\300\006E\000\300\005E\000\240\255D\000 \332D\000\220\023E\000\300\224D\000\200\312D\000\300\255D\000\000|D\000\200KD\000P=E\000P\237E\000P\026E\000\240\366D\000\300\236D\000 \265D\000\2001D\000`\270D\000\340\335D\000\000\331D\000@\340D\000@\377D\000\000\257D\000\300UE\000p\023E\000\200\274D\000\260;E\000@\244D\000\200mD\000\340\017E\000\200\230D\000\240\022E\000 \273D\0000\002E\000\240\037E\000\340\213D\000@\220E\000\300GD\000\300\214D\000p%E\000\200\014E\000\300\262D\000\240}E\000`\223D\000 KE\000\200\243D\000\000\230D\000\300\000E\000\340\017E\000\220(E\000\300\215D\000\240[E\000\300\274D\000\330\201E\000\300\211D\000\200\320D\000\200zD\000`\306D\000`\006E\000@=E\000\000[D\000\200\230D\000\000\345D\000`\200D\000\200\013E\000\300\322D\000\340\022E\000\200\230D\000\200\245D\000\000\026E\000\0008E\0000\013E\000\300\270D\000\000\352D\000\240\347D\000PCE\000 \301D\000\340\227D\000P;E\000\240\034E\000\000\244D\000 \006E\000\260:E\000@\257D\000 \351D\000\220\000E\000\240\204D\000\000\234D\000`\247D\000\340\231D\000\000|D\000 \343D\000\300\307D\000\000\244D\000`\006E\000@\013E\0008\222E\000\320\030E\000\200RE\000\000\310D\000p\016E\000@\000D\000\200\230D\000@\027E\000\360+E\000\200\240D\000 \304D\000\240\315D\000\200qD\000\200{D\000\000\245D\000\000\204D\000\200\211D\000\000zD\000`\233D\000\200\004E\0000\005E\000@\262D\000\3009E\000`\007E\000\300YD\000\300\302D\000\240\261D\000`\021E\0000\004E\000\000\343D\000\240\274D\000\240\'E\000\000\234D\000\200\340D\000 \232D\000\000\226D\000\000\205D\000\300\207D\000@\267D\000\260\250E\000\000\232D\000P\001E\000\000\016E\000\000\372D\000@\233D\000\240\016E\000 \026E\000\200\273D\000\320%E\000\350\263E\000\240\277D\000\340:E\000\240\300D\000\240\215D\000 \370D\000\000\016E\000@\232D\000@\347D\000\260 E\000@\217D\000@\264D\000\020 E\000\000\355D\000\000\214D\000\340\022E\000\200.D\000`\202D\000\200\313D\000@\260D\000\340\263D\000\200\320D\000\200\345D\000\000\306D\000 \257D\000\200\324D\000\340\303D\000\000wE\0000\000E\000\000\202D\000\000\252D\000\200\206D\000@\326D\000\000\226D\000`\214D\000\000\215D\000\220\036E\000`\331D\000\200\rE\000\200,E\000\000jD\000\300>D\000\020\nE\000\340\366D\000\300\201D\000`\352D\000\200\273D\000\000\362D\000\360!E\000P\024E\000`BE\000@\304D\000\000\307D\000\000\260D\000\000bD\000\360!E\000\000zD\000\200\'E\000@\\E\000\340\342D\000\244\024F\000\2001E\000P\007E\000\200\230D\000@\275D\000\000\266D\000\300\246D\000\000\352D\000`\224D\000@\316D\000\000\301D\000\300\256D\000\000\007D\000P\032E\000`\261D\000@SE\000P\241E\000p\016E\000`\006E\000\260\010E\000\300\024E\000\200\307D\000p6E\000\300\342D\000\300\252D\000 \274D\000\020\010E\0000cE\000\340\202D\000\220\001E\000\000\314D\000\200DD\000\200\321D\000\220\007E\000@\324D\000\000\216D\000\000aE\000`\270D\000@\372D\000 \321D\000 \376D\000\200\325D\000\220\001E\000\260eE\000@{D\000\340\310D\000\000\036E\000\240GE\000\200\257D\000\260%E\000\200\372D\000\240\225D\000\000\257D\000\000\232D\000\000\257D\000\000\216D\000@\300D\000p\020E\000\240\233D\000\000\007E\000\000xD\000\020\tE\000\000_D\000\000 E\000\000\204D\000p E\000\000\010E\000 \356D\000\000\304D\000\240\375D\000\000sD\000`\337D\000\020wE\000\000\346D\000\000\231D\000\200YE\000(\247E\000\000\277D\000`\212D\000\300\271D\000\000\355D\000\000WD\000\350\246E\000@\003E\000\200\301D\000@\361D\000\000\333D\000\020(E\000\000\303D\000@\273D\000\000oD\000\000\304D\000\000\367D\000\240\355D\000\340\302D\000\000\260D\000\200mD\000\000zD\000\000\222D\000\300\225D\000\300\005E\000\300\022E\000\000\227D\000\340NE\000@\036E\000\360=E\000@\234D\000@\265D\000\340\330D\000\200\035E\000\200nE\000\300pD\000\000\262D\000@\257D\000\000\nD\000`\006E\000\340\027E\000\000\301D\000\300\370D\000\320OE\000\000\225D\000\300_D\000\200\276D\000\200HD\000\000FE\000@\347D\000\360\007E\000\000\010E\000\200\336D\000 \024E\000\0204E\000\300\250D\000\240\303D\000\260\006E\000 \240D\000\3009D\000\340\216E\000\3609E\000\000\351D\000\320_E\000\220eE\000\000\270D\000 \000E\000\240\370D\000\200\324D\000\200`D\000@\200D\000@\373D\000 \033E\000@\253D\000@\375D\000 BE\000\340\217D\000`\206D\000\200hD\000\300\276D\000@\203D\000@6E\000\220{E\000 \371D\000`\303D\000`LE\000\200\250D\000\300\263D\0000\000E\000@vD\000\300\217E\000@_D\000\000\344D\000\000\262D\000\300\325D\000\200.D\000`\322D\000\300\030E\0000\004E\000\340\375D\000\200\350D\000\300gD\000\220\rE\000@\260D\000\000\310D\000p\301E\000\240\203D\000\240%E\000@\233D\000\340\245D\000\300\213D\000\000\372D\000\200\367D\000\3008E\000\200PD\000@\013E\000\000\231D\000\360WE\000\240\250D\000`.E\000\340\206D\000\300bD\000\340\024E\000\020\007E\000\200\216D\000\200nD\000\000aE\000\240\377D\000 \314D\000\000sD\000\000\203D\000\320\023E\000\240\"E\000\330\215E\000@FD\0000\242E\000@\373D\000\340\277D\000\200\341D\000@\221D\000P(E\000\000,D\000@\302D\000\340+E\000\240\335D\000\020\025E\000\000\026E\000\300\215D\000p\022E\000\000\336D\000\200\324D\000\340\rE\000`\356D\000\340,E\000\340<E\000\200\214D\000\340\216D\000\300\307D\000\000\257D\000@\260D\000\000ZD\000\000\231D\000\200\355D\000 \024E\000\240\277D\000\340\372D\000 \301D\000\000aE\000\360\203E\000@5D\000\240\330D\000\270\366E\000`\301D\000\240\005E\000 dE\000\300\331D\000\300\261D\000\340\304D\000\300\267D\000\000\341D\000\200\032E\000\0002E\000\240\023E\000\000\253D\000\300\332D\000\300\370D\000\340\255D\000\200\\D\000\220!E\000\300\257D\000\220\rE\000 \025E\000\200\252D\000\000\247D\000\200\177D\000\240\363D\000\000\364D\000\200\350D\000\020\032E\000\000\207D\000`\356D\000\000\266D\000\200\276D\000\340\214D\000 \344D\000 \245D\000\340\344D\000\340\221D\000@\213D\000p\013E\000\200(D\000 SE\000\340\310D\000\200\'D\0000=E\000\340\246D\000\000}D\000`\305D\000 \024E\000\300FD\000@\366D\000`\270D\000\200\"E\000@\252D\000\000\215D\000\320\rE\000\200\250D\000\340\227D\000\240\351D\000\320,E\000\000\310D\000@.E\000`\243D\000\240\330D\000\200;E\000\340\320D\000\200\346D\000\000\271D\000@\212D\000\000zE\000@8D\000\300\315D\000 \311D\000\340\231D\000\200XD\000\340\253D\000 \211D\000\300\260D\000\220\227E\000\0208E\000@\020E\000P7E\000\2404E\000 \303D\00006E\000\000\204D\000\200\225D\000`\374D\000`\232D\000`\006E\000@\241D\000\300\305D\000\3609E\000\000\316D\000\240\223D\000\000\360D\000\2407E\000p\001E\000\000\266D\0000@E\000@bD\000 \356D\000\000\326D\000@rD\000\240\206D\000\300\310D\000\3506F\000\300FE\000\000tD\000\200\226D\000@\314D\000\200\312D\000\000oD\000\200\234D\000\300\217D\000 \357D\000p\027E\000`BE\000\000\346D\000@\221D\000\300\356D\000 \nE\000P\036E\000\200\346D\000\000\257D\000\300\tE\000\000\340D\000\000\242D\000@\027E\000\000\037E\000\200.E\000@\003E\000\320\017E\000\360\002E\000p\000E\000\300\214D\000\300iD\000\340!E\000\200\272D\000\300YD\000\200\010E\000@\211E\000 6E\000@\025E\0000\036E\000@\223D\000@\022E\000\250\226E\000\200\227D\000`\300D\000\200\257D\000\300\203D\000\340.E\000@[D\000\000\202D\000\200\357D\000\300\236D\000\240\252D\000\300\"E\000\200hD\000\200\016E\000\360<E\000\300\307D\000\340\326D\000 \322D\000`\343D\000\240\003E\000\340\227D\000\000\245D\000\000\310D\000\240\341D\000\000HE\000\000\221D\000\000\264D\0000;E\000\200\202D\000\000\275D\000`\220D\000\000\214D\000\340\342D\000\240\256D\000@&E\000\200\273D\000P,E\000\370\223E\000@\003E\000\000\237D\000 \336D\000\240\014E\000\000\241D\000\000XD\000\020\032E\000\000fD\000\000`D\000\200\223D\000\200(D\000@\364D\000`\256D\000\200\300D\000\200\026E\000\000fD\000\300\311D\000\360hE\000 \260D\000 \252D\000p\000E\000\3206E\000\000\267D\000 \000E\000pCE\000\200{D\000`\366D\000\200\276D\000\020\022E\000\0004D\000\300\261D\000H\252E\000\200\366D\000\000gD\000\220\024E\000\200\"E\000\240pE\000\000\300D\000\300\362D\000\240WE\000@\316D\000\320\000E\000p.E\000\200\324D\000@\222D\000\340\243D\000\200GD\000\240\324D\000`\207D\000\2009E\000\000fD\000@\313D\000\340\013E\000@;E\000\200\310D\000\300LD\000`\320D\000\000sD\000\000_D\000\000\254D\000\240\357D\000\250\230E\000\360\004E\000\200\260D\000\300\260D\000\270\202E\000pRE\000\200~D\000\0002E\000@\235D\000 mE\000\000)E\000\340\001E\000\300ED\000\000\264D\000\300\243D\000@\026E\000\020:E\000\000\377D\000\300\375D\000\240\350D\000\0006D\000\000\320D\000\300\035E\000`\004E\000@\336D\000\340\315D\000\300\306D\000\200\226D\000@\372D\000@\241D\000\320\000E\000@\330D\000\200\355D\000\200/E\000\220\027E\000\240\224D\000\200\350D\000 \235D\000\370\305E\000\300\303D\000\300\360D\000\300\343D\000\340\210D\0000zE\000\200-D\000\240\334D\000\000aD\000\300^D\000\300\235D\000 \361D\000\2404E\0000\004F\000\300\236D\000\000RD\000\220(E\000\330\225E\000\300\363D\000\260\002E\000\300(D\000\200\027D\000\000\363D\000\320\tE\000`\002E\000\010\222E\000\200\210D\000@JD\000 \354D\000 \271D\000\350\214E\000X\225E\000\000\201D\000\260OE\000\240(E\000\300\206D\000`\342D\000\000\304D\000@\361D\000@\264D\000p,E\000\300\360D\000\200=D\000\360\033E\000`\355D\000`\001E\000\340\001E\000P\022E\000\340!E\000\200\243D\000\340\365D\000\200\235D\000\340{E\000\200\364D\000\000\262D\000\000\202D\000`\371D\000@\003E\000\000\274D\000\3202E\000 TE\000\260\032E\000\000\033E\000\220\005E\000\240\205D\000\000\303D\000\320NE\000\340\311D\000\360\"E\000\300\220D\000@>D\000\240\215D\000\260gE\000\200\361D\000\340\352D\000\300\266D\000\260/E\000\200;E\000\340\345D\000\000>E\000\240\263D\000`\'E\000\340\017E\000\300\303D\000 \207D\000\000/E\000\260YE\000\000\255D\000\200\262D\000\000\225D\000@\355D\000 \236D\000\000zD\000P5E\000@\241D\000\300!E\000\200\210D\000`\235D\000\000\371D\000 \325D\000\020\nE\000@\274D\000\240\370D\000\340\017E\000\240\342D\000\200\276D\000`EE\000@\003E\000\340\232D\000\320<E\000\320\036E\000p`E\000\200\375D\000@*E\000\200\204D\000`\271D\000\200\220D\000\200$D\000\000\221D\000 \322D\000\000\tE\000@(E\000\340\264D\000\300{D\000\300\265D\000\000\245D\000\200\325D\000\000\361D\000\000\247D\000\000BE\000\000\204D\000\300\207D\000 \316D\000\240\261D\000\300\335D\000p\214E\000\300\333D\000@MD\000\260KE\000\200;E\000`\\E\000\200tE\000(\210E\000\200zE\000\200\332D\000\240\320D\000\360\216E\000\200\324D\000\000\241D\000\300iD\000\000\313D\000@\305D\000@aE\000 \221D\000 \026E\000`\360D\000@\337D\000\260?E\000\200,D\000\200\261D\000`\376D\000\200TE\000\200\"E\000@\270D\000\300[E\000\000sD\000 KE\000\300\250D\000`\026E\000`\314D\000\000XD\000\200\205D\000P3E\000\300\355D\000\200\236D\000\340\224D\000\200\234D\000`\200D\000\200\001E\000\200\353D\000\000\212D\000@\233D\000\220[E\000\300\216D\000\200\343D\000`UE\000\000\271D\000 \246D\000\000\222D\000\200\241D\000@\032E\000@\263D\000 \315D\000\200@D\000\340\234D\000\340\313D\000P\rE\000`\271D\000P\021E\000`\205E\000\340\264D\000\300\001E\000`\316D\000\000\233D\000p\237E\000\240\254D\000\360\026E\000\340\262D\000\300\nD\000`\236D\000\330\277E\000@\352D\000\000ND\000\000\036E\000\200\324D\000`\207D\000\360:E\000\200\"E\000\300\265D\000\220\tE\000\340\340D\000\240\233D\000@ID\000\200\254D\000\3207E\000@\275D\000 \315D\000\000pD\000 )E\000\200\306D\000\000\240D\000\300\277D\000\000\257D\000\340BE\000\300\277D\000 \326D\000\000\260D\000\340\rE\000\000yD\000\340\216D\000`\243D\000\220]E\000@\tE\000\300\271D\000\000\230D\000\300\332D\000`\332D\000`\020E\000\240\340D\000`OE\000\300\021E\0000EE\000\200\266D\000\240\370D\000@\336D\000\000\205D\000 \313E\000\320YE\000\240hE\000@\366D\000\220\251E\000\200\317D\0000DE\000`\357D\000\300\217D\000\300\271D\000\2606E\000\200\036D\000\200dD\000\000\310D\000\000\237D\000\000\177D\000\240\235D\000\260\026E\000\000\340D\000\300ME\000\340fE\000 \257D\000p\216E\000\240\245D\000\300\204D\0000}E\000\340\006E\000\200\236D\000\000}D\000@#E\000\020+E\000\200\312D\000\000\240D\000\000\346D\000\200\035D\000\240\332D\000 \214D\000\200\211D\000\240\255D\000\200zD\000\200\244D\000\200\222D\000\240\022E\000\340\253E\000 \320D\000\000\202D\000@eD\000@\362D\000\000fD\000\000\264D\000P$E\000\200\332D\000`\334D\000\000\177D\000@\007E\000\300\250E\000`\243D\000\020jE\000`\334D\000 \376D\000\000\"D\000\000\344D\000\010\312E\000\200\'E\000\360>E\000\240$E\000\260$E\000\340\300D\000P\002E\000\200\020E\000\200\212D\000\030\253E\000\360\024E\000\300\251D\000\000\202D\000\340ZE\000\200\211D\000`\254D\000PvE\000\000\242D\000@\232D\000\240\377D\000\340\373D\000\000\nE\000\000\314D\000\240BE\000@RD\000@\035E\000@\312D\000@\353D\000\000\360D\000@\204D\000\000\002E\000 \253D\000\000\200D\000\200@D\000`\344D\000 \350D\000\200\311D\000\000\226D\000\200\324D\000\200\330D\000\000sD\000@\302D\000@\257D\000\320$E\0000\003E\000\220\016E\000\200+D\000\000\031E\000\260\007E\000\020.E\000\360\036E\000\350\241E\000\320\013E\000`\004E\000\300\211D\000\300\241D\000@&E\000\000\177D\000@\034E\000\200\376D\000\000FD\000@\310D\000\200mD\000 LE\000`\320D\000\200\305D\000`\232D\000\300\020E\000\300\226D\000\300\212D\000\340\014E\000\000\307D\000\020\220E\000\000\324D\000\000\342D\000@{E\000\360\032E\000@\036E\000@\255D\000\340\000E\000 \211D\000\020\023E\000\300(E\000\260\021E\000\200\025E\000@\276D\000\300\224D\000\360\026E\000 \374D\000\240\266D\000@\333D\000@AE\000`\344D\000\020%E\000\340\210D\000\260GE\000\200\301D\000@\362D\0000\030E\000\300\211D\000\020\023E\000\320QE\000\200\262D\000\300kD\000\200\320D\0000wE\000\000\343D\000\240\347D\000`\006E\000\320\033E\000\300\254D\000\200\257D\000\360\020E\000@{D\000\300\205D\000\000\305D\000\2205E\000\260NE\000\200!E\000\000\016E\000\000\013E\000\340\024E\000\340\356D\000\320\204E\000 \240D\000\000;E\000`\276D\000\340\225D\000@\345D\000@\002E\000\000_D\000\240\233D\000\320cE\000 \023E\000\000-E\000\340\260D\000\300\277D\000\300AE\000P\000E\000\020\004E\000 UE\0000lE\000\000\216D\000\020\004E\000\000\226D\000\340\030E\000\200jD\000 @E\000\000\360D\000\340\273D\000@\241D\000\340\267D\000\300GD\000\020\037E\000\000\217D\000@\265D\000@\010E\000\000fD\000@\344D\000\200zD\000\200\220D\000\200\307D\000`\326D\000 \241D\000\2006D\000@\333D\000\340\305D\000\340\242D\000\200\317D\000\000\326D\000@\031E\000\000\341D\000\200\217D\000\320\004E\000P\020E\000\340\326D\000\300\032E\000\240\206D\000@_E\000\2404E\000 \217D\000\300\300D\000@\205D\000 \221D\000\000/D\000\220\037E\000\300\326D\000\000\271D\000\200\305D\000\340\256D\000\260\021E\000@9E\000`\334D\000\000AD\000\000\360C\000\260QE\000p,E\000\340<E\000\000\266D\000P\000E\000\340\nE\000\200;E\000\000\305E\000\000|D\000\200SD\000@5E\000\000aD\000\240\013E\000\000\023E\000\240\220D\000\000\322D\000 \270D\000\340\367D\000\240\276D\000\260WE\000 \227D\000\000\237D\000\020GF\000`\376D\000\300\337D\000@\244D\000\200\177D\000\300\017D\000@pE\000\340\243D\000\200wE\000@-D\000\240\002E\000\340\272D\000\200\300D\000p\212E\000`\363D\000\300\312D\000\240\274D\000\300aD\000`\016E\000@\242D\000\000\026E\000\240\322D\000 \357D\000`\347D\000`\301D\000\300\336D\000\200\036E\000\000\003E\000\000HD\000\340\215D\000`\232D\000\200 D\000\300\300D\000  E\000\000\305D\000@\033E\000\2403E\000\340\315D\000\000\237D\000\320\000E\000\200NE\000\000\310D\000\200\327D\000`;E\000\000\260D\000\300\017E\000\340(E\000\000\264D\000\000ZD\000@\367D\000\320(E\000@\323D\000\240\261D\000 \301D\000\300\254D\000@\257D\000\200;E\000`\006E\000\220hE\000\2404E\000\340\234D\000@!E\000`\375D\000@\222E\000\340\036E\000\000sD\000\000\317D\000\000\036E\000\200\206D\000\300\232D\000\000`D\000 \004E\000\300\354D\000\200\237D\000\300\224D\000\240$E\000\300\353D\000\220-E\000\340\227D\000`\236D\000\300\364D\000`\010E\000\000\240D\000\200\"D\000\3009E\000\200\352D\000\000WD\000\000aE\000\3004D\000@[D\000\000nD\000\220\022E\000\320wE\000`\245D\000\020:E\000\200\tE\000`\354D\000\300ND\000\210\205E\000\340\nE\000\300\267D\000\300\367D\000PAE\000@\270D\000\200\212D\000\340\321D\000\000\224D\000\200\267D\000 \364D\000\300\351D\000 \230D\000\340\200E\0000\033E\000\200\245D\000 \271D\000\300\016E\000 JE\000 ?E\000p\031E\000@\237D\000 )E\000\200?E\000\320\233E\000\000\342D\000 \356D\000`SE\000@gE\000\340\310D\000\200\270D\000\220uE\000\000[D\000`\325D\000\300\001E\000\340\334D\000\340\024E\0000?E\000@\177D\000\200;E\000p5E\000\000\265D\000\200\242E\000\360\207E\000\240\200D\000\300\207D\000 \013E\000\340\202D\000 \200E\000\340\354D\000\300\272D\000\000\234D\000@-D\000\240\232D\000\2009E\000\200\272D\000\000\223D\000\000?D\0000LE\000\000\357D\000\000\306D\000\240\302D\000`\234D\000\200\202D\000\300\205D\000@1E\000\340!E\000\300\322D\000\240\334D\000\000\372D\000 \216D\000\320\026E\000\000nD\000\300\240D\000\000$E\000\360OE\000\000\236D\000\000zD\000\240(E\000@wD\000\200\241D\000`\353D\000\000\235D\000 \031E\000\360[E\0000EE\000@\373D\000@\257D\000\000$E\000\340\027E\000\300aD\000\300\201D\000\2004D\000\240\310D\000`\272D\000\320\030E\000\340\274D\000\000\301D\000\000\226D\000\240\320D\000`\300D\000@\252D\000\240\325D\000`\316D\000\340\017E\000`\245D\000\200\260D\000\300\217D\000\340^E\000\220\nE\000\000\272D\0000\tE\000 \225D\000@0D\000@\315D\000`\344D\000\340:E\000\340\243D\000\300LE\000P\035E\000\000\322D\000\000\241D\000\0006D\000@\221D\000 \rE\000p\023E\000`\361D\000\200\236D\000\000\344D\000 \245D\000`\312D\000\300\257D\000\000zD\000P?E\000`\253D\000\340\005E\000\320\005E\000\000\356D\000 \263D\000@\260D\000`\305D\000@\314D\000\340\357D\000\240\252D\000\240YE\000`\322D\000\240\315D\000`\223D\000\200\001E\000`\217D\000\000xD\000\000\245D\000`\331D\000`\316D\000@\262D\000\000vE\000\300\351D\000\200\317D\000 \306D\000\0008D\000 \345D\000PhE\000 \240D\000\000:E\000\200\324D\000\340\200D\000\000\245D\000`\022E\000\300\tE\000\300\247D\000\200\300D\000\320\027E\000\340\311D\000\300+E\000`\021E\000\200\"E\000\340\254D\000\300\276E\000\200\373D\000\240\271D\000\000\235D\000\240\003E\000\000\240D\000`kE\000`\006E\000\340\022E\000\200\"D\000\300\rE\000\000\266D\000\300\236D\000\000\220D\000\340\276D\000\200vD\000\200\345D\000\200,D\000\000\033D\000\000\330D\000 \022E\000\200OE\000 vE\000\240\333D\000\300\024E\000\000\242D\000\340\211D\000 \017E\000`\353D\000\200\242D\000\000`D\000`\321D\000\000\332D\000 \300D\000`\206E\000\200}D\000\340\241D\000\300\330D\000\0006E\000\240\270D\000\340\357D\000\2204E\000@\356D\000\340\242D\000\200\374D\000@\220D\000P\016E\000@wD\000\000\002E\000\300\340D\000\200eE\000@\334D\000 \035E\000\200\242D\000\200$E\000@\305D\000\000\310D\000 \363D\000 \356D\000@\203D\000\000\201D\000\360qE\000\220FE\000\200}D\000\000zD\000\240\227D\000\000.D\000\000\226D\000@\005D\000\340\261D\000\200\320D\000\200\223D\000\300JD\000\030\255E\000\000\211D\000\000TD\000\300\246D\000\020 E\000\300\217D\000\2004D\000\200\314D\000\220cE\000p\036E\000\200\235D\000p\036E\000\200\211D\000\240\215D\000\000rD\000@\314D\000\2203E\000 \226D\000\240\333D\000`oE\000\200\211D\000\300vD\000\200\300D\000p\030E\000@\203E\000\240\315D\000\200]D\000`\223D\000@\320D\0000\020E\000\200\351D\000@\347D\000@\376D\000\220 E\000@\354D\000\000\016E\000\200\242D\000\240\366D\000@\177D\000`\343D\000\200\215D\000\300\231D\000\200\200D\000\000RD\000`\333D\000\300\227D\000\340\331D\000\250\234E\000 \213D\000\200\224E\000\240\007E\000p\001E\000@hD\000\200\000E\000\300\"D\000\200\355D\000\300\224D\000p\016E\000@\361D\000\340\255D\000`eE\000\200\337D\000\240\355D\000\000dD\000\000\250D\0000\023E\000\000\257D\000\300\301D\000 \276D\000\200\254D\000\000CD\000\240\007E\000@\372D\000p\032E\000\340\366D\000\340\337D\000\240\221D\000\000\303D\000 \371D\000`\310D\000\000\207D\000\200\265D\000@\345D\000\300\251D\000\200DD\0000iE\000\000+E\000\200\237D\000\340\037E\000@\026E\000\300\224D\000 UE\000\300\363D\0000\253E\000\240\323D\000\300\217D\000\300\215D\000\320\021E\000\300\276D\000\200\332D\000`\352D\000\300\274D\000\200\260D\000\300\027E\000\300\224D\000\200\236D\000\200lD\000\000\320D\000\300\211D\000`\274D\000\240aE\000\340bE\000 \005E\000@\022E\000\000\034E\000\240\031E\000 \003E\000\000yD\000\000\253D\000@\243D\000\240\367D\000@\rE\000`)E\000\240\252D\000@\244D\000 *E\000\200\036E\000\340\302D\000\000BD\000 \243D\000\260KE\000\200\313D\000\300\200D\000\300\300D\000PWE\000@\332D\000\360\036E\000\200ND\000\030\265E\000\340\010E\000\000\343D\000\300\217E\000\000\026E\000\000\314D\000\020HE\000\270\202E\000 (E\000@\207D\000\000\255D\000\020\016E\000`\265D\000\000\257D\000\200TE\000\0004D\000\240\253D\000\240\334D\000\240:E\000 }E\000 \272D\000\320:E\000\300\023E\000\300\\D\000\300\354D\000PgE\000\340\242D\000`\233D\000 \372D\000\300\236D\000\200cD\000\200UE\000\240\nE\000\240\223E\000\200mD\000 2E\000\320(E\000`\032E\000\300lE\000 \314D\000\260BE\000`\207D\000p\030E\000\300\330D\000\300\207D\000\000ME\000P\025E\000\300\217D\000\020$E\000\000\257D\000 \367D\000@:D\000\200dD\000\200\006E\000\000\230D\000\000(D\000@\225D\000\000\220D\000`\277D\000\200QD\000\200GD\000\370\272E\000\000[E\000PoE\000p\024E\000\300\300D\000\020\024E\000 \215D\000@\354D\000\200hD\000@\243D\000\200JE\000@\201D\000\340\020E\000\360\002E\000\240\323D\000\300\262D\000\240aE\000\000\202E\000\000HE\000 \366D\000\340\375D\000\000yD\000\240\231D\000 \373D\000\000\246D\000@\353D\000\000\021E\000\340\227D\000\300\\D\000\200\374D\000\300ZD\000\240\361D\000p%E\000pYE\000\000\324D\000\340\266D\000\200\250D\000\200BD\000\340\254D\000\310\203E\000\000\304D\000\000JD\0000?E\000\240\214D\000\000XD\000\2001D\000@CD\0000\tE\000@\014E\000\200\026E\000\000\202D\000\000\302D\000\300\327D\000\240\205D\000\200\333D\000\200\257D\000@\242D\000\300\332D\000\200\245D\000\240\214E\000 \263D\000@1E\000\300\224D\000\200zD\000\340\221D\000\240HE\000\200rD\000@\223D\000\200\317D\000 \316D\000`\255D\000p(E\000`@E\000\200\277D\000\300\325D\000@\232D\000\300\007E\000p\025E\000@\341D\000\220\026E\000\000CD\000\200\205D\000\000CD\000\000\"D\000P\003E\000\2201E\000@\345D\000\000\275D\000\300sD\000\000\241D\000@\250D\000@\311D\000\000\024E\000\000/D\000\300\007E\000\200RE\000\360\032E\000\230\204E\000\200\203D\000\340\\E\000\200\302D\000\340*E\000\300\224D\000\240hE\000@\265D\000\300\320D\000\000\007E\000\220\036E\000\200\354D"
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
        }
        tensor_content: " \210\301H j\231H\340\270\203H\200\236\225I\340\345\231H\220AcI\260\220\007I\320uCI\340\225\200I\240\034\245H`\363\000I\210\006\214I\340\362\321H\200a\353H\3007!I\000\227>I\300#\010H0\214vI \002NI\320QAJ\020\367\014I0\217jI\300\270&H\000\231\300H\200E\253H`/\207H\240t\233H\3003\237H\350\357\335I\200\367\262H\250\315\230I\2405\301H\340\227\376H\220g\035I\200\351\246H\240\347[I@\243\016I\330N\363I\000\361\366H\330\261;JP\2123I\340u\365H\340\214\257H\020;\257I\320\034AI\360\214mI\340\226\343H\240\032\340H\354\345pJP;UI\240\200\330H\260\006LI\300\215 I\300KHH`C\024I\014_[J\222C\324J\270<\262I\000\003 I\320\031\305I\240\323\"I\020\020=I@\213\023I\200\230\207G\230\200\231I\260\260\031I\262\251\206JH\244\245I`\300\326H\020\277\004I`L\346H\240S\226H0S^Ipr(IP\203\035I\270\022\347I@\360\246I\300(\210I\274\307\033J@\204\336H\020qoI\030\321\211I\300a\203H@\230\250H`\021\244H\340\353\315H@\250JI\220\205yI\240\236\231I@\303\204I\260\017\021I\200\021\"I\000*\343H\220\224WIpt9I\300\036%I\370\240\243I\360!PI\000t(H\210e\222I\330=\241I@\274\231H@\032\252H \322\260H\000\203>G\312\'\240J\300\213\022H\340\2714I\260T\204J\360U]I\010t\361I\300\324\007I\320s\016I\300__H\360\023*I \214\334I\300\341\251I0\214\311I0\1776I\260V|IxvAJP\312\tI@\2618I\200\337\007I\360\357\225I\200knI\000\275@I\340\021\206H\240\377\242I`\321\343H`\025^I\320(WI\340*\341HX\240\260I\310\241%J@d\240H\200\020\274G\200+\220H0\200\275I@q\365H\300\360\014H`#\206H\350\244BJ\331\023\025K\340\371\360HX-VJp\241GI\360\270gI`\251\350Hpg\000J\200h;I@\2623I\270\214\241I@k\350H\340\026\360H\300a\321H\240\210\230I.Z\274J\200\271\217H@\302\261Hhm\305I\210\243\220J8\227|J@\365\307H\200\033\335H0\014\360I\000\007\303H`\250\344H\300\224\002H\200\270\232H \177\220H\300^\265H\200OnH`\225\250HP\352\306I\340dlI\200\013\335H\360jPI\240\217\337H`\213\340H`\023/I ,*I\320\276TI\200\345\306G\334t3JP\232YI\230\034\256I`\351\362H0-,IH,\236I@\203\360HP\200\021I8\210\234I\220\247VI0\030\010IZ\310\267J0F:Ip\357\352I`V\305H\000\2061H\240>GI\200\207\336H\000\036\020H\300\346\023I\320\033\262I\260\202\177I\010q\202I`\236\362H\240\245\tI@&\345H \313\251H\320w0I@\004KH\310\306\361I\200d\324H@^\026J0^XI\200}\021H@(\245H\360\276(I`0\266I\2401\224I\340\236\276H\340\026\212H@\251>I\2006CI`\002\310H\270D\220Ix\365\206IPI\013Ilu J\200\002\177I\260\216\274I\240\315\310H\000)\325I`\232\rI\330\224\204I\300\342\302H H\335H`n!J\330k\335I\000:\202H`\004\244H\240[\266H`\353\247I\000\256\262I\210\204\354IP\207\274I\340\317\321H\240\300\336H\000)nI@\316\367H\230\345\221I\350U\212I\340\364\255H\200+\200H\020\235/I\340\037wI\350\340\352I\300\261\264I \003\336H@/\340H\000\335;I@%\376H`\207\322H\200\013\242H \337\337H\360\211.I\200jRH\340#rI@\214wH\340\317PI\200,\001I\310\n\014J\210\302qJ`\230FI@\323\365H\300\357\321H\370\':J`\326uI\240p\007I\000vBI\200\002YH\020\326\242I\200\021<I\200*\237G\340[\026IX\010\236I4]\025J\200\031\246HHdAJ\220:\016I\300\267.I\020rPI\020\273\036J\000\263\334I\300\201\255H\300\251_I`\217\276HP\273CI \246.I\340\202ZI\240\227cI\340\363\250H\000MCH\300t\273H\310\376\254I\340\270\356H\300\333\254H\260KdI\300QeI\000\340~H\340\320\271H0k\207I \234MIH\004\030JhR\207I`\372aI`]\367H\000D\020H\200\266JH\020k\013I \266\337H\\ `J\300\005\365H\240\200\003I\210l\357I\370\314\201I\340Y\210H\000P\304H\000M\345G\200\333 I\340\332@I\320\3414I\200b\247H8]\211IP\277JI\020\331\003I\220p;I`\\\236H`\376\324H\220\225CI\034Q*JP\002lI\000\260pH\370\222\335I(\007\327I\030\223\257J\000\004\035J\\\312\nJ\300\244\265H\260k\317I\300\352SH`\316\206H ^zI\200|\317H\300\264\347H\334\326\035J\240\006\212H8\201\257I\234U\253J\340<*I\240\267QI\220\234GIP\234\rI@\340\210H\310G\236I@\371}H\020\241\006I\240\230\361H \344\254I\340%\nI\320\234\tI@\235\271HPcxI\000\004\325H\320\354\202J\260\264\211I\340\3501I\320\273<I\340\301\203I\340\343\320H\200\217\321H@G\033J@\\dI\360R[I\000F\276H0\235\022I\270E\372I\212\341\250J\020\224HI\300\302\tI\237L\035K I\205H\000t\006I\000\344\357H8\210\331I\320njI\340\240=I\200\360\337H\310\203\262I\340\036\323H@\3323I\360\376GIz\221\236JX(\232I\020\373AI\340u\207H\000pOI\230%\224I\020;,I\200\r\246H\360pvI\300\013:I\304\002\016J\320\000\236I`\375\214H@l\305H\300_\336H0\274\241IPo.I\360\006\003I\200\211\231H@\3030I\000\234lH \304\007I\000\311\024I\020dVI\340\237EI\210\315\273I\000w\024I\300\312\303H`ijI\000\013\246I0B\002I\2608[I`#\210H\340Z\320H\340\302\254H\240\334\270H4\3770J\000jqI\300\204\332H\000X\271H\200j-I\240\344(J\314]*J@S\246H4\3000J\000\322<H \324\214I \274\027I@sUIH\002.J\350k\301I05]I\200\026?Hp5PI\210\344\214I H\211H\240\001\324H\240maI\270\025\275I0H\007J\240/\344H\340\251\003I@K\232H\000\374\236H\340\025\212HPDTI\300w\372H@\363\216H\240>\243H\2100\033J\320\3602I\000\361SIp}_I\340\013\257H\340\244\rIp\"\000I\340\3727I\300\nDH\260\367;I\2500\251I\240 \310H\200\263\322H`\004iI`\020\361HP\313*I\3408\312H\340\363\311H0\216PI\370B\244I\000\255\357G\000\351rG\340\350dIP\252/IPRQI\300`2H\300i\265H\340\202@J\300\225\333HXD\252I@\002\366H\000\240RH 6(IpwUI`:\322Hp\304\003I0\340#I@\371\264H\260z\001I \253^I\030\213\301I\360pXI\340\r\027I\000\002\261H\000y\026I\240C\303H\200t\230H \342,J\300\374GJ\260\026$I\200B2Ip\364\323Ix4\252I\220t-I\2203\005I\340\031\273H 1\014I\300rOH\340\"\370H\300M\246I \277\266H\260\223oI@\016%I y\255H\270\235\247I\350\035\004JH\334\271I\300\177[I\330>\314I\300\361\214H\220\014\010I\230\377\232I\320f\tI\300\000II\220\342XI\240k\343H\320\0245I\200\316%H\200L(Hp\340=I`\226\246H\000J\330I\300q\235H \244\030I \0266I\260r=I 3.I\260\242\033I\200\314\373H0\030\217I\020?\020I\250\360\372I\200\364\002I\000t\016I`\3504I\000Z\010I@\205\273H@\264cH \201\030I\200\213\332G\020XVI@\262\352H\240teI ;(I\240\205\202Ix\322\231I\340?SI \\\345H\220\006QI\320\273\tI\000T\367G\220\3458I@\302\373H0\335\272I\000t\177H\200/3I\000\315\344H\200HlH\240w\270H(s`J~C\224J\200\210\243H\3001\216H@\202\220Hp4\013I`\272\362H@\001sH\340\323\221H *\244H`\263\215H \3473I@J\350H\250\304\234J\340z\375Hhm\211I@\215XI \305\213H / I\000\222\322H\240\222HI\020\243NI\340dLJ\200\346\365H\220A\221I\020\307\013I\010#\370I\340\374\210HP\305\025IPf\006I\300\3551H\300\323\375H\024CFJ`\350\341HPK@I\000\361pH\000\222\230G\230\211\277I\260m\231I\240\244\034I\200?\344H@Y\201I\0006WHH\315QJ\200\227\263H\320\003\006I\2000\345H\200\032aH\340W\275H@\345\217I\240\276\331H\240!\"I\020\277\217I\0003\016I !\302H\360\305SI\240\350\212I foIH\336\222I \260\316H\254@8J\260\373\035I\270\335\210I\200\217FH\340\313\214I\250\211\322I\220\356\007I\340h4I\260y\246I\320A:J ChI\250\311\226I@r`H\200\003\220H\300\211\251HH\247\211IpY[I\000\312)I@j\260H\210\275\237I\340\357\361H\240\317\304H\300\331GIp\313MI0\3036I`\003\031I0\000\010I\020\2338IPF\233I\260?\025I@;\311H\340\310\216H@K\231I@\376\333H\200?\260I\300\020\320H\220SZI@\214`I\300\201\277H U\343H`\023!I\200\335\204H0\354#I\020\016sI`\304\001I \343\266H@\267\273H\200\322\325H |\207I\000\257LI`D\266H\200U\274H\000\371\265H\300\331\324H\300\\OI\000=\243H\340\253\304H\200\tWIp\3442I\240A\232I\240\213\326H\020Q[I\300\246RH\220*>I\340\253\242H\316r\221J\360=\037I@,0I\020\354\tI\240\346\363HPT7I\220t\236Ip\376\017JPb<I\000\335HH\360\240\261I\240\177\022I\200\337\326H\220\305\010I\200\023AH\320\037!I\000\023\357H \032+I\030\\\331I\340}\330H@\276cH\000\003\374H\300\340\333H`V\204H\220\266\271IX\304\334I\200:OI0F+I 0ZI\240\366\377H0\234YI`&\252H`f\265HH\300\216I\000\260\262H ?\331I\320\313\177I\350\266\241J \307\211H\200\0107H0\211.I\000m\344H\020LAI`\222\264H`\310\354H\200\0302H0\0238I\200OBI\220\335ZIX\265\372I\360\266!I\020\274(I`\357\231H\3001yI\340\033\263H@V\343I\000\020\023H\300\235\211H@@2I@u\330H0\005AI\240\214\271H\000\321\310H\000\377\234H\200\207\240H\300\326\271H\300U\003H\240\213BJ\300\336\217I8\362\245I\006\353\200Kl2@J@\t\350H@\342`H\020@6I\020\3062I`\300\234H\000\022\241H\320o)Ip\246\276I\300\232JI\340\367\010I\260\304\nI`\330\375H\220\264KI`L\325H0{\362I\300D\255H\200~\210I\300\236\225H\300\2012J\340,\303H\344\304&J0\335.I\300]\223H\2001\276H\020BnIp\357?I\240\003\312H\200\"\260H\240\340\027I\300\0034I\340\243\277H(\310\327I\000\013rIP\305gI\214\037\010J0\"\305I\000\234\034I\340s\026I\360\343)I\200\007[I\210\372\205I\340\320bJ\340\344\023I\000\235\036I\210\305\226I\370\335\311J\260\342\032I\320\004\213I@iAI\360QSI \324\244H@\224NIp\251YIp\236YI\360\3332I`!\337H\300\364\225H\2005\245H\300\221\256H\200\352\327H`\006\236H\350O\237JP6nI\340\277\335H\200\215jI`\201\332I\360k5I\360\240,I\200Z\276H O\314H\360.\302I`\364\306H\200\331\321H\330\270\314I8;\243J\000a\013I\02061I P\365H\240\306\260H\000\250\271H\360\034HJ\200\334\026I\220\201%I\360#\213I\300\363]I@\357\352H\000\355\222H\300x\236I\340h\007I\300\211)I\350%!J\3209MIh[\326I@\032\350H\000\372\032I`*\267H\300\244\002I\340\024XI0\314\334I(\372\247I\340\215\243H\300\342\347H@\350lI \336PI\240?\\I0\353\202I\220K,I\220/.I\320\307\030I\200\371\325G\200\314\256H@@\254H`\350\371H\360\024\271I\220\271\037I\360\222oIP@\033I0\221\317I@\217\315H0\303\021I\200\007gH\300\014<I\320\000.I \361\271H \'\216I(\252\341I\240\252hId\365=J\000\373\277HP)2I\260c\006I\340\'!I\240\344\323H\340\275\317Hh\003:Jx\313+J\320\361 Ip CIhl\274I\260\000jI\250\233\263I\300\'\327H 7`I\300;VH\240\034eI\300\310YI\254%\027J\200\022\016H\200\260\320H\200\031cH\200\206\342H\240\005\264H\300W\"I@\360RH\340\022aI\200\367_It\376\020J\300T\243H\24092I\000\327\221I@u\014H\260\274LI \314\336H <\277H\022\004\332J\240\231BI`V\204H\300\366eH`\252\327I\260\224KI\360\224-I`\361\213I\240\325\334H \370\313H0\320\264I@\265\374H\200G\001I\320\r\004I\300S\333Hh*\232JP\2111IpqYI\210+\210IPZSI\340}5I\240\324\266H\300cXH\020\265\026I \031\016IP\315AIP\023\275I\254\023\203JP\377UI@\245\333H \224\374H@\227\014I\000w,H@]>I\220%\004I\260?\005Ix\'\357I\0001\204H\000)\310HPv I\200\307\372G\000\374\366H\340\037\311H\240&,J\340_\020I\370\202\265J\210\322\316I0I\304I0\344VI\200\343\330H`\302\005I\200\025\205H !\376H\004dIJ\200\014\316H\000\230PH\320\314\203I\200\255\034H W\242H\3705\355I\340=\271H\360\243~IX\001\202I`\234\353H\220\326$I\240o\342H\200\343\226H\240E\215H\000\362$G@\307JH\000\201\207I\210>\230I\200\003\250H\200\r\377H\340v\312H\260\301\002I\200\005\211HT\3322J\310Y\037J\020\014QI\000\351\237I\304>\365J0\212JI@65I\024\242)J\300\030\271H\000\326FH\200,\260H\200,\016H@\034\305H\340/\027I\000\227\332I\010\353\226I8z\303I`}\356H0\271[I\200\267\215I0*gI\300L\223I\020\325\021IPz\322I\240\032\277H\200djH\260OEI\300a\240H\220\262\200I\340r\332H`\234qI\240\305\271I\300\340\017I@\034\027I0^\242I@\013\226H\300mGH\360e@I@{BH\300\004tI\000j\257H\020\310\001I\340\026\234H\300\313\255H\360i\216I\240\234\232I@h\rH\240O\370Hx\226\241I\000\334\305H\020\022zI`\363\014I\000C\204G\010\220\251Ip\tPIH&\203I\000O\344I\200#\341H\000\201\214I\000J\245H`\254\216H\340\2555I\340j2I\200\332\332H\300,\370H\240\3464I\200\314\320H\200E\372H\270o\235I`^\351I\240\223\240I\300\227\256H\"\336\274J\200\313\334H\270m\210I`\211\315H\200\031\177H\320O\177IP\262gI\000\335\\Hp\320lI\n<\315J\000\266\034I\320\005\037I\200vJI\270\374\355I`x\307H\000\364\253H\200\026sH\240OnI\000\304+I\330\240\207I@T/J@yHH`j\227H\020\215TI0LvI\200\214\334G\300\\\223H\000x\201H\260Y\025I\200\353CH\340>\261I\2407\361H \224\307H\200\031OI\200E\354H\200\263\315Gp\010WI\032\037\225Kp\232\321I A\204H\0002\325H@\265\310HP\n/I\260\r\017I\000\230\231H\200e\300H\3600gI\200\352!J,\332mJ\360\322\004I\240)\244H\020\215\030J\220\r\005IH{\230I\260w_I0H]I\200\307\036J\020J\014Ip\224\023I\300Y\343H`\275\344H\220i\306I\300\334\303H\000\345\252H\340-nI\000Y1I\260\0351I \305\201HH\347\251I@z\323H\000\317\234H`0\241HP\274\003I\200\342uH\000\020\242H\370E\217I \243\202H\270\254\010J\340$bI`\363\320H\3201JI\200UlH\200\241\256H\020\217+I\300\036@I\300\3703Hp\3252I\200\221\364Hp\212\002I\300b\366H\360\376QI\000\3646I\340\336\377H`\307\305H\240A\241HHU\200Ixb\235I\300\r\251I`\'\233H\000\326jG\240\327\220I\220\313+I\320\3738I\200T\267H@]\343H\230\346\335I\300\360\031I\370\353\273I04]I\200\033?H\200R\237H\340\337\202H`\371}I0\0021I\3005YH0}\\J\200\031\227G@\267\232H\340\377\324H\340XCI@8hI\260Y2I\300S\204I\000\022\314G\200\016\342G\300\264\310I0\342/I@\325\314H\350\253\271I\340$UI\320\342aI(R\202I\320\234kI\\\2461J \311\252H@RMI \273\353H\020\304-I\340\367\333H \'\303I\200\346yI@SnI \024JJ\340\345\224I\300I\333H  \236HP,\001IP\n`I8\271\200I\000\014pG\020\300\010I \351RI\300\366\313I\020\215\035I \264\211I\220\343OI\260_PI\000\005\256H`\357\343H`=\336H@v\213H\010\325\322I@*\315H\340\305\201H\240\372\200I\320~\263I\300.?I\000\211pH`\020(I\000_\331H\230K\007J\0102\215I\220\372pI@\356*I \373\265H`T:I \350sI,\017\246JP\377\330I \0218I\320\371\016I\000\326\033J\360|\001I\340\371\312H\240\026\017I@\347\023Ih\031QJ@-\371I@UnI 6\270H\200\371sH\000t\014I0\007\333I\020J\000I0\353JI\250\344\213IpS\020I\2006\241H\300\251\277H\340\2659I`M\352H\300\0175I\200W!I\200#\264H\240\250%I@\323\247H\300gUH`\240\336H@\301\032I\240z\035I\030_?J \353\230H@\353OHpS\221I\300\254~I\300\247\322H\200\321\335H@*\351H\340\371\274H`\177\272HA\006\031K`H\033I`\263\321H0\227 I\200\323\177H\240V\266H@1%I@\341VH\300S\336J\250w\201I\000\034\000I\300\325\261I\200\261\327J\250\214\217I\240VPI@&5I\200g_H`5\020I\000>\333H\000xOI\310R\325I@|\007H\000\021\201H\320\3208I\340iBIP\354SJ\300^\010J\300\244UH\230\254\225I\000\352\304H\260\316@I\220\361\021J`\032\022I`\204\231H\000\004\227H\000\007+I\220\205\346I\360\312\207I`\256\364H\200B\223H\250\266\204I\020\336FI\250V\202I\340\"\275H`\275zI\240\227\360H0R\223I\350\242\256I\000\3479I\360\326_I0\257\010I\240\273\265H\224\216?J\200-]I\260\202\003I\260\346\036I\300\310\337H\300\3375J\240\206|I\200\031\262H\340`\237H\200\202\227I\350\'\202I\200\315\rI\020O#I\340\017\210H\200\250\020I0z\256IP$\030I\000\272\321I\240*\201Hp\016%I\340\2223I\340\276\343Ip\345?J\200\016IH``\267I\020\377\246I\320ASI`l\357H\344P,J\220\340\302I\240W\244H@\321\034I`\367\225H\240\277\303H\340\026%I\340\225\367Hp\255\203I\320\331\233I\220\223\000I\020m\023I\370\235\346I\360\350SI 5-I\340Z<I`\325\216H0\'pI\310$\244I\200Q\274H\000\003?H\320\002~I\000L\242H\340\230VI<\362\010J \302\214I\324\256\203J\310\3737J\234WaJ\300iKI`\345\253H \324\034I@&\314H\200\3171I\260U\027I\214\2313J8\352\325I \237\240H\000\377\320H\240\342\321H xXI\340\t\337HX\331%J\300D\032I\370\"\334I \252\317H \031<I \014\201H\000C\017H\340G:I\350\004\241J\340\030\224H`\207\330H\300n\315I\0205\031I\200\366\242Id\343\002J?\366\027K\274i?J\200\231-I\020\276$It\010\021J\240x4I0IDI\240\322EI\260\331\035I\000\227gH\020_#I\000\022\243H\300\272\330H\3002\300H\2009\243H\200\033\324I \243OI\000fYIh\264\266I\200\016\301I\034E#J\300\271\267H\350\032\227J \376\nI0\306uIP\353TI\030\014\001J\240\227\272H\200\033KH\200\nBH\230]\371I\000\027\242I@,\'HpH=I\310\322\034JpQ-I\030\375\203I\260S>I\300\266wH`\246\274I\320a\243IP4\033Ihd\217I\300\233\023I\200\007&I\370\343\244I@\330\222H \217\272HX\211\233I`\247\303H \322\204I\300U\340H`\036\335H \315\256H\340\033\334Hx\237\205I\310\334\207I@\204]I\360!8I e\367I@\2060I8~\256I`\365$I\200q\007H(\007\210I\000\213GH`\261\247H \372DIp\235kJ\210[\037J\200\232\357H\330\"\305I\000\243\311H\320FPI04\014I\310\026\213I@\232IH\320v|Ip,\252I\300\224\251H\240\347\245H\240\270\313H\330z\225I`^\\I@\352\244H ^\345Hb\005\377J\340\317\021I\300\\qH\340\251\032I`|\233H\200\'\342H \323\235H\3407(I\210\272\264I\310\253\213I\000%\020HP\277\306I`M\013I\010\302\004JH\257\375I\220+bI\000\212\022H\240R\252I \300\256I0\260wI\220;nI@qiH\200\322\323I\300\327\357H\030S\226I\000\302\323H\240{=I\300\'\'Ip\252YJ\370\030\323IH\004\343IP\007fI`\344\334H\200\242\005I\364\232>JpX~I`k\372H\220.\034I@\t\276H \206AI\300\373\372H \'\335H\350\246\272IH&\231I\240\004\226HP\036\nI\240\364\304I`KdI\320\220BI\250\235\323I\370\362\317Ip\251pI0#\"I\220\007\257I\340;\325H@\'mH\340\217\227H\240\214\266H\240\243\322Ip\257\014IP;\020IP\234\205I\240\305\326H8&\334I\200r\370G\260*\034I\300\202\237H\240i\306H\000\t\201H`G\345H4\010\023J a/J@\270EJ\0006LH\200\3125H\240\333\257I\300\t%H`\344\'I\200\255~H\020\207\022I\000\243\321H \223?I\200\272)H@5\357J\220\2702I0\367\310I\360aII\270\347\255I B\214H\240\247VI\320\034\330J\200\002\375H\010\2310J\3000\370H\340\234\tJ\300@(I\340{\326H@\220eI\320s`I\244\365\002J@\216\260H@\262\rIP\212\232I\350\252hJ\000\350\365G\200\0067H@\321YH\000\013\250H\3603\000I\340\034)I\320\006\206I\300A\273HP\'TI\370\363\215I\360\212\033I\340\255\346H\220\252#I\010\332\230Ip=`I\340\231\212I\300g\023I\310\211\200I\240\316\270H\000\204\035I\240}\336H \031\202H\260\033\'I\000?UH\250@\261I\320\025LI@\205\277H\360E9I\260iCI\240;\267H\310\271\241I \352\251H\300M\201HH\004\234I\000\037\300H@>\374H\340\254pI\214\325\242J\360\273jI\300\360\331H@\224\321H\200\t*H`5\273I\000)\256H\200\337\347H\350\002\267I\240V\306H\360\261\007I\020o/I\300\222\321I\320\034:IH\r\253I\240\226NI\360\243\322I\240\327\236H0\224\034I\200\365\306H\200{\177H\210\034\332Ix\362\233Ip\335\031Ib\343\217J\374\327\'Jx\372\273I\240\230\300HP\243\'I`\024\362H\220%\332I<\367\014J`x-I@\255\351H\200iAI \312\305H\360\305\261IP\003\205I0\252YI\260\223\201Ip\232mI\210\242\232I`\356\357I\340\237\205H M\207H\000\377LH(,\241I\274\232*JP\203AI\300f\311H\220\232\002I\340\316(I\220\235\200I@\247UH\340\330PIPa\032I\260\377dIz-\223J\300\024\034I\200\021uH\240\205\315H\240W>I\300\235\331H\260T#I\200J7H@^\262H\200_\223H\340\267\331H\210\307+J\250J\327I\010\206\221I@\2344I\336/\227J\240\351\264H\010\227\213IPj\177I\000\312HH\320\375\025I\360\224\211I\240\321\242I\200_wH\254\245\'J\240\036\264H\220d\307I \016\032I\240HCI\270t\255IP\305\036IP\324xI\300\341\'I\200V\357I\340\316\272H\200\350\264H@\343\373H@K\006I\300\024\356H T\323H@\375 I\0005>H\220\375\013I :\233H@q[I q\223H\300V{H\3203&IP\302uI@\323.H\340&\243H8\030\265I`\270\343HXv\211I\360\360\"Ip\327 I`4\223HX(\232I \327\246H\320\250\036I\340Y#I\220\010&I <\227H\300\300\260HpT\021I\320;tI\200\261\031I@\365TI\240\354\270H\340!\006I\220\253\344I\000\273]HP\022\215I\000 (Hp4_I \217\026I\240\367\001I\000\257\300H\320\236!I\360\323\005Ip\337TI\010+\225I05\301I,\366*J \361\224H\300}+H\300\227\017I`\255\305H\0208vId\253\"J`o\265I\300\243\317H`^\264H\000\"\"I\334(_J\220\3260I\020\256&I8\217\221I\320\257\003I\300\2541I\200\277\321H@\3114I\000\266\031H \005.I@\326\253H\340\303\306I\320\335\017I@\267\212H\300>\275H\234\231\204K0s\231I m\303Hp\247]I\200\345SI0A+I \250\'I\320\2428I8l\374I\340\305\377H`\326}I\240\007\034I\340\262\224H\034\222\201J 1\302H`\031fI\240\226\206H\300v\315H\260\310]IPQ\026Ip\n\177I`\305\200H`\261\313H@\214zH\300\241\250H\340\263\240H\200\323?H l\024I\200\216eI\240(\337H\340=\215H\000\276:I\320\'vI\320\010\000I\240j\257H\2002\372H\360\024\330IP\353\202I\000\247\227H@h\256Hx!.J@\3307H\340\304\020I\020\037TI\300\016\'H\260\025cIpu\277I\000\n\231H`\201\220Hp\361fIP\346\304Ip\334cI\300I\177H\300L\tI \257\207H\340\2124I\320\222\316I\340\241#I\200X=I(j\264I\020\013\261I\200]\'H \334\005IT\322\244J@\256eI\200\246\025H\300E\224HHE\201JP\221&I \223?I@(\'I\240U\323H\220{IIp\304NI\000\356\234I\300\\YI@S\321H\360#.I\340\035\215I\020}\254I0g\201I\000\210PI\340\017\005I0\271.I@\261\201H`A\226H\000\023\257H\250\0236J \232\252H`\363iI@Q\205I\240%\273H0\010\030I\220%uI\300\2234I \355\351H\200#@I\200\232^I\224\344|J\200N>H\360\021\277I\020\330\242I`\027\366H`\266\250H\3000\024H\320\2219I\270U\205I@\267\257H\340\243\323H\360\0004I\340\035\017I\220B\016I\340\307\320H\200Z\257H\360\326II\020y\340I8\'\321I|\0147J\220\371-I\320\300=I ]\240I\210\247RJ\260\243IJ\300\321BH`\222\257H+\202\024K0\344fI\250K\243I\020\036NI\330\0259J\200\352\343H \363XI\000zIH \210\022I\300\005\001IX\245\216I\000\006\242H\200\2768I\220\365\204J\360\275eI\254\351JJH\027\264I@U\036I`\321\357H\000;\252H\000\373\006I\306N\214J\340\020\304Hp\337\214I\340\353\212H\300\304\267H@\332\022H@}bH\340\311\007I\020#\002I\000\320\364H\240\332!I\200#\207H@\322\250H\000\022DI\200\206\257H\300\203SH\000-&I\220\334\260I \245\360HP\315@I\000~\240Hp)fI\200\034VHp\312II@M,I n\220H\210FGJ\330\304\201IP\377\032I\200\004\363G\240%\000I\030\227\230I\030\317\265I H%I@\024\374Hf\372\234J85\234I\2447,J\220\266\275I\340\001\310H\3305\215I\300\014\366H\300b\272H\340\236\254H@o9H\000\337\210H \206/Ip\255<I\200\363<I0\025$I\340\0213I\014t\014J\260\013\032Ip\235\023I`\260ZI\300\202\231I\210\345\010J\300?yI\240\351\231H0\275GI\200\360\364H\240{xI\000X\205H\300\032BH\300\355\210H@\345\265H\000\340*H\340\201\335H\220\'\nI\240\021\202H\340u\306H\020\207PI`\256\rI@\034\311H\220D\007I\200\037\266Hp\240]Ip\211)I(\307\215I\3001\001H \343\243H@\321\254I\260Z]I@O\225H`\035\036I \003AI\200>9I\360tBI@<\201H\320s$I\340\374\245H\360rXI \2668I\210\266\272I \374?I\220\353\022I \2108I w\332H@\271eH@Z\346H\320\367rI W\264H@y\022H\340\376\262H\020a\031I\000\207TI\000aEIN\014\263J\30012I\340\340EI\200h\200I@+\006H`\351\221H\300\233\017J\300]mH\240\023\270H@\373kI\300\224\006I \362\233H\020:\004I\340b\355H\030\374\311I0\316\240I\240\034\266H\240/\337H\0001yH0\377\236I\340ExI\260\023\030I@\300\360J\200\375sI\340\234\366H\300\2520I\370\264\224I\340\n\353H\244\\\026J\020\376\003I\220(\013I \345HI\240y\337H\200_JH\000\245\362H\020G\022I0\304%I\200Y\217H\300U/H\2008\233H\220\217yI\360\3238I\300\364\224H\034\255\'J\240\313\272I@[\252H\200F5J \254\224H\340\310\365H\200\016\303H\000\324\243H \230HI\200\007\264G\300M>Ip\352\023J\000\322RI\220\266YI`\005\266H0\3514IPS5I\270^\222I0\300\rJ\240\313FI@\000\262I`\272\240H\320\243:IP\356sI\340\177\314H\340\272\301H`\361\241H \rGI\360J(I`\204\323H\360\317=IpW\034I\000\357\340H\230\314\266I f`I\360W(I`\246\321H(\231\213I0;\005I\200\357+H\270\317:Jxw\244I\000\374\260H@^\250H\360\302NI Z\217H\200Q&H\200sYH\300\202\312H }\005I \335\027I0\273=IB\243\347J\260a\023I\240\231\214H\014\255\tJ\340\257\263I\200<eIP\334ZI0WIIP1\002I\020\327\017I\260\353\034I\000\343\207I\360\t\017I \301\256H\000 \254H\340tLI\200\237\241H\240\375\232H\240\262\261H\366\022\210J\320hOI`\374\260Hh@\224I\260\177\231I`\006\370I\340\021\221H\000q\336H bKI\360\204NI\000\n\221H\300.\335H\260u\'I\300\360\306HP\235.IPw\rJ\270:\207I\000#\033I\340\257\310H\220ybI\200\332\363H\320\276<I\220\354BI@\004\235H\000\317pG@\326\006I\200\034\344H@\232\031I\216\244\253J\340O\344H \366\220Hp\313\006J\210e\255I\240m\320H`\\\214I\000\243}H\260q\207I\010\304\241I\020\376\007I\340pFI\300\341\014IXG\232I\360I\031I@8\276I@8\rI\300\255pH\360l!I\360]CI\300\216\231HP\301\200I\270\354\225I\000\326\272Gp\317\235I b\260Hx\363\305I\010\307\275I\000\001QHP\367qI\330\245\201I\200\257\271H\300\231\227H@ETH\300Y\351H\000\250TI\300>\017I\300\037\310H\330\225\200I\270S\333I\200\244pH\310\206\237I\240\377jI\200|MHp&yI\210\034\262I\204\0247J(\337\222I @\301H\200\350*H0\362\030I0\356\033I\300g\366Hp\310.I@\'\225H\200\252\010I`\254\373H\320HII\320\333\035I\300\234\342H .\276H@~\265H`0\245H\304g*J\256l\226J\020_9I\300\250\rI\204FIJ8\237\027J,Q\021J\000#\000H`\255\241H\300\273TH\200\376\322Ip/FI(T\224I\320\204&I\220\220!I\340\307\010I \353\344IP\263\331I\240\023\375H \035\273H\220\352OI\000N\270H\250\003\241I\340\343\031I \241\324H\240\372\nI\240I\362H \325\240H\230gmJ\000\214sI@\362BI\000T\255J\260w(I\220`]I\210\315\226IP\3776J\240\243\276I(G\220I@\277mH\360\257\235I\000\244`H\240\266UI@r\200J\340\n\325H\000ezI@\3330I(\370\230I\030\325\261I\200\254\221H\240\330\346H0\2738I`d\203H\200n\206I\314\n,J@f\247H\340\314\256I\344\351#J\340\366OI`s\013I0\323\313I0\013\221IH\030\273I\200IEH\300\n5I\324\250=J\270\303\000J\340\274II\340,$Ih\365\327I\220\2324IP?\243I\000\025\001I@\215@I\020\361hI\240\367\214I@^\206H\360\344\210I\240\332(I\300%\364H\240E\236H \367\227H\020eAI\340\234\373H\260\261\016I@\214\214H\200\224\\I@\300\322H\340(\200H@\221\315HH,\246I\000\356\255H\200A\206H`\3652I\240X\271H\200,\337H\330\320\207I \2675I\000\224\231H\300\033#I\240\372jI\240\231\276H\3509\310I\200\335\260HPu\014I\000\311\222H\240\244!I\360\334JJ\00075J(\321\225I\240\250\313H\300\204HH`\005\205H\240\373[I\020\355\034IP~\"I`G\274I\340\267$I\200\221$H\030@\326I0\025MI\300\t\313H\300\n\267HP~=I`\210\306H\300\353\256H\340\257KI\000u\214H\000~\241HP\336SI\000\250MI\200\354eI$dxJ\250<\236I\000\264\355H\200\007dI\200\004)H\200J\360H \003\224H8\327 J\200\365:H\010\364\330I\300\302\022I@k\335H\000\351\241H0\250+I@4\371H\260\214EI\300\000OHl\211!Jh7\016J \332eI\220\350\001JP\222WI`\201\261H\320\323mI\300\365>Ip\257\213Ip\221\003I`\336\206H\0003HH\240\257\355H`\252\025I\200\332\226H\300}\337H\000\2060I\300\242\232H\220[eI\000+\\H@\037\210I\300\305\374H IoI\200\361\202H\200\364\365G\300\345\217H\240v\263H`\302\244H\220\311?I\220r\rI\030\372\252I\2003\262H\240f\310H\320\302pI@\360\240H@\253\373I \006\212I@#\374H\364W\nJ\000\026\257Htq\tJ@\344nH\000\352\314H\330\355\203I\000@\256H\240X\210HH\360\251I\000{\214I@\316*I\0007\305H"
      }
    }
  }
}
node {
  name: "Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
        }
        tensor_content: "\000@\203E\000X\243E\000\020\316E\000\000\000\000\000\340\275E\000\010\004F3\223>F\000\220>E\000\270\367E\000x\300E\000\310\331E\000\250\302E\000\030\277E\000x\235E\000(\252F\000\370\241E\232Q\201F\000\000\000\000\000`\207D\000\000\000\000\000(*F\000\300\331D\315\3047F\000 dE\000\360\260E\000\340ZE\000\360\352E\000\300\370D\000\014\005F\000\260\336E\000\320\014F\000 \210E\000\310\331E\000\260\304E\000\240\276E\000\340\361E\000\340\235E\000\220\276E\000\200;E\0000\314F\000X\243E\000\220\276E\000\360\260E\000h\304E\000\000\000\000\000\270\225E\000\250\202E\000 \277E\000\360\203E\0000\314E\000P\001F\000\000\000\000\000X\235E\000@\316E\000P\001F\000\200\032F\000(*G\000,\273F\000\220\227E\000\252\262G\000\340\235D\000\020\016E\0000\314E\000h\347E\232]\264F\000\220\276E\000\000\000\000\000\000\000\000\000\340yE\000\010\306E\000\210\034Ff\3660F\000\340\235E\0000\214E\000\270\225E\000d\005F\000\000uE\0000\034E\000\000\000\000f\362\237F\000\370\333E\0000_E\000\000uE\000\320\004F\000X\243E\000 \010E\000\000\341E\000\330\273E\000@;E\000\000\365E\000\004\017F\000\000uE\000`[E\000\000\000\000\000(\252G\000\000\341E\000\370\241E\000\240\014E\000h\347E\000@;E\000 \210F\000\320\312E\000\240\272E\000\000\000\000\000\000\330E3\005\003G\000 \010E\000\304\nF3\0216G\000\256\303G\000\000\000\000\000X\243E\000\340\222E\000\220\276E\0000\275E\232Y\243F\000\020\327E\000\000\000\000\000\000\000\000\0008\206Ef\372\301F\000\000\000\000\000\330\212E\0000\250E\000 \320E\000\210\234E\000P#E\000\360\307E\000\334\025F\000\000\000\000\000\000\372D\000\220\276E\000\300YE\000\000\000\000\000 \010F\000\310\331E\000\360\260E\000\270\225E\000\270\346E\000\000\000\000\000\000\341E\0000\314E\000 [E\315>\036G\000\000\000\000\000$\231F\0000\314E\000\000\337D\000\200\"E\000\000\257E\000\220>E\000\000\000\000\0000\214E\000\000\000\000\000@NE\000T\"F\000P\303E\000\020)E\000\360\327E\000\220\276E\000h\347E\000\334\033Fft(G\000\240\252E\0000\314Ef\376RF\000\310\365E\000\000uE\000\030\007F\000\220\276E\0000\314E\232Q\201F\000\000\000\000f\3660Ff\372\301F\000h\266E\000\220>E\000\310\331E\000\000uE\000\300YE\000\000uE\0000}E\000\360\260E\000\0000B3\314\240G\000\000\000\000f\376RF\000\000\000\000\000\340\177E\232aEF\000h\347E\000`\321E\000\000\000\000\000\320\214E\000\310\331E\000(*G\000\320\004F\000\320\312E\000\000\000\000\000\300YE\000\240\245E\000\000\000\000\0008\310E\000\3007E\315\3047F\000\000\000\000\000\260\320E\000\200\273E\000\200TE\000 \210E\0008\203E\000@JE\000\220\276E\000`\205E\000\240\232E\315\310\310F\000\250\263E\000(\252E\000@\234E\000 \210E\0000LF\000\000\000\000\000h\347E\000P\001F\000\240\002E\000`\307D\000\000\302D\000@\332D\232Q\201F\000h\327E\000\030\313E\000\320\312E\315\270\204F\000\210\242E\000\220\276E\000\320\tF\000\270\367E\000\320\004E\000\250\326E3\213\034G\000\000\000\000\000\000\000\000\000h\347E\000@\242D\000\000\000\000\000\000\000\000\000\224\036F\232igG\000\000\000\000\000\000\000\000\000\000 F\000 \210E\000@\034E\000\010\222E\000\000\000\000\0008\316E\000\240\245E\000\000\026F\315\274\225F\000T\022Ff\3660F\315\324{F\000\000\000\000f\356\216H\000\210\307E\000\270\354E\000\000\365E\000\000\000\000\000\270\225E\000\200;E\000\310\342E\000\210\234E\0000\314E\000\350\316E\000(\252F\000\000\000\000\000(\265E\000\000uE\232\323\tH\000(*G\000\220\276E\000\220\276E\000\320\363Ef\376RF\000\330\273E\000\000\000\000\000\000\000\000\000H\373E\000\240\221E\000h\347E\232eVG\000@\243D\315\314YF\000\330\204E3\233`F\000\000\000\000\000\220\276Ef\006uF\000\220\276E\000\000\000\000\000\330\273E\000\000\000\000\000\030\027F\232U\222F\000H\325E\000P\225E\000\200;E\000 \010F\0000\314E\0008nF\000\000\000\000\000\000\000\000\315\270\204F\000@(E\0000\314E\000\242\020G\000p\273E\000p\273E\000@\354E\000\320\363E\000p\273E\000`\204D\000\020\300E\000\2522G\000\240\014F\000\300\332E\000\360\033E\000\030\270E\000\310\331E\000@\234E\000\000\000\000\000\310\360E\0008\256E\000\320\231E\000\000\341E\000\200+E\000@NE\000\260\202E\000x\272E\000\240\203E\000\010\357E\000x\272E\000p\007F\000 \010G\000\220\351E\000\000\000\000\000p\273E\000(*G\000\300\315D\000\000\000\000\000@\234E\000h\347E\000\360\307E\232U\222F\000\200TE\000\340\347E\000h\347E3\213\234F\0000\314F\315\324\373Ff?\327G\000\310\331E\000\310\250E\000\300YE\000\370\207E\000X\304E\000\004*F\000X\243E\000\230\330E\0000\314E\000\000\000\000\000P\262E\000\230\340E\000h\347E\000\000\000\000\000\000\365Ef\362\237F\000X#F3\223\276F\000\000?D\000\210\234E\000(*F\000\310\250E\315\274\025G\000\000\000\000\000\220\273E\000X#F\000\000/Ef\366\260F\000\000\000\000\000\340\235D\000\250\360Ef\372AGf\006\365F\000 \010F\0008\316E\000\300YD\000\340\335E\000\000\000\000\0000\314E\000x\214E\0000\305E\000\000\365E\000\210\210E3\223>F\000\300YD\000\300\331D\000\320\266EzS+I\000\300ZE\000\030\nF\000\310\331E\000\000\000\000\000\210\234E\000\374\001F\000\264!F\000\000\026F\000\360\271E\000\310\331E\000\260\207E\000\220\276E\000\000\365E\000\274\025F\000\000\000\000\000\210\242E\000\310\331E\000\220\276E\000\310\245E\000 \010F\000T\022F\000\230\351E\0000\314E\000\200+E\000@\316E\000\000\365E\000\340\324D\000\220\276E\000\000\000\000\000\270\225E\000\000\365E\000\300\256D\315\320\352F\000\230\254E\000\360\260E\000@\237E\000 \210F\000\0002E\232Q\201F\000\000\000\000\000\210\234E\000P\rF\0000\314E\000\020\032E\000\000\000\000\000X#F\000\320\373E\000\000\000\000\000\000\000\000\000(\333E\000\000\000\000\000\270\225E3\213\234F\000\000\000\000fl\006G\000\300\250E\0000\314E\000\020\246E\000\330\212E\0000LF\000\310\250E\000\360\260E\000@\034E\000h\347Ef\376RF\000H\301E\000@\243D\000\240\214E\000\220ZE\000`\321E\000\220\276E\000\320\373E\0000\314E\000\340`E\000(*F\000\300ND\000\000\000\000\000\024\006F\000\200;D\000\000\000\000\0000\375E\000\240\313E\000\000\305E\000\000\304E\000\200\331C\0000\314E\000\220\276E\000 \010E\000\000\000\000\000\360\260E\000\274\025F\315\310HG\000\234\014F\000P\001F\000@\234E\000p\255E\0000\346E\000\000\000\000\000\000\000\000\000\000\000\000\000\260\373E\000\000\000\000\000(*F\000\300\031F\000X\243E\000\360\033E3\223>F\0000\314E\000\000\000\000\000\220\357E\000h\316E\000\274\025Ff\376RF\000\000\200?\000\000\257E\000\330\273E\000X#F\000\000\257E\000\310\331E\000\000\000\000\000`\337E\000\220\276E\000X\243E\000 \375E3\223>F\000\250\263E\000P\251E\000\000zE\000(\333E\000\000\000\000\000\260\017E\000\000\000\000\0000LF\000\000\000\000\000\200\253E\000\224(F\000\240\327E\000\300\267E\000\210\234E\000\360\260E\315\324{F\000\000\000\000\000\000\000\000\000`mE\000@\034E\000|\tF\000\270\225E3\223>F\000\000\000\000\000\010\333E\000\034\006F\000``E\000\270\225E\000\000uE\000\000uE\000`\013F\000X#F\0008\356F\000\330\273E\000\200\250D\000P\241E\000(*F\000P\001F\000\000\365E\000\000\000\000\000\274\025F\000@\324D\000\260\325E\000\010\257E\000 \210E\315\3047F\000\360\260E\232Y\243F\000\030\371E\315\324{F\000\300\267E\000\000uE\000\200PE\000\020\264E\000\030\313E\000\340\304E\000\000\000\000\000P#E\000(*G\315B/G\000\200\273E\000H\260E\000\220\276E\000\200\331C\000\300YE\000\220\373E\000\240\374E\0000\314E\0000\314E\000\320\373E\000h\347E\000\2522G\000h\365E\000\030\371Ef\362\237F\000\360\260E\000\000\252E\000\220\276E\000\320\031F\315\274\225F\000\020)E\0000LF\000`\334E\000\000\000\000f\362\237F\000\300YD\000\220\276E\000h\347E\315\300\246F\000\300%E\0000\314E\000\220\276E\315\304\267F\000\010\305E\000\000\000\000\000\000DE\315\3047F\000P\021F\000 \210E\000d\037F\000`\351E\000q\320G\000@\243D\000x\367E\000\000\000\000\000\270\225E\000p\207E\000(\276E\000\350\253E\0000\275E\000\200\273E\000\240sE\000\000~E\000\000\000\000\000\2207E\000\000\000\000\000\200\331C\000@\242D\000@\037E\000\000\365E\315\3047F\315\3047F\000\300\331D\000\200\253E\000 \210E\000\000\000\000\000 \036F\232Q\201F\000p\311E\000\220oE\0008\316E\000\000\365E\000X\243E\000\020\177E\000\350\277E\000x\353E\000\220\276E\000\020\267E\000\000\000\000\000\310\331E\000\000\226E\000\000\365E\000\000\365E\346\234LH\000\230\305E\0000\314E\232aEF\0000\314E\000\240\245E\000\260\232E\000\350\216E\000\360\260E\000\240\014F\000\300YD\000\320\312E\000\360aE\000\000\000\000\000\300YE\000\200\276D\000\000\372C\000\000\000\000\000\220/E\000\210\034F\000\000\000\000\000\200\342E\000\340\341D\0000LF3\207\213F\000\000\000\000\000\300\245E\000p\273E\000\000\365E\000\200\365D\000h\347E\000\270\225E3\223>F\000(\237E\000\340NEf\3660F\000`\305E\000\020\275E\000\010\"F\0000\314Ef\366\260F\000\210\234E\000\324\023F\000\370\201E\232Q\001G\000u\341G3\223>F\000 \210E\000\3600E\000\004$F\000 \210F\000\200\262D\000\000\000\000\000X\243E\000\000\000\000\0000dE\0000\314E\000x\372E\000\000\000\000\000\370\252E\000\234\031F\000\220\276E\000\300\032F\000\300\332E\000\030\277E\232aEF\000\000\000\000\215*\214H\000\200\tF\000\000uE\000\000\365E\000 \210E\000 \010F\000\370\322E\000\270\225E\000\000\000\000\000\000\000\000f/\223G\000\300\332E\000@\234E\000\000\300D\000\000\000\000\000\274\025F\000\270\225E\000\000\000\000\000P\303E\000\010\357E\000\000\000\000\000\330\273E\000\350\316E\000pzE\000\300\033E\000H\302E\000\340+E\000\340\177E\000\250\263E3\213\234F\000\300\332E\000\364\007F\000`\237E\000P\001F\000\354\016F\000\270\225E\000\270\225E\000\300YE\000\310\331E\000\300\331D\000\200;E\232Q\201F\000@\237E\232aEG\000 \'E\000\270\021F\000\310\331E\000x\211E\000\000\254D\232Q\201F\000@\314E\000\000\007F\000X\243E\000p\311E\000\270\225E\000\000\000\000\000P\001F\000\200\273E\0000\327E\000\000\341E\000P\001F3\223>F\000(\027F\000\200\037E\000\340\214E\000\260\344E\000\200\350E\000P#E\000 \313E\000@AE\000\214 F\000\360\271E\000\300\332E\000\310\331E\000\340\340D\000\220\276E\000\000\362E\000\200\273E\000X\243E\000\200\371E\000\000\000\000\000\020HE\000X\324E\0000}E\000\220>E\000\220\276E\000\000\000\000\000\230\257E\000\010\257E\0004\017F\000\210\034F\000\330\027F\000\330\273E\000@\331D\000d\025F\000X\243E\000X\324Eft\250G\000 \352E\000\200+E\000\260\274E\000x\351E\000\220\276E\000\000uE\000\3007E\000\310\250E\232Y#G\000\330\273E\0000\314E\000\200\273E\000P\262E\000\300\331D\000\010\346E\000\220>E\000\310\331E\000H\tF\000\220>E\000\220ZE\000\000\365E\000\010\240E\000\310\331E\000\200(E\000\000\226E\000\220\276E\000\000\000\0003\213\234F\000\340\340D\000\320\nE\000\000\000\000\000\020<E\0000\257E\000\210\034F\000\210\034F\000\000\177D\0000\014E\000X\243E\000\200\276D\000\000\000\000\000\250\245E\000$\231F\000`mE\000`\227D\000\000\000\000\000\360\372E\0000LF\000\310\331E\000P\317E\000`\277E\315\314YG\000\000\000\000\000H\260E\000\320\312E\000\354\016F\000|\023F\000\030\213E\000\300\331D\000\360\260E\000P#E\000\300(E\000\000uE\000\000\000\000\000h\352E\000\320\202E\000\340yE\000\000\000\000\0000\314E\000\000\000\000f\3660F\000\354\016F\315\324{F\000\000\000\000\000\000\000\000\000\000\304E3\233`F\000\300\250D\000\020\316E\000pzE\000\220\276E\000\340\027E\000\240 F\000\000\304E\0000\314E\000h\347E\000\240\021E\000`\237E\000\270\306E\000\310\331E\000@\234E\000(\265E\000H\336E\000\200\253E\000\000\000\000\000h\352E\000P\004F\315\324{F\000`\352E\000@\034E\000\000\000\000\000\330\375E\000h\347E\315\300\246F\000\220;E\000\220\020F\000\000\000\000\0000\010F\000h\352E\000 \033E\000\360\260E\000\370\201E\000\300\037E\000@\034E\000 \210E\000\300YD\000\000\000\000\000\000\000\000\000 \375D\0008\316E\000h\347E\0000\314E\000\000\000\000\000\340\235E\000\254&F\000\270\225E\0000\254E\000\340yE\0004\034Ff\376RF\000P/E\000@rE\000P#E\000\000\372E\232aEF\0008\372E\000L\000F3\223>F\000\000\000\000\315\314YG\000\000\000\000\0000\314E\000\270\225E\000\210\234E\0000\013F\000h\347Ef\3660F\000\300YDf\3660F\000\220\276E\000\300\331D\000\000\000\000\000\270\225E\000\360\260E\000\200\273E\000 \010G\000`mE\232\343MG\000H\220E\000\000\344E\000`\305E\000\020\200E\000\240\332E\000\000\000\000\000 \010Ef\3660F\000h\347E\000\370\330E3\233`F\000`\275E\000X\243E\000@\010F\000\214\034F\0004\335F\000\220XE\000\220\262E\000\260\301E\000\200\331C\000\360\260E\000\000\000\000\000`\352E\000\320\304E\000\340\377D\000\000\000\000\232igF\000\000\365E\0000\314E\000\000\000\000\000X\030F3\233\340Ff\362\037G\000\000\000\000\000h\347E3\r\245G\000\300lD\0004\335F\000\260\023F\000|\013F\000\000\301E\000(*G\000,\273F\232\246ZH\0000\314E\000\250\023F\000\300YE\000\210\034F\000\300YE\000\000\000\000\315\3047F\000\000\000\000\000@\016F\000\000\000\000\000\240\000F\000h\004F\000 \210E\000H\301E\000\000\000\000\000 \266E\000\270\225E\000\250\302E\0000\375E\000\220>E\000\000\000\000\000x\366E\000X\243E\000\310\305E\000\240\232E\000\310\331E\000\320/E\000\220\276E\000\000\000\000\000\000\277E\000\300YE\000\000\365E\000\210\234E\000@\243D\000\354\016F\000\000\000\000\000\000\000\000\000\200\205D\000X\243E\000\000\000\000\000h\347E\000\000\031E\000\360\260E\000\000\000\000\000\020\327E\000\270(F\000(*F\000 \236E\000\260XE\000\000\365E\000\270\225E\000\320\312E\000\300SE\000\020\246E\363\010WI\0000.E\000X\203E\000`aE\000P\001F\000\200(E\000\000\000\000\000p\030E\0000\372E\000h\352E\000\000\000\000\000\330\273Ef\372\301F\000\250\302E\315\001\253Gf\362\237F\000h\014F\000\\\003F\000\220>E\000`jE\000\320\310E\000\210\242E\000\000\000\000\000\000\000\000\000@\034E\000\254\013F\000\360\260E\0000\314E\0000LF\000H\301E\000(\035F\000\310\331E3\217\255F\000\210\034F\000\340\320E\000\300\006F\000\340yE\000\360\260E\000\200\276D\000\320;E\000\000\304E\000\030\215E\232\337<G\0008\337E\000\000\350C\000p\204E\000\354\016F\000\010\004F\000\260\244E\000h\347E\000\200}E\000\234\014F\000 \352Df\006\365F\000X#F\000@\243D\315\300&G\000\000uE\000\330\273E\000`\237E\000X\243E\315\320\352F\000\340\335E\000\300YE\000 \344E\000`\371E\000 \210E\000\274\025F\000\350\347E\000\370\241E\315\324{F\000\220\276E\000\000\000\000\000\370\357E\000\200TE\000@\234E\000\020\275E\000\357\307G\0000LF\000\310\331E\000\200TE\000\260\336E\000\220ZEf\006uF\000 \210F\000\260dE\0008\316E\000\000\000\000\000\220\276E\000p\273E\000\300\320E\000\300YE\000`\244D\000p\030E\000\200\256E\000\030\227E\0000\327E3\223>F\000\210\344E\000X\243E\000\300\331D\000\200%E\232aEF\000\270\225E\000\300YE\000\220\357E\000\000\000\000\315\274\225F\000\300\014E\000\000\365E\0000\314F\000\3002E\000\000\000\000\0000\227E\000\340\254E\000\220>E\000\000\365Ef\3660F\000|\003F\232aEF3\025\307G\000\000\000\000\000\270\225E\000 \010E3\207\213F\000\000\223D\000\000.D\000\270\225E\000h\255E\000X\243E\000\000\000\000\000\300(E\000\330\302E\000X\324E\000\000\026E\000 \301E\000\000\000\000\0000\311Ef\3660F\000\360\260E\000\300\225E\000X#F\000\364\023F\000t\030F\000\340\253E3\213\234F\000\220\276E\000\000\000\000\0008\337E\000P#E\000@\234E\000h\347E\232igF\000\260FE\000\000\200?\000\000\365E\000\360\260E\000\260 F\000\210\234E\000X\206Ef\3660F\000X\332E\000`\224E3\223>F\000\270(F\000X\243E\000\000\000\000\000\000\000\000\000`\237E\000\000\000\0003\227\317F\000\250\302E\000@\234E\000\240\232E\0000\262E\000\270\367E\000\000\000\000\000\220\357E\000\000\000\000\000\300CE\000\000\000\000\000PNE3\233\340F\000h\347E\000\240TE\000(\333E\315>\036G\000\030\313E\000x\211E\000\340\233E\000\274\025F\0000LF\000\000\365E\000\000\000\000\000\230\205E\000x\306E\0000\234E\200L=H\000h\325E\000\020\275E\000H\301E\000 \010E\000\330\236E\000\000\365E\000\210\034Ff\3660F\000@\336D\000\000\000\000\000\270\346E\000\220\276E\000\220\276E\000\000\365E\000\360\260E\000`\256E\000\210\357E\000\300\340D\0000\314E\000`\352E\000\320\312E\000@\324D3\237\361F\000\000\226E\232$\322G\000\000\000\000\000\000\000\000\000\300(E\000\000\000\000\000@\234E\000\200dD\000\270\225E\000\000\000\000\000@\234E\000@\234Ef\356\016G\000@\354D\000\020\244E3\217\255F\000x\372E\000\000\023E\000\000\000\000\000\000\000\000\000\200\331C\000\220\276E\000\000\000\000\000\220\273E\000\314\013F\000p\273E\000\010\204E\000\000uE\000\240\263E\000\260\241E\315\300\246F\000\220\276E\000X#F\000\300\345E\000X\276E\000\000\000\000\000\010\001F\000P#E\000h\347E\000\310\331E\000\234\017F\000\000\000\000\000\220\276E\000\230\343E\000\260\263E\0000LF3\005\203G\000 \315E\000\270\004F\000\340yE\000\340\235E\000, F\000\370\322E\000p\273E\000\340\246E\000\000\000\000\000@\243D\000\274\025F\0000\314E\0000\016F\000\360\260E\000 \210F\000\210\242E\000\300\234E\0000\314E\0000\314F\000\300\212E\000(*F\000\240\202D\000@\034E\000X\243E\000\030\302E3\237\361F\000\000\000\000\000\3606Ef\3660F\0008nF\000\000\000\000\0000LF3\207\213F\000(*F\000\320\nE\000 \210E\000\000\000\000\000T\022F\232igF\0000\314E\000X\243E\000\000\000\000\000 \010E\000\300\300Dft\250G\0000LF\000\260\036F\000h\347E\000\274\025F\000\000\000\000\000\000/E\000\264\032F\000\370\351E\000\240\321E3\217\255F\000\320\nE\000\310\331E\000x\364E\000\340\254E\000\370\322E\000\300\267E\0008\337Ef\376RF\000\000\000\000\0000\314E\000\224\036F\263\263\300H\000\0002E\0000\314E\000 \256D\000\000\000\000f\362\237F\232aEF\315\3047F\000(*F\000\230\257E\000\350\377E\000@\034E\000\010\372E\000\000\000\000\000\310\250E\000X#F\000\000\000\000\000\200zD\000\310\331E\000\000\000\000\000\340`E\000@PE\000h\347E\000\300YDf\376RF\000\270\225E\000\250\000F\000\270\361E\000\320[E\000 \210E\000\210\244E\000X\243E\000\340\253E\0000\314E\000\000\000\000\000 \256D\000\000\000\000\000\010\005F\000\270\354E\000X\243E\000h\347E\000 \010E\000h\347E\000\370\333E\000\000\000\000\000\000\341E\000\200\253E\232aEFf\006uF\000\000\365E\000\300YE\000\324\003F\000,\273F\000 \033E\000\010\346E\000\200\032F\000\340yE\000\274\025F\000T\022F\000\270\314E\232aEF\000@\030D\000\000\000\000\000\320\272E\000(*G\000\000\300D3\223>F\000\000\000\000f\376RF\000X\243E\000 \262E\315\3047F\000h\376E\000\000\000\000\000h\347E\000\220\276E\000\270\225E\000h\352E\000X\243E\000\000\000\000\000\340`E\000\000lE\000\000\372E\000\340\335E\315\324{F\315B/G\000(*G\000(\236E\000\030\371E\000\000\000\000\000\2522G\000\000uEf\3660F\000\000\000\000\000(*H\000\200\253E\0000LF\000(*F\000\200\032D\000L!F\000 \210F\000p\273E\000\220\035F\000\300YE\000\000\000\000\000P\222E\000\314\010F\000\370\260E\000\000\000\000\000\272vH\000\330\273E\000\000\000\000\000`\336E\000\300\331D\000\000\000\000\000\320\304E\000\354\016F\000\210\034F\000\360\260E\000\220\276E\000\320\320E\000\370\325E\000\000\000\000\000\354\016F\000\200\331C\000\000\000\000\000\230\340E\000\020\275E\000h\247E\000\340NE\000h\352E\000\360\033E\0000}E\232aEF\000\030\227E\000\230\030Ff\356\216F\000\030\313E\000\330\273E\0000\314E\000\000\000\000\0000\234E\000(*G\000p\372E\315\270\204F\000 \210E3\t\024G\000\310\331E\000@\352E\000 \210D\000\000\365E\000d\005F\000\220\304E\000\220\rE\000\200xD\000\250\202E\000\330\273E\000p\311E\000 \010F\000 \010F\000x\272E\263=kH\000\000\365E\000\000\000\000\000\004$F\000\360\033E\000\000\000\000\000\000\000\000\000p\325E\000\220\365E\315\304\267F\000\220\276E\0000LF\000\000\301D\000\310\331E\000p\273E\000\000\000\000\000\234\017F\000\270\225E\000\300\211D\000P\001F\000\000\000\000\000\214\034F\000 \210E3\035iG\315\314YG\000\000\000\000\000x\272E\000@\034E\000(\252F\000\240\337E\0000\314E\0008nF\000\220\276E\000X#F\000\300\206E\000\000\000\000\000\200;E\000\000\000\000\0008nF\0008\356E\000\250\263E\000\220>Ef\376RF\232\222\005H\000P\001F\000@\214E\000\210\034F\315\3047F\000\360\260E\000\200\232E\346\321\035H\000\240\305E\315\274\225F\000(*F\0000\356E\000\360aE\000\360\033E\232U\222F\000P\270E\000\324\023F\000\360\260E\000\330\314E\000X\206E\000\300\267E\000\240cE\000\300YE\000X#F\000\000\000\000\000 \210E\000\340\341D\000 \352E\000\344\003F\000\360\033E\000h\347E\000\200\253E\000P#E\000P\303E\000 \010F\000(*F\000(\252F\000@\316E\000\000\000\000\000`\305E\000\010\265E\000\230\340E\000\240\374D\000\000\000\000\000pzE\000\220\276E\0008nG\315\3047F\000\320\321E\000\300\017F\000X\211E3\233`F\000\300\332E\000\360\341E\000@\234E\000\000\000\000\232]\264F\000\220\276E\000p\307E\232\232\'H\232\226\226G\000\360aE\000\340yE\000(\333E\000@\243D\000\350\316E\000X\243E\000\210\034F\000\220\276E\000p\273E\000\340\014F\0000\314E\232aEF\000\240\276E3\223>F\315B/G\000(*F\000\270\314E\000\300\332E\000 9E\000\274\037F\000\210\234E\000\000\000\000\000\220\276E\000\210\034F\000\300\332E\000\000\000\000\315\324{F\315\270\204F\000\000\000\000\315\314\331F\000\200\032F\0008\356E\000\270\225E\000\200\325Ef\3660F\000p\036F\000\250\363E\232m\370F\000\260\244E\000\370\344E\000\030\300E\000@\354D\000\300kD\000\310\331E\315\310\310F\000\270\225E\000\220oE\000\000\000\000\000\000uE\000X\243E\000\220\276E\000\014\022F\000\320\004E\000\000\000\000\232igF\000 \010F\0000\314F\000\310\274E\000\000\000\000\000\220>Ef\3660F\000p\353E\315\270\204F\000@\234E\000\020\361E\000\200\334E\000\000\000\000\000 \210F\000\244\021F\000\220DE\000\000uE\000\020&F\000\374!Ff\366\260G\000\220\252E\000\300\331D\000\000\000\000\000\340\211E\000\310\250E\000\270\225E3\223\276F\000\360\201E\000\360\260E\000\220\276E\000 \010F\000\254\037F\000\250\315E\000\220\276E\000\310\235E\000h\347E\000\340\337E\000\000\000\000\000H\362E\000@\003F\000\200\215Df\376RF\000\000_D\000\310\250E\000 \231E\000@\034E\000\220\276E\000\310\331E\0000LE\000P*Ef\3660F\000(\212E\000\000\000\000\000h\234Ef\3660F\000\000\000\000\000\260\310E\000h\352E\000\000uE\000\000\000\000\000\240 E\000P\257E\000\000\000\000\0008nF\315\314YF\000\240\314D\000\300\332Ef\200[G\000x\235E\000\210\234E\000P\375E\000\220>E\000\360\260E\000@?E\000\000\000\000f\376RF\315F@G\000\300\301E\000P#E\000\000\000\000\000\014\010F\000@\237E\000\340\267E\000\000\000\000\000\310\250E\000\200\273Ef\376RG\315\300&G\0000\254E\000\220\rE\000(\252F\000\000\000\000\000\260\344E\000 \nF\000\200\253Ef\3660F\000\000\365Df\3660F\232\024\216G\000`\270E\000X\243E\000\000\000\000f|JG\000x\306E\000\360\260E\000D\037F\000(\252E\000\000\000\000\000|\tF\000\300\331D3\223>F\000 \210If\3660F\000@\315D\000P\001F\315\213\325G\000\310\331E\000\350\334E\000\020\332E\000\000\000\000\000\370\260E\000\310\331E\000H\301E\000\010\372E\000\000uE\000\360\260E\000 \010E\000\360tE\232Q\201F\000\270\225E\000\000\000\000\000@\237E\000@\234E\000\000\000\000\000\030\310E\000p\330E\000h\347E\000H\247E\000(\333E\000\240HE\000\000\365E\000X\203E\000\000\372E\000\030\242E\000\000\000\000\000\350\277E\000@\234E\000\264$F\232]\264F\000\270\225E\000`mE\000\300YE\000\030\310E\0000\214E\000\270\225E\000\230\214E\000\000\000\000\000H\362E\000<\377F\000X#F\000\310(F\000\320\312E\000\000\000\0003\223>F\000\000uE\000\220>E\000\024\006F\000\000\000\000\000\220\276E\000`\305E\000pzE\000\300\250D\000\220>E\000\220\276E\000\354\016F\000\000\000\000\000@\233E\000\200\327E\000\000\202E\000\354\016F\000\300\332D\000\000\000\000\000\340yE\000\300\024F\000X\243E\000\2403Ef\376RF\0000\314E\000\000\000\000\000 \231E\000@\034E\000\000\000\000\000\000\000\000\0008\337E\000\210\326E\000\360\260E3\223>F\000\310\331E\000\000\000\000\000\220\276E\000\020)E\0000LF\000  F\000\300\267Ef\3660F\000h\347E\000\210\034F\000\230\300E\315\304\267F\000\220\276E\000\360\260E\000h\347E\000 \375D\000\354\016F\000\220\276E\000`\352E\000\220/E\000\260oE\000h\352E3\233`F\000\220\276E\000X\243E\000\274\030F\000\0002Ef|JGf\376RF\000\330\004F\000\000\000\000\000\340\371D\000\200\273E\000\300\331D\315\270\004G\000\000\000\000\000\340\253E\000\270\225E\000\000\000\000\232U\222F3\223>F\000\200\326E\000(*F\000\000\000\000\000P\201E3\227\317F3\223>F\000\340\016E\0008\003F\315\314YF\000\000zE\000\000\000\000\0000\314E\000@\034E\000\000\000\000\000\000\000\000\000\240oE3\233`F\000 \002E\000\360\260E\000\000\000\000\000(*F\0008\003F\000\360\260E\000PQE\000P#E\000\220\276E\000\000\000\000\000\274\025F\000\270\225E\000\000\304E\000\370\322E\000\330\273E\000\340\275E\000\3002E\000\000\000\000\000\220\276E\000\270\010F\000\260\037F\000\260\244E\000D\034F\000\030\250E\000\000\000\000\000P\262E\000\300\332E\000(\247E\000\000_E\232m\370F\000\030\221E\000@rE\000\300YE\000\300\236E\000X\243E\000\300\332D\000P\262E\000\000\000\000\000\240\360E\000@\234E\000\000\341E\000\000\000\000\000\000\000\000\000\000\000\000\000\300\267E\232\323\211G\000\000\000\000\000\360\033E\000\210\234E\000\000\000\000\000P\262E\000\200\273E\000\300YE\000\220\276E\000\220\276E\000\300(E\315\274\225F\000\000\000\000\000\000\000\0003\223>F\000\354\016F\000\000\000\000\000\000\000\000\000d\033F\000\210\376E\000\210\234E\000\000\365E\000\000\000\000\000\000\000\000\000`\311D\000\270\233E\000\030\310E\000\220\276E\000\330\273E\000\000\000\000\000\000lE\000p\273E\000\200\253E3\213\234F\000\000\000\000\000\020$F\0000\314F\000\000\000\000\000(\212E\000\330\273E\232e\326F\000x\272E\000\330\273E\000h\352E\000\210\034F\000\200rE\000X\243E\000\360\260E\315\324{F\000\200VD\000\000\360E\000\000\000\000\000<\034F\000\200\331C\000\370\241E\000@(E\000P\001F\000\210\034F\000`\230D\000\200\331C\000`\005E\000\240\360D\000\000\244E\000\000\000\000\000\300\267E\000@\234E\000\360\260E\000\360\260E\000 \313E\000\010\230E\000\340\177E\000`\305E\000\220\004E\315\3047F\000\300YE\000\350\277E\000P\257E3\r%G\000@\034E\000\000\000\000\000\250\263E\000\230\340E\000\200;E\000\0002E\000\000uE\0000LF\000\000\000\000\000\274\025F\000\010\340E\000\220>E\000\300ND\000\360\231E\000\000\306E\0000LF\000\000\000\000\232aEF\232Q\201F\000\000\000\000\000\370\373E\000(*F\000\024\006F\0000\314E\000\300\332E\000\320\304E\000\270\225E\000 \210E\000(*F\000@\234E\000\270\225E\000 \210E\000x\272E\000@\"F\000P\001F\000@NEf\3660F\000\270\007F\000\370\322E\000\210\"F\000\320lE\000\010\004F\000\000\000\000\000\220\276E\000`gE\000\314\010F\000\240XE\000 \210E\0000\314Ef\376\322F\0008\035F\000`\337E\000 \210E\000\274\025F\000\330\273E\000 \010E\000\030\313E\000\014\030F\0000\243E\000h\352E\000<\377F\000\310\321E\00001E\000\220>Ef\362\037G\000`\337E\000\340\243E\000\2600E\000 \210E\000\330\265E\000\310\331E\000\370\204E\0008\337E\000P\262E\000 \271E\000\000\000\000\000\330\273E\000\260\025E\000\000\000\000\000\000\000\000\000\000\000\000\000\240\301E\000\300\206E\000\320\231E\r\016\233H\000\220\236E\000\220ZE\000H\301E\232aEF\000\340\253E\000\000zE\000\260\314E\000\360\033E\000P\001F\315\3047F\000\230\340E\000$\031G\000P\207E\000\200\215D\000\000uE\000X\243E\000\354\016F3\223>F\0000\375E\000\310\331E\000 \010F\000\330\212E\000\210\360E\000`mE\000\030\377E\000\000\304E\000@\243D\000`mE\000P&E\000\000\000\000\000\000\200?\000\220ZE\000\000\000\000\000X\373E\232Q\201F\000\000\000\000f\376RF\000\000\000\000\000\300YD\000h\347E\000\210\214E\000\300\332E\000\000\026F\000\000\000\000\000(*F\000@\020E\000\300YE\315\324{F\000X\275E\000\300\331D\000\220\343E\000\310\331Ef\3660F\000`\352E\000`\321E\000\210\034F\000\300\000E\0000\314E\000P\001F\000\030\274E\000P\262E\000\200\261D\000\000\365E\000`\314E\000\250\302E\000H\301E\000(\301E\0000\314E\000\320\304E\000\260FE\000\250\245E\000p\273E\000\360\010F\0000nE\315\3047F\000\\\'F\000PlE\000P\001F\000X#F\000X\243E\000\210\347E\000\370\322E\000@\030D\000\270\303E\000X\243E\000\310\007F\000\270\225E\000X\243E\000x\300E\000\250\360E\000PIE\0000\214E\000`6E\000\000\000\000\000\220\276E\000@\243D\000\220\276E3\223\276F\232Q\001G\000P\001F\0008\003F\000\320;E\232Q\201F3\223>F\000\000\000\000\000\370\241E\000P#E\000`\366E\000\210\034F\000\344\035F\000\000\000\000f\376RF\000\360\360E\315\3047G\000\320\312E\000@\243D\000\320\301E\000(*H\000 \210E\000\000\000\000\000P\262E\000X\331E\000\340GE\000\310\331E\000`\021Efx\271G\000`\224E\000\310\242E\232Q\201F\000\200\004E\000\030\310Ef\006\365F\000l\023F\000\350\316E\000\000\000\000\000 \210E\315\324{F\000X\275E\000h\347E\000\0002E\315\314YF\000\340DE\000\000\000\0003\207\213Ff\372\301F\000\000\365E\000p\337E\000\300\225E\000\220\276E\000\200\034E\0008\305E\000\220\276E\000\000\000\000\000\000\000\000\000\230\214E\010\001\030L\000@\237E\r\341\353H\000\370\333E\0000\314E\000(*F\000\0002E\000\210\234E\315\300&G\000\350\000F\0000\314E\000\030\313E3\213\234F\000\000zE\000\300ZE\232igF\0008\256E\000\340\235E\000\344\035F\000\270\004F\000\220\276E\000@\034E\000\000\000\000\000\310\331E\000\020\307E\000\300+E\000X\243E\000\200\000E\000\354\016F\000p\273E\000\000\000\000\000$\031G\000 \210F\315\324{F\000\000\214E\000\220\276E\0000\314E\000\000\000\000\0008\003F\000\000\000\000\000\000\000\000\232Q\201F\000 jE\000\024\006F\000\000\000\000\000\300\332E\000\220\276E\000\020\027F\0000LF\0000\214E\000p\030E\000\310\331E\000\300\332E\000\330\260E\000\000\000\000\000\020&E\000\274\025F3\207\213F\000\350\316E\000\030\006F\000@\234E\232i\347F\000\360\260E\000\250\240E\0008nF\0000\314E\000\000\365E\000\000\000\000\000\000=D\000\300\307E\232U\222F\000\034\004F\000\000\000\000\000@rE\000\340\332D\000\000\000\000\000\000\000\000\000X#F\000\300YE\000\250\023Ff\271\275G\000\270\225E\000\350\314E\000\340\272E\000\274\025F\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\221E\000\000\000\000f\3660F\000\0002E\000\000\000\000\000`\210D\032\263\007H\000\200\253E\000\000\000\000\000\000\365E\000\334\tF\000\350\000F\000\310\331E\0008nF\000\000\000\000\000 \010F\000\330\273E\000\230\344E\000\020\303E\0008\316E\000\340\254E\000\000\000\000\000\310\331E\000\000\000\000\000\300\332E\000\000\000\000\000\000\270E\000\000\372E\000\300YD\000\300\331D\000\000\372E\0000\314E\000@\243D\000\364 F\000P#E\000\000\000\0003N\251G\000@\364E\0008nF\000h\347E\000,\273F\000P\303E\000\230\340E\000\360RE3\227\317F\000\000\000\000\000\340NE\000p\330E\000\000\341E\0008nF"
      }
    }
  }
}
node {
  name: "SparseTensor/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2508
          }
          dim {
            size: 2
          }
        }
        tensor_contentt\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \t\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "SparseTensor/values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 2508
          }
        }
        string_val: "9q8zzd"
        string_val: "9qc1we"
        string_val: "9q9yxu"
        string_val: "9q8yy7"
        string_val: "9qc269"
        string_val: "9q94rr"
        string_val: "9qc2hd"
        string_val: "9q962g"
        string_val: "9q9k0z"
        string_val: "9qc2hn"
        string_val: "9qc61n"
        string_val: "9q94qd"
        string_val: "9q9wsg"
        string_val: "9q9ws5"
        string_val: "9qc0fe"
        string_val: "9q9k66"
        string_val: "dp4d69"
        string_val: "9q8yyk"
        string_val: "9q8ykg"
        string_val: "9q8yyw"
        string_val: "9q99qj"
        string_val: "9q9k89"
        string_val: "9q7ntz"
        string_val: "9q9ngd"
        string_val: "9qc1xw"
        string_val: "9q9xxv"
        string_val: "9qc8qb"
        string_val: "dqctfd"
        string_val: "9q8yqq"
        string_val: "9q9z1h"
        string_val: "9q9qf0"
        string_val: "9q8zzf"
        string_val: "9qc11g"
        string_val: "9q9qks"
        string_val: "9qcb2s"
        string_val: "9q9k77"
        string_val: "9q9k6g"
        string_val: "9q9hvd"
        string_val: "9qbdby"
        string_val: "9q9qh5"
        string_val: "9q9ntb"
        string_val: "9qc1bd"
        string_val: "9qc60k"
        string_val: "9q9qf2"
        string_val: "9q9p44"
        string_val: "9q9nfd"
        string_val: "9q96j9"
        string_val: "9q9wsg"
        string_val: "9q8yv9"
        string_val: "9qc7qm"
        string_val: "9qc11v"
        string_val: "9q8yyy"
        string_val: "9q9nkw"
        string_val: "9qcbbe"
        string_val: "9qc14d"
        string_val: "9q978r"
        string_val: "9q8zgt"
        string_val: "9q9key"
        string_val: "9q9kef"
        string_val: "9qbep3"
        string_val: "9q97fj"
        string_val: "9q9key"
        string_val: "9qbfc5"
        string_val: "drdv4t"
        string_val: "9q9pw3"
        string_val: "9qbfde"
        string_val: "9q8zn3"
        string_val: "9q8yyz"
        string_val: "9q9ng7"
        string_val: "9q9nm8"
        string_val: "9q9nmn"
        string_val: "9qcgb5"
        string_val: "9q9hxq"
        string_val: "9qc00z"
        string_val: "9qbdxr"
        string_val: "9q9hqw"
        string_val: "9q8yyx"
        string_val: "9q9kfn"
        string_val: "9q8yyz"
        string_val: "dp4d65"
        string_val: "9q9p4d"
        string_val: "9q9jhs"
        string_val: "9qcu03"
        string_val: "9qcbbp"
        string_val: "9qc60e"
        string_val: "9qcemh"
        string_val: "9q9x8v"
        string_val: "9q9k82"
        string_val: "9q8yu9"
        string_val: "9q9p70"
        string_val: "9qc1hs"
        string_val: "9qbdps"
        string_val: "9q9nsn"
        string_val: "9q8yyj"
        string_val: "9qbc8u"
        string_val: "9q9x8v"
        string_val: "9q9k62"
        string_val: "9q9ndj"
        string_val: "dp4d42"
        string_val: "9q8yv0"
        string_val: "9q9e2f"
        string_val: "9q9z15"
        string_val: "9q9z20"
        string_val: "9qc8qm"
        string_val: "drdv4m"
        string_val: "9q8zsy"
        string_val: "9qcet1"
        string_val: "9q9x8e"
        string_val: "9q9r4k"
        string_val: "9qcug0"
        string_val: "9q8yyx"
        string_val: "9qc7q4"
        string_val: "9qc0ju"
        string_val: "9qcesg"
        string_val: "9q9d97"
        string_val: "9q8zg3"
        string_val: "9q9hrr"
        string_val: "9q8yyr"
        string_val: "9q8vyu"
        string_val: "9q9qf2"
        string_val: "9q9qh7"
        string_val: "9q8yxk"
        string_val: "9q9p1m"
        string_val: "9q9nky"
        string_val: "9q9p9t"
        string_val: "9q9hxk"
        string_val: "9q8ymn"
        string_val: "9q9yxg"
        string_val: "9q9p69"
        string_val: "9q9jyj"
        string_val: "9q9jrx"
        string_val: "9q9kgh"
        string_val: "9qc3bs"
        string_val: "9q8yyu"
        string_val: "9q8ze9"
        string_val: "9r4bgx"
        string_val: "9qcb02"
        string_val: "9qc8pb"
        string_val: "9q9p73"
        string_val: "9q9nnx"
        string_val: "9q6mtk"
        string_val: "9r4bgz"
        string_val: "9q5bc6"
        string_val: "9q9j5t"
        string_val: "9q9p30"
        string_val: "9q8zke"
        string_val: "9q9nw2"
        string_val: "9q8ywg"
        string_val: "9q8zzm"
        string_val: "9q5bd5"
        string_val: "9q9k53"
        string_val: "9q964w"
        string_val: "9q97fc"
        string_val: "9q9m8k"
        string_val: "9qc01x"
        string_val: "9q9z1p"
        string_val: "9q9jhj"
        string_val: "9q5bc6"
        string_val: "9q7nw6"
        string_val: "9qdnc2"
        string_val: "9q9qcj"
        string_val: "9q9jh6"
        string_val: "9q9hs5"
        string_val: "9qdn23"
        string_val: "9qbdyc"
        string_val: "9q9pc0"
        string_val: "9qc24s"
        string_val: "9qc38j"
        string_val: "9qbv9e"
        string_val: "9qc3np"
        string_val: "9qc1wy"
        string_val: "9qc829"
        string_val: "9q9pyv"
        string_val: "9qcgbn"
        string_val: "9q9pqu"
        string_val: "9q9k1r"
        string_val: "9qbdwc"
        string_val: "9q9pyn"
        string_val: "9qc613"
        string_val: "9qbfds"
        string_val: "9qbesj"
        string_val: "9q963e"
        string_val: "9q9k6g"
        string_val: "9r4bfm"
        string_val: "9q95z6"
        string_val: "9q8yhf"
        string_val: "9qbeu0"
        string_val: "9qc01r"
        string_val: "9q963g"
        string_val: "9q9pkr"
        string_val: "9qbsb8"
        string_val: "9q9rz0"
        string_val: "9q8yvc"
        string_val: "9q9p3d"
        string_val: "9q9qkt"
        string_val: "9q95zu"
        string_val: "9q9jy1"
        string_val: "9q9j4r"
        string_val: "9q9p4j"
        string_val: "9q9yng"
        string_val: "9q9k8z"
        string_val: "9qc2n9"
        string_val: "9q9xxz"
        string_val: "9q9rc7"
        string_val: "9q9r09"
        string_val: "9q9hrh"
        string_val: "9q9k1c"
        string_val: "9q9pb7"
        string_val: "9q9p1z"
        string_val: "9qbdwk"
        string_val: "9q9yg9"
        string_val: "9q9qmm"
        string_val: "9r4bgw"
        string_val: "9q9p63"
        string_val: "9q8zzv"
        string_val: "9q8vyb"
        string_val: "9q9jhn"
        string_val: "9q6mtt"
        string_val: "9qc22s"
        string_val: "9qbeev"
        string_val: "9q9pkc"
        string_val: "9q8yy5"
        string_val: "9qcb2m"
        string_val: "9rcfb0"
        string_val: "9q9p3g"
        string_val: "9q9p0f"
        string_val: "9q9k5s"
        string_val: "9q8ywx"
        string_val: "9q9d2z"
        string_val: "9qc0eu"
        string_val: "9q5bc8"
        string_val: "9q8zu0"
        string_val: "9q9pv9"
        string_val: "9q9ng6"
        string_val: "9q97b6"
        string_val: "9q9yg9"
        string_val: "9q9k9n"
        string_val: "9q8zxv"
        string_val: "9q9ycu"
        string_val: "9q9pxh"
        string_val: "9q8zj9"
        string_val: "dp4d4n"
        string_val: "9q9zbh"
        string_val: "9qc0p8"
        string_val: "9q8yy4"
        string_val: "9q9hfv"
        string_val: "9q9k0g"
        string_val: "9q9e13"
        string_val: "9q9nms"
        string_val: "9q9nms"
        string_val: "9q9pbc"
        string_val: "9qbdyv"
        string_val: "9q8ysv"
        string_val: "9q9r18"
        string_val: "9q9nks"
        string_val: "9qc8q9"
        string_val: "9q9ney"
        string_val: "9q9pzd"
        string_val: "9q9r0z"
        string_val: "9q97dz"
        string_val: "9qc627"
        string_val: "9qdn21"
        string_val: "9q9qcj"
        string_val: "9q9x85"
        string_val: "9q9ycs"
        string_val: "9qcb27"
        string_val: "9qbdxg"
        string_val: "9q8yyv"
        string_val: "9qcb24"
        string_val: "9q8yu3"
        string_val: "9qc8zy"
        string_val: "9q97pc"
        string_val: "9qc616"
        string_val: "9q8vxz"
        string_val: "9q9hqj"
        string_val: "9qc1cq"
        string_val: "9q9rwz"
        string_val: "9q99tj"
        string_val: "9qbf6z"
        string_val: "9qbhg8"
        string_val: "9qbdxv"
        string_val: "9q97un"
        string_val: "9q9yn5"
        string_val: "9q8ze9"
        string_val: "9q9kcw"
        string_val: "9qc8pu"
        string_val: "9q9p31"
        string_val: "9q9q63"
        string_val: "9q9hgn"
        string_val: "9qc1wf"
        string_val: "9q8zgj"
        string_val: "9qbgj3"
        string_val: "9q99mv"
        string_val: "9q9p0g"
        string_val: "9q9khc"
        string_val: "9q8yyc"
        string_val: "9qc1xg"
        string_val: "9q9ryq"
        string_val: "9q9ybt"
        string_val: "9q8ywp"
        string_val: "9q9ke6"
        string_val: "9q9kf1"
        string_val: "9q9kev"
        string_val: "9q9xxt"
        string_val: "9q7nt1"
        string_val: "9q9ryv"
        string_val: "9q8ysy"
        string_val: "9qc4rc"
        string_val: "9qcu0e"
        string_val: "9q9pvm"
        string_val: "9q9p18"
        string_val: "dqctfd"
        string_val: "9qcgbk"
        string_val: "9q8ytc"
        string_val: "9q97pr"
        string_val: "9q9prw"
        string_val: "9q9nnc"
        string_val: "9q9jxu"
        string_val: "9q9rbq"
        string_val: "9q9zcj"
        string_val: "9qc8rd"
        string_val: "9q94r4"
        string_val: "9qc8n7"
        string_val: "9q9hs4"
        string_val: "9qcgcy"
        string_val: "9q9rvq"
        string_val: "9q8yy1"
        string_val: "9q9p5t"
        string_val: "9rcfb3"
        string_val: "9q9ruz"
        string_val: "dp4d4z"
        string_val: "9q9ry7"
        string_val: "9q9keq"
        string_val: "9q9d95"
        string_val: "9q9z1h"
        string_val: "9q9k21"
        string_val: "9q9p3f"
        string_val: "9qc7kf"
        string_val: "9q9kk2"
        string_val: "9q9net"
        string_val: "9qc8zr"
        string_val: "9q97gm"
        string_val: "9q9jh4"
        string_val: "9q9nv0"
        string_val: "9qc8n8"
        string_val: "9q8zn2"
        string_val: "9q8ze9"
        string_val: "9q8zsy"
        string_val: "9q8yy3"
        string_val: "9q8yyy"
        string_val: "9q9pbh"
        string_val: "9q8zke"
        string_val: "9q9zcj"
        string_val: "9q9yjb"
        string_val: "9q8ykf"
        string_val: "9q9z1r"
        string_val: "9q9wsp"
        string_val: "9q8z7r"
        string_val: "dp4d44"
        string_val: "9qbfe1"
        string_val: "9q9hkr"
        string_val: "9q9e22"
        string_val: "9q9d8c"
        string_val: "9q9nnv"
        string_val: "9q9nn3"
        string_val: "9qc8p9"
        string_val: "9q9pk3"
        string_val: "9qcet7"
        string_val: "9q9x8x"
        string_val: "9q99tg"
        string_val: "9q8znd"
        string_val: "9q9k39"
        string_val: "9qc008"
        string_val: "9q9z1q"
        string_val: "9q9htx"
        string_val: "9qc001"
        string_val: "9q9p4t"
        string_val: "9qc407"
        string_val: "9qdngj"
        string_val: "9q9m19"
        string_val: "9q9j93"
        string_val: "9qc0ff"
        string_val: "9q94y0"
        string_val: "9q9r4e"
        string_val: "9q8yvv"
        string_val: "9q9jz0"
        string_val: "9qc8zv"
        string_val: "9q9p1x"
        string_val: "9q9pr6"
        string_val: "9q8yyw"
        string_val: "9q9k4s"
        string_val: "9qc0pg"
        string_val: "9q9j50"
        string_val: "9qc8pn"
        string_val: "9qc61k"
        string_val: "9q9yxd"
        string_val: "9q8zs1"
        string_val: "9q97fz"
        string_val: "9q8yyz"
        string_val: "9qc7mg"
        string_val: "9q5bcf"
        string_val: "9q9ycs"
        string_val: "9q9pvq"
        string_val: "9q9nf9"
        string_val: "9q9huy"
        string_val: "9q9hvf"
        string_val: "9q9ndm"
        string_val: "9q9z44"
        string_val: "9q9jdh"
        string_val: "9q97ck"
        string_val: "9q9jzu"
        string_val: "9qc142"
        string_val: "9q8yy5"
        string_val: "9q8yq8"
        string_val: "9q9j5s"
        string_val: "9q9r00"
        string_val: "9q6mtm"
        string_val: "9qc2hb"
        string_val: "9q9ych"
        string_val: "9q8ytn"
        string_val: "9qc7q6"
        string_val: "9qc0gh"
        string_val: "9q7nt0"
        string_val: "9q9p6h"
        string_val: "9q9z8z"
        string_val: "9qbdxx"
        string_val: "9q99mz"
        string_val: "9q8ykv"
        string_val: "9q9nm3"
        string_val: "9q94ry"
        string_val: "9q9wt6"
        string_val: "9qcbb7"
        string_val: "9q9q6b"
        string_val: "9q9r42"
        string_val: "9q9ngv"
        string_val: "9q8ywk"
        string_val: "9rcdzg"
        string_val: "9q97gt"
        string_val: "9qc6g2"
        string_val: "9qc1xs"
        string_val: "9q5b9x"
        string_val: "9q9rrv"
        string_val: "9qc2j5"
        string_val: "9qc8rr"
        string_val: "9q9k72"
        string_val: "9q8zgn"
        string_val: "9q8yy0"
        string_val: "9qc2hq"
        string_val: "9q8yyw"
        string_val: "9q9zby"
        string_val: "9q97rb"
        string_val: "9q9ryu"
        string_val: "9q9r13"
        string_val: "9q8zn0"
        string_val: "9q9q2x"
        string_val: "9q9kgh"
        string_val: "9qcbbr"
        string_val: "9q8yyy"
        string_val: "9q9hxm"
        string_val: "9q3vgx"
        string_val: "9q9ngb"
        string_val: "9q94qd"
        string_val: "9q8yyp"
        string_val: "9q9r1e"
        string_val: "9q9pbz"
        string_val: "9rcdz7"
        string_val: "9q9wuc"
        string_val: "9q9yg9"
        string_val: "dp4d67"
        string_val: "9q9k6z"
        string_val: "9qc14h"
        string_val: "9q8zze"
        string_val: "9qcu40"
        string_val: "9q9hp2"
        string_val: "9q9k7b"
        string_val: "9q8yu2"
        string_val: "9q9jy2"
        string_val: "9q9ng3"
        string_val: "9q9jzn"
        string_val: "9q9k66"
        string_val: "9qc7kf"
        string_val: "9r4bgp"
        string_val: "9q9nf4"
        string_val: "9q9k0n"
        string_val: "9q96hb"
        string_val: "9qc8zu"
        string_val: "9q963e"
        string_val: "9q9pyw"
        string_val: "9q9keh"
        string_val: "9qc827"
        string_val: "9qc1kw"
        string_val: "9qc03d"
        string_val: "9q9j9n"
        string_val: "9qc0fm"
        string_val: "drdv4t"
        string_val: "9q9k4e"
        string_val: "9q9ndk"
        string_val: "9q8yyz"
        string_val: "9r4bft"
        string_val: "9qctpm"
        string_val: "9q9r2b"
        string_val: "9qbsb9"
        string_val: "9q9hrm"
        string_val: "9q9nmb"
        string_val: "9q9xz7"
        string_val: "9q9x8g"
        string_val: "9q8yyq"
        string_val: "9q9p1v"
        string_val: "9q9ke3"
        string_val: "9q9pzv"
        string_val: "dqctfd"
        string_val: "9qc0gh"
        string_val: "9q9x94"
        string_val: "9q9jdn"
        string_val: "9q8yw5"
        string_val: "9qc00y"
        string_val: "9qc3nq"
        string_val: "9q9k89"
        string_val: "9qc256"
        string_val: "9qc8qu"
        string_val: "9q8zgt"
        string_val: "9q8zgn"
        string_val: "9q9jb8"
        string_val: "9q9pbe"
        string_val: "9q9hpn"
        string_val: "9q8zsp"
        string_val: "9q9rch"
        string_val: "9qbdpe"
        string_val: "9q9pmy"
        string_val: "9qc8nk"
        string_val: "9q9zc7"
        string_val: "9q9nme"
        string_val: "9q9r45"
        string_val: "9qcufh"
        string_val: "9q9jhn"
        string_val: "9q9nt1"
        string_val: "9q8zzc"
        string_val: "9q9k22"
        string_val: "9q8yv9"
        string_val: "9q8yvc"
        string_val: "9q9p98"
        string_val: "9q9qch"
        string_val: "9q9pyd"
        string_val: "9q9nmm"
        string_val: "9q9p9c"
        string_val: "9q9x8x"
        string_val: "9q9k43"
        string_val: "9q8yhy"
        string_val: "9qbf8m"
        string_val: "9q9ynz"
        string_val: "9qcgbq"
        string_val: "9qcet0"
        string_val: "9q9p95"
        string_val: "9q8zzm"
        string_val: "9q8vm3"
        string_val: "9qc0fb"
        string_val: "9qcgb3"
        string_val: "9q8yyv"
        string_val: "9q9qk3"
        string_val: "9qc0p3"
        string_val: "9q93uy"
        string_val: "9qbdyd"
        string_val: "9q8yq0"
        string_val: "9qbdwe"
        string_val: "9q9kj3"
        string_val: "9qcgbj"
        string_val: "9qcgbg"
        string_val: "9q9kks"
        string_val: "9q9qbf"
        string_val: "9q9wth"
        string_val: "9r4bgp"
        string_val: "9q9ry6"
        string_val: "dp4d4z"
        string_val: "9q8zn0"
        string_val: "9qcetf"
        string_val: "9q9m1e"
        string_val: "9q9d8t"
        string_val: "9q9pb8"
        string_val: "9q9kf2"
        string_val: "9qc9pd"
        string_val: "9q9rvx"
        string_val: "9q9pmm"
        string_val: "9q9rty"
        string_val: "drdv4q"
        string_val: "9q9jy3"
        string_val: "9qbdwb"
        string_val: "9q8ytm"
        string_val: "9qc8zx"
        string_val: "9q9pbs"
        string_val: "9qc0ng"
        string_val: "9qc9xd"
        string_val: "9q9nsq"
        string_val: "9q9hse"
        string_val: "9q9hs3"
        string_val: "9qcb2k"
        string_val: "9qcb20"
        string_val: "9qc1we"
        string_val: "9q97gy"
        string_val: "9qbcue"
        string_val: "9qc8nc"
        string_val: "9qcb26"
        string_val: "9qcu00"
        string_val: "9q9yxs"
        string_val: "9qc7md"
        string_val: "9qbdxh"
        string_val: "9q9j5u"
        string_val: "9qc2j3"
        string_val: "9q9666"
        string_val: "9qcv0f"
        string_val: "9qc62b"
        string_val: "9q9m89"
        string_val: "9qc3nr"
        string_val: "9q8yjn"
        string_val: "9qbgmx"
        string_val: "9q5bc6"
        string_val: "9qc60z"
        string_val: "9q9p45"
        string_val: "9q9p6g"
        string_val: "9q94rr"
        string_val: "9qbdz1"
        string_val: "9qbesn"
        string_val: "9qc1z7"
        string_val: "dp4d68"
        string_val: "9qc0j2"
        string_val: "9q97b9"
        string_val: "9qbdxq"
        string_val: "9qdngq"
        string_val: "9q9yq5"
        string_val: "dp4d4z"
        string_val: "9q9j9j"
        string_val: "9q9r0r"
        string_val: "9q9ysp"
        string_val: "9q9nkx"
        string_val: "9q9x8f"
        string_val: "9q7nt7"
        string_val: "9qbf6t"
        string_val: "9qbs8x"
        string_val: "9q9x8g"
        string_val: "9q9py9"
        string_val: "9q9xzn"
        string_val: "9q9xpd"
        string_val: "9q9jwp"
        string_val: "9q9nu2"
        string_val: "9q9k7w"
        string_val: "9q97cz"
        string_val: "9q8zyb"
        string_val: "9qc24x"
        string_val: "9q9k65"
        string_val: "9q9jhg"
        string_val: "9q9k6h"
        string_val: "9q9hr4"
        string_val: "dqctdn"
        string_val: "9q8yvf"
        string_val: "9qbs8e"
        string_val: "9q9k3p"
        string_val: "9q7ntz"
        string_val: "9q9k8z"
        string_val: "9q9k3t"
        string_val: "9qbdwe"
        string_val: "9q9p18"
        string_val: "9q9pxt"
        string_val: "9q9hqp"
        string_val: "9q9635"
        string_val: "9q9kb8"
        string_val: "9q9zbn"
        string_val: "9rcf8v"
        string_val: "9rcfb8"
        string_val: "9q9p4k"
        string_val: "9q9661"
        string_val: "9q9jzn"
        string_val: "9q9wu8"
        string_val: "9q9m98"
        string_val: "9q9jxk"
        string_val: "9qc1z2"
        string_val: "9q9p52"
        string_val: "9q9kfw"
        string_val: "9qc40e"
        string_val: "9qcc62"
        string_val: "9q9x8r"
        string_val: "9qbf8k"
        string_val: "9q9e23"
        string_val: "9qbc9c"
        string_val: "9qc8zc"
        string_val: "9qbe4c"
        string_val: "9q9j61"
        string_val: "9q9wu3"
        string_val: "9q9jxc"
        string_val: "9qbdpv"
        string_val: "9q9hxf"
        string_val: "9q9kde"
        string_val: "9q9jyg"
        string_val: "9q9ngg"
        string_val: "9q9kdu"
        string_val: "9q9pbq"
        string_val: "9q93gb"
        string_val: "9q8yts"
        string_val: "9qc0pb"
        string_val: "dqctfd"
        string_val: "9qc9z9"
        string_val: "9qc01j"
        string_val: "9q9qmu"
        string_val: "9q9rc5"
        string_val: "9q9k6g"
        string_val: "9qc8zt"
        string_val: "9qc25k"
        string_val: "9q9yxt"
        string_val: "9q9jx0"
        string_val: "9rcf8s"
        string_val: "9qc608"
        string_val: "9qbdzs"
        string_val: "9q9kd0"
        string_val: "9q9p94"
        string_val: "9q9pbz"
        string_val: "9q97fm"
        string_val: "9q9z13"
        string_val: "9q9ptz"
        string_val: "9qc1xf"
        string_val: "9q8zt1"
        string_val: "9q9k7f"
        string_val: "9q9rbp"
        string_val: "9qc06z"
        string_val: "9qc1bv"
        string_val: "9qbcb9"
        string_val: "9q9k40"
        string_val: "9q8zkf"
        string_val: "9q9664"
        string_val: "dp4d19"
        string_val: "9qc1y0"
        string_val: "9q9pvx"
        string_val: "9qctp7"
        string_val: "9qbdz8"
        string_val: "dqctfd"
        string_val: "9qc0jf"
        string_val: "9qc611"
        string_val: "9q963e"
        string_val: "9q8zjb"
        string_val: "9qctpm"
        string_val: "9q9xyz"
        string_val: "9qc0pj"
        string_val: "9q9z44"
        string_val: "9qc8r6"
        string_val: "9q9hw6"
        string_val: "9q8vyq"
        string_val: "9q8yy5"
        string_val: "9q8yjs"
        string_val: "9q9jwg"
        string_val: "9qbdwe"
        string_val: "9q9q6g"
        string_val: "9rcfb8"
        string_val: "9qc8zv"
        string_val: "9q9k1c"
        string_val: "9qc60g"
        string_val: "9q8yy6"
        string_val: "9q8vz9"
        string_val: "9q8zfz"
        string_val: "9q7nt0"
        string_val: "9qcb25"
        string_val: "9q9hxb"
        string_val: "9q8zxy"
        string_val: "9q966c"
        string_val: "9qc62k"
        string_val: "9q9nus"
        string_val: "9q9vyt"
        string_val: "9q9pzy"
        string_val: "9q9pq7"
        string_val: "9q97uq"
        string_val: "9q9j3j"
        string_val: "9q9k64"
        string_val: "9q9hv2"
        string_val: "9qcb0m"
        string_val: "9q9nf9"
        string_val: "9q96j9"
        string_val: "9q8vzd"
        string_val: "dp4d1b"
        string_val: "9q9ynv"
        string_val: "9q9pfn"
        string_val: "9q9wsg"
        string_val: "9qc0sj"
        string_val: "9qcu0c"
        string_val: "9qc608"
        string_val: "9qc8n7"
        string_val: "9qbdby"
        string_val: "9qc0f2"
        string_val: "9qc1xq"
        string_val: "9q8yuw"
        string_val: "9qbdzv"
        string_val: "9q9k4m"
        string_val: "9q9j51"
        string_val: "9q8yvz"
        string_val: "9q9x83"
        string_val: "9q9ynu"
        string_val: "9q8zyb"
        string_val: "9q9q6c"
        string_val: "9qcezw"
        string_val: "9qdnfe"
        string_val: "9q9kfs"
        string_val: "9q8vyw"
        string_val: "9q9jyf"
        string_val: "9qbcuw"
        string_val: "9q9p1v"
        string_val: "9rcdz6"
        string_val: "9q9jwp"
        string_val: "9qdncb"
        string_val: "9q9r4k"
        string_val: "9qc8nu"
        string_val: "9q9pxt"
        string_val: "9q7nwd"
        string_val: "9q5b9x"
        string_val: "9q9rvr"
        string_val: "9q97b6"
        string_val: "9q9pzv"
        string_val: "9qc1x6"
        string_val: "9qc24n"
        string_val: "9q97gm"
        string_val: "9qc8n3"
        string_val: "9qc0jp"
        string_val: "9q9yyw"
        string_val: "9qbdzf"
        string_val: "9q8ywd"
        string_val: "9qc266"
        string_val: "9q9p4v"
        string_val: "9q9ken"
        string_val: "9q9k1b"
        string_val: "9q9k4p"
        string_val: "9q8yyx"
        string_val: "9q9rbv"
        string_val: "9q9d95"
        string_val: "9q9d9k"
        string_val: "9q9q69"
        string_val: "9q9ndp"
        string_val: "9q8ytz"
        string_val: "9q9ke1"
        string_val: "9q9nje"
        string_val: "9q9r1b"
        string_val: "9q9huw"
        string_val: "9qc0je"
        string_val: "9q9kkd"
        string_val: "9q9ndk"
        string_val: "9q5bcb"
        string_val: "9qc3nf"
        string_val: "9q97fm"
        string_val: "9q9j8q"
        string_val: "9q9k18"
        string_val: "9q97rd"
        string_val: "9q9wkw"
        string_val: "9qcu18"
        string_val: "9q9yxk"
        string_val: "9q9neu"
        string_val: "9qc2h3"
        string_val: "9q9ng7"
        string_val: "9q9j54"
        string_val: "9q9k28"
        string_val: "9qc3nr"
        string_val: "9q97g9"
        string_val: "9q9j4e"
        string_val: "9q9k54"
        string_val: "9q9d9j"
        string_val: "9qbdbs"
        string_val: "9qc4py"
        string_val: "9q9qfh"
        string_val: "9qcemj"
        string_val: "9q9ng6"
        string_val: "9q97f8"
        string_val: "9q5bcd"
        string_val: "9qc0pc"
        string_val: "9q9p1z"
        string_val: "9q9pbk"
        string_val: "9qc1x0"
        string_val: "9q9pqn"
        string_val: "9q9r1e"
        string_val: "dqcter"
        string_val: "9q9kes"
        string_val: "9q9jyb"
        string_val: "9q9r01"
        string_val: "9q9wsh"
        string_val: "9qc8q9"
        string_val: "9q8zex"
        string_val: "9q9k2q"
        string_val: "9q9pyb"
        string_val: "9q8zkf"
        string_val: "9q97uk"
        string_val: "9q8yyw"
        string_val: "9q9pbz"
        string_val: "9q94wp"
        string_val: "9q9ngc"
        string_val: "9q9pwx"
        string_val: "9q9pw7"
        string_val: "9q9j8d"
        string_val: "9q9r04"
        string_val: "9qc60n"
        string_val: "9q9yct"
        string_val: "9q9npw"
        string_val: "9q95j6"
        string_val: "9q9j8m"
        string_val: "9q9p9g"
        string_val: "9q9d8v"
        string_val: "9qc00b"
        string_val: "9q9yek"
        string_val: "9qbv9k"
        string_val: "9qc3bs"
        string_val: "9qc60j"
        string_val: "9q9p1m"
        string_val: "9q94r9"
        string_val: "9qbdps"
        string_val: "9q9p1e"
        string_val: "9q9x91"
        string_val: "9q9p4k"
        string_val: "9q9ngb"
        string_val: "9q9p19"
        string_val: "9r4bfz"
        string_val: "9q8yyr"
        string_val: "9q9wef"
        string_val: "9rcfb1"
        string_val: "9q9pvm"
        string_val: "9q8yyv"
        string_val: "9q9nwb"
        string_val: "9q9huu"
        string_val: "9r4c46"
        string_val: "9q9p1m"
        string_val: "9qc0pd"
        string_val: "9q9d9k"
        string_val: "9q99tk"
        string_val: "9q9p15"
        string_val: "9q9k4j"
        string_val: "9q8vz4"
        string_val: "9qbcd4"
        string_val: "9q9ryv"
        string_val: "9q9p3e"
        string_val: "9q9nf5"
        string_val: "9q9j4k"
        string_val: "9qc0en"
        string_val: "9q8ymx"
        string_val: "9qc8ny"
        string_val: "9qbgj5"
        string_val: "9q8vku"
        string_val: "9q8yyh"
        string_val: "9q6mt5"
        string_val: "9qc2j2"
        string_val: "dp4d1d"
        string_val: "9q9pbz"
        string_val: "9q8zzm"
        string_val: "9q9jb0"
        string_val: "9q9zcr"
        string_val: "9q9m98"
        string_val: "9qbdzs"
        string_val: "9q8ytn"
        string_val: "9qc2r7"
        string_val: "9q9k6j"
        string_val: "9q9qq4"
        string_val: "9q6mt5"
        string_val: "9q8yw9"
        string_val: "9qc60u"
        string_val: "9q9nez"
        string_val: "9q5b9w"
        string_val: "9q9p90"
        string_val: "9r4bgz"
        string_val: "9qc60m"
        string_val: "9q8yyr"
        string_val: "9q8yy5"
        string_val: "9q9py8"
        string_val: "9q9qcn"
        string_val: "9qcgbk"
        string_val: "9qc3nq"
        string_val: "9q9hfv"
        string_val: "9q9nn5"
        string_val: "9qc630"
        string_val: "9qbf22"
        string_val: "dqctep"
        string_val: "9q8yvg"
        string_val: "9qbghz"
        string_val: "9q9rbf"
        string_val: "9q8ytt"
        string_val: "9q9kk9"
        string_val: "9q8zs4"
        string_val: "9qc9xm"
        string_val: "9q9yn5"
        string_val: "9qc8n0"
        string_val: "9q9q1e"
        string_val: "9qbdwk"
        string_val: "9q8yyy"
        string_val: "9q8zgn"
        string_val: "9q9jd5"
        string_val: "9qc9zc"
        string_val: "9q9nmm"
        string_val: "9q9k5f"
        string_val: "dp4d4r"
        string_val: "9qbf9y"
        string_val: "9qbhsf"
        string_val: "9q8zgs"
        string_val: "9q9k60"
        string_val: "9qc8rf"
        string_val: "9qc3bx"
        string_val: "9q9p33"
        string_val: "9qbv97"
        string_val: "9q9x8k"
        string_val: "9qcbbm"
        string_val: "9q9pd0"
        string_val: "9q9p8z"
        string_val: "9q9ht4"
        string_val: "9q9j9c"
        string_val: "9q9p4t"
        string_val: "9q97un"
        string_val: "9q9pb5"
        string_val: "9q9yet"
        string_val: "9qc01r"
        string_val: "9qbfb3"
        string_val: "9q9hvp"
        string_val: "9qc2hc"
        string_val: "9qc8r9"
        string_val: "9qbesn"
        string_val: "9q9xze"
        string_val: "9qc8pc"
        string_val: "9q5bc9"
        string_val: "9qcezf"
        string_val: "9qbb4t"
        string_val: "9q9p1u"
        string_val: "9qc2he"
        string_val: "9q9ryr"
        string_val: "9q9k73"
        string_val: "9qc0ds"
        string_val: "9qdn26"
        string_val: "drdv4q"
        string_val: "9qc8r9"
        string_val: "9q8ytz"
        string_val: "9q8zn1"
        string_val: "9qc8pj"
        string_val: "9qc8n9"
        string_val: "9q9rur"
        string_val: "9qbdps"
        string_val: "9qc8qb"
        string_val: "9q97bm"
        string_val: "9q9pv3"
        string_val: "9q8yyt"
        string_val: "9qbb4d"
        string_val: "9q8zfz"
        string_val: "9q9m19"
        string_val: "9qbe51"
        string_val: "9q9k4j"
        string_val: "9qc8nt"
        string_val: "9qc8rf"
        string_val: "9qcc0m"
        string_val: "9q7nwj"
        string_val: "9qbv9x"
        string_val: "9q99d7"
        string_val: "9q9k1w"
        string_val: "9qbghf"
        string_val: "9q9hpf"
        string_val: "9q9pbm"
        string_val: "9q9k52"
        string_val: "9q9k10"
        string_val: "9q8yyu"
        string_val: "9q9kke"
        string_val: "9q9pq7"
        string_val: "9q9k4j"
        string_val: "9qc8nf"
        string_val: "9qc8p8"
        string_val: "9q9kke"
        string_val: "9q9nmr"
        string_val: "9q9r08"
        string_val: "9qc62k"
        string_val: "9q9p33"
        string_val: "9q97et"
        string_val: "9q9k6v"
        string_val: "9qbc3z"
        string_val: "9q97bp"
        string_val: "9rcfb9"
        string_val: "9qcb25"
        string_val: "9q8zxv"
        string_val: "9qc8nc"
        string_val: "9q8ytc"
        string_val: "9q9wt4"
        string_val: "9q9py9"
        string_val: "9q9xxs"
        string_val: "9qbdbs"
        string_val: "9q97rb"
        string_val: "9q9hxk"
        string_val: "9qcet6"
        string_val: "9qc8zu"
        string_val: "9q8yyv"
        string_val: "9q9nmj"
        string_val: "9q9hz8"
        string_val: "9qc147"
        string_val: "9q9xyv"
        string_val: "9q9k3j"
        string_val: "9q8ymx"
        string_val: "9q9r0e"
        string_val: "9q8znb"
        string_val: "9q96jg"
        string_val: "9q9pw3"
        string_val: "9qcez9"
        string_val: "9qc2hq"
        string_val: "9q9r19"
        string_val: "9q9x8f"
        string_val: "9qbs8w"
        string_val: "9q9wsn"
        string_val: "9q9nf0"
        string_val: "9q9wsd"
        string_val: "9qcxwu"
        string_val: "9q9kbb"
        string_val: "9q5bcc"
        string_val: "9q8yt4"
        string_val: "9qc0fu"
        string_val: "9q5bc3"
        string_val: "9q9p1g"
        string_val: "9q9kb8"
        string_val: "9q9wsp"
        string_val: "9qcbbn"
        string_val: "9q8yy0"
        string_val: "9q8yhd"
        string_val: "9qcet6"
        string_val: "9q962g"
        string_val: "9q9hen"
        string_val: "9qcgcw"
        string_val: "9q9pzz"
        string_val: "9q9x8d"
        string_val: "9q9p64"
        string_val: "9qbbpb"
        string_val: "9q9xx5"
        string_val: "9qc2hq"
        string_val: "9q8yyv"
        string_val: "9qc1bg"
        string_val: "9q8ytt"
        string_val: "9q8zfz"
        string_val: "9q9xzk"
        string_val: "9qcu06"
        string_val: "9qcv15"
        string_val: "9q9k3m"
        string_val: "9q9z8n"
        string_val: "9qdncd"
        string_val: "dp4d60"
        string_val: "9qbdy9"
        string_val: "9q9vyp"
        string_val: "9q9p5h"
        string_val: "9q9nsb"
        string_val: "9qc60u"
        string_val: "9q9k4d"
        string_val: "9q9p17"
        string_val: "9q6mt4"
        string_val: "9q9qcu"
        string_val: "9q9j4f"
        string_val: "9q8uyp"
        string_val: "9q9pyv"
        string_val: "9q9p8r"
        string_val: "9qc0cz"
        string_val: "9q9nse"
        string_val: "9q9ke0"
        string_val: "9qc0fm"
        string_val: "9q9net"
        string_val: "9q9pzd"
        string_val: "9q8yvc"
        string_val: "9q8vxu"
        string_val: "9qbdwq"
        string_val: "9qbf0m"
        string_val: "9q95zu"
        string_val: "9q99tc"
        string_val: "9q9ken"
        string_val: "9q9p1u"
        string_val: "9q9hxk"
        string_val: "9q8zgn"
        string_val: "9qc204"
        string_val: "9qbesm"
        string_val: "9qc25d"
        string_val: "9q9wub"
        string_val: "9q9k3e"
        string_val: "9qbtxz"
        string_val: "9q3y53"
        string_val: "9q9kdv"
        string_val: "9qc1br"
        string_val: "9q9jw9"
        string_val: "9qc01k"
        string_val: "9q8vjw"
        string_val: "9q9ngf"
        string_val: "9q8zzu"
        string_val: "9q9yxs"
        string_val: "dp4d12"
        string_val: "dp4d1n"
        string_val: "9q9vzt"
        string_val: "9q8yt6"
        string_val: "9qdncf"
        string_val: "9q5bc7"
        string_val: "9qcv14"
        string_val: "9qb6zu"
        string_val: "9q9qbx"
        string_val: "9qc8pw"
        string_val: "9q9pqh"
        string_val: "9qbs8t"
        string_val: "9q9p3n"
        string_val: "9q9vyp"
        string_val: "9q9qw5"
        string_val: "dqctep"
        string_val: "9q97r8"
        string_val: "9qc8zb"
        string_val: "9q9j4z"
        string_val: "9q9rtu"
        string_val: "9qc11v"
        string_val: "9q9wu9"
        string_val: "9rcfb9"
        string_val: "9q8yw5"
        string_val: "9q5bf4"
        string_val: "9q9k3q"
        string_val: "9qc140"
        string_val: "drdv4m"
        string_val: "9qbb44"
        string_val: "9q97fx"
        string_val: "9q99w5"
        string_val: "dqctep"
        string_val: "9qc11v"
        string_val: "9q9pr6"
        string_val: "9q9p1w"
        string_val: "9q8zn9"
        string_val: "9q9p55"
        string_val: "9q9xz7"
        string_val: "9rcfb4"
        string_val: "9r4bgw"
        string_val: "9q9qhy"
        string_val: "9q9pyj"
        string_val: "dp4d46"
        string_val: "9qbb48"
        string_val: "drdv4t"
        string_val: "9qc0dz"
        string_val: "9qcemh"
        string_val: "9qbf78"
        string_val: "9q964w"
        string_val: "9q94rd"
        string_val: "9q97v6"
        string_val: "9q6mt5"
        string_val: "9qbv96"
        string_val: "9q8yyz"
        string_val: "9q9664"
        string_val: "9qc8nk"
        string_val: "9q9j3j"
        string_val: "9q8ymn"
        string_val: "9q9k59"
        string_val: "9q8yyz"
        string_val: "9q9p5n"
        string_val: "9q978x"
        string_val: "9qc0fx"
        string_val: "9qbc3q"
        string_val: "9qceze"
        string_val: "9qc00y"
        string_val: "9qc11v"
        string_val: "9q9j38"
        string_val: "9qc04k"
        string_val: "9q8z7z"
        string_val: "9q8yyy"
        string_val: "9q8yq0"
        string_val: "9q9ngd"
        string_val: "9q9net"
        string_val: "9qc03b"
        string_val: "9qcv0g"
        string_val: "9q9kdw"
        string_val: "9q9xyy"
        string_val: "9q9wef"
        string_val: "9qc0eb"
        string_val: "9q9qcv"
        string_val: "9q9keb"
        string_val: "9q9jzf"
        string_val: "9qbdzd"
        string_val: "9q9qbx"
        string_val: "9q9ypq"
        string_val: "9q9xyr"
        string_val: "9q9rrv"
        string_val: "9qc148"
        string_val: "9q8yyy"
        string_val: "9q97fq"
        string_val: "9q9vyj"
        string_val: "9q8yvu"
        string_val: "9q9ptc"
        string_val: "9q94qc"
        string_val: "9qdncu"
        string_val: "9qc0hv"
        string_val: "9qc8n7"
        string_val: "9q9hte"
        string_val: "9q8yyy"
        string_val: "9q9k4r"
        string_val: "9q9p33"
        string_val: "9q9pb5"
        string_val: "9q9k52"
        string_val: "9q8ykw"
        string_val: "9q8zeh"
        string_val: "9q9hxd"
        string_val: "9q9p1w"
        string_val: "9q9d96"
        string_val: "9q9q45"
        string_val: "9q9rvq"
        string_val: "9q9ng7"
        string_val: "9q9rwr"
        string_val: "9qc1bf"
        string_val: "9q8zgp"
        string_val: "9q9hrq"
        string_val: "9q9k6k"
        string_val: "9qc06z"
        string_val: "9qdncu"
        string_val: "9q9nm1"
        string_val: "9qbeum"
        string_val: "9q9wky"
        string_val: "9q9nw4"
        string_val: "9q97fm"
        string_val: "9qc0p3"
        string_val: "9q8zzc"
        string_val: "9qc0g1"
        string_val: "9qbsb3"
        string_val: "9qc2rb"
        string_val: "9q9qbv"
        string_val: "9q9pq6"
        string_val: "9qc2hu"
        string_val: "9q9qkd"
        string_val: "9q9yxg"
        string_val: "9r4bfy"
        string_val: "9qc70m"
        string_val: "9q9nk3"
        string_val: "9q9pyh"
        string_val: "9q5bc7"
        string_val: "9r4c51"
        string_val: "9q9xzp"
        string_val: "9q97fr"
        string_val: "9q9hvf"
        string_val: "dp4d64"
        string_val: "9q9rwn"
        string_val: "9qcc7h"
        string_val: "9qcbbn"
        string_val: "9q99t7"
        string_val: "9q5bc8"
        string_val: "9q9p18"
        string_val: "9q9pb5"
        string_val: "9q9p1c"
        string_val: "9qc0dr"
        string_val: "9q9pmz"
        string_val: "9qc7kf"
        string_val: "9q9zbn"
        string_val: "9q8zt4"
        string_val: "9q9j97"
        string_val: "9q9ke0"
        string_val: "9q9pec"
        string_val: "9q9huq"
        string_val: "9q5bdh"
        string_val: "9q9nmw"
        string_val: "9q8yyt"
        string_val: "9qbf03"
        string_val: "9qbf21"
        string_val: "9qccb0"
        string_val: "9q9qhx"
        string_val: "9q9qcu"
        string_val: "9q6msu"
        string_val: "9q9nes"
        string_val: "9qbesn"
        string_val: "9q9m2r"
        string_val: "9q8ytm"
        string_val: "9q9prh"
        string_val: "9q9xzp"
        string_val: "9qc1cu"
        string_val: "9qc8qz"
        string_val: "9q9m81"
        string_val: "9q8yy1"
        string_val: "9q9pzw"
        string_val: "9qdn26"
        string_val: "9q9z1f"
        string_val: "9qc222"
        string_val: "9q9hw2"
        string_val: "9q8yyy"
        string_val: "9q9ws6"
        string_val: "9qcb0m"
        string_val: "9q9r1t"
        string_val: "9q9rc3"
        string_val: "9qbf13"
        string_val: "9qc8qt"
        string_val: "9q9k4q"
        string_val: "9q9ng6"
        string_val: "9q9j90"
        string_val: "9q9qq6"
        string_val: "9qc7m8"
        string_val: "9q9jxc"
        string_val: "9q9ngg"
        string_val: "9q9xpe"
        string_val: "9q9jh2"
        string_val: "9q9qqj"
        string_val: "9qcubm"
        string_val: "9qcgb3"
        string_val: "9qc3nm"
        string_val: "9q8vz0"
        string_val: "9q9qbx"
        string_val: "9q9nu0"
        string_val: "9qc8zw"
        string_val: "9q9e2f"
        string_val: "9q9p38"
        string_val: "9qc1wp"
        string_val: "9q94r3"
        string_val: "9q8zzm"
        string_val: "9q9k9c"
        string_val: "9q9qf6"
        string_val: "9qc0pd"
        string_val: "9q8yyf"
        string_val: "9qcb0h"
        string_val: "9qc15f"
        string_val: "9qcgct"
        string_val: "9q8yy3"
        string_val: "9q9hq5"
        string_val: "9q9ynh"
        string_val: "9q9pt6"
        string_val: "9q97bw"
        string_val: "9q9kdy"
        string_val: "9q9pqn"
        string_val: "9q9hqm"
        string_val: "9q9r1j"
        string_val: "9qc1x5"
        string_val: "9q9k7s"
        string_val: "9qc1x5"
        string_val: "9qc1xk"
        string_val: "9q9k55"
        string_val: "9q9j8q"
        string_val: "9q94rt"
        string_val: "9q9hgh"
        string_val: "9q9wky"
        string_val: "9qbesn"
        string_val: "9q8yyy"
        string_val: "9q9qc5"
        string_val: "9q9pzw"
        string_val: "9q9pyg"
        string_val: "9q9yxe"
        string_val: "9q9pqq"
        string_val: "9q97bw"
        string_val: "9qc60y"
        string_val: "9q9zb9"
        string_val: "9q9p33"
        string_val: "9q9z1k"
        string_val: "9q9k38"
        string_val: "9q9hrm"
        string_val: "9q9num"
        string_val: "9q8yyq"
        string_val: "9q9hum"
        string_val: "9q9htr"
        string_val: "9q9j9g"
        string_val: "9q9ybt"
        string_val: "9q9qk6"
        string_val: "9q9k30"
        string_val: "9q9hxx"
        string_val: "9q95j5"
        string_val: "9q9ht6"
        string_val: "9q9pt3"
        string_val: "9qcezx"
        string_val: "9q9nft"
        string_val: "9qc24v"
        string_val: "9q8yt4"
        string_val: "9q9pbq"
        string_val: "9q8zn3"
        string_val: "9q9jyh"
        string_val: "9q9k3m"
        string_val: "dqctep"
        string_val: "9q964w"
        string_val: "9qc8pt"
        string_val: "9q7nv8"
        string_val: "9q8zxu"
        string_val: "9q5b9x"
        string_val: "9rcdzg"
        string_val: "9q963k"
        string_val: "9q9pqu"
        string_val: "9qc147"
        string_val: "9q9nqg"
        string_val: "9q9m90"
        string_val: "9q5bc7"
        string_val: "9q8yy2"
        string_val: "9q9jzj"
        string_val: "9q9nmv"
        string_val: "9q9hvc"
        string_val: "9qbdxz"
        string_val: "9q964w"
        string_val: "9q9hv8"
        string_val: "9q9pqk"
        string_val: "9qcb24"
        string_val: "9q9ryj"
        string_val: "9qc0ph"
        string_val: "9qc8nr"
        string_val: "9qcemk"
        string_val: "9rcf8s"
        string_val: "9q9p6c"
        string_val: "9q8zjb"
        string_val: "9q8vuf"
        string_val: "9q9j3p"
        string_val: "9q9p6u"
        string_val: "9q8zg8"
        string_val: "9qc384"
        string_val: "9q8zmm"
        string_val: "9q9nsv"
        string_val: "9q9rbf"
        string_val: "9q8yt2"
        string_val: "9q8zgf"
        string_val: "9qcezc"
        string_val: "9q9zn8"
        string_val: "9q9yqb"
        string_val: "9q9hrx"
        string_val: "9q9pd1"
        string_val: "9q7nt6"
        string_val: "9q9hrx"
        string_val: "9q8yyy"
        string_val: "9q9kew"
        string_val: "9qbgtd"
        string_val: "9q9pwz"
        string_val: "9q9z1d"
        string_val: "9q8yyu"
        string_val: "9q9qq6"
        string_val: "9q9nst"
        string_val: "9q9m90"
        string_val: "dqct9t"
        string_val: "9q9pys"
        string_val: "9q9p1c"
        string_val: "9qcgcz"
        string_val: "9qc0f5"
        string_val: "9q9p3q"
        string_val: "9qc236"
        string_val: "9q9k2s"
        string_val: "9q9p19"
        string_val: "9q9pb5"
        string_val: "9qc8n1"
        string_val: "9qc1z3"
        string_val: "9q9k2f"
        string_val: "9q9r06"
        string_val: "dqct9v"
        string_val: "9q94yj"
        string_val: "9q8yty"
        string_val: "9q94yj"
        string_val: "9q8yyu"
        string_val: "dqctc1"
        string_val: "9q7nv9"
        string_val: "9q9jye"
        string_val: "9q9xzw"
        string_val: "9qbhtj"
        string_val: "9q9k84"
        string_val: "9q9kj0"
        string_val: "9q9htc"
        string_val: "9q9k3f"
        string_val: "9q9m3k"
        string_val: "9qbhsy"
        string_val: "9q9pw0"
        string_val: "9q9rut"
        string_val: "9q8yk9"
        string_val: "9qcb24"
        string_val: "9q9qcs"
        string_val: "9q9k0d"
        string_val: "9q9wu2"
        string_val: "9qc0jm"
        string_val: "9qcv29"
        string_val: "9q9kdu"
        string_val: "9q9jwk"
        string_val: "9q9z0j"
        string_val: "9qbcst"
        string_val: "9q8yyz"
        string_val: "9q9rcj"
        string_val: "9qc0ds"
        string_val: "9q9d94"
        string_val: "9qc0fc"
        string_val: "9q9ycu"
        string_val: "9qcbb5"
        string_val: "9qc40e"
        string_val: "9q8zn3"
        string_val: "9qbb5j"
        string_val: "9r4c48"
        string_val: "9q8yyp"
        string_val: "9q96ht"
        string_val: "9q9m8b"
        string_val: "9q97bk"
        string_val: "9q9kds"
        string_val: "9q9z8w"
        string_val: "9q8yuv"
        string_val: "9q97b3"
        string_val: "9q9nur"
        string_val: "9q9k3g"
        string_val: "dp4d18"
        string_val: "9q97bx"
        string_val: "9qc9pd"
        string_val: "9q9j5n"
        string_val: "9qc0en"
        string_val: "9q9qbv"
        string_val: "9q9jx4"
        string_val: "9qbep3"
        string_val: "9q97f8"
        string_val: "9q9m43"
        string_val: "9q9p1y"
        string_val: "dp4d64"
        string_val: "9qbs8w"
        string_val: "9q8ytj"
        string_val: "9q9k62"
        string_val: "9qc0n5"
        string_val: "9qc7m1"
        string_val: "9q9yru"
        string_val: "9q94rc"
        string_val: "9q8zxj"
        string_val: "dqcten"
        string_val: "9q9hwd"
        string_val: "9q9j46"
        string_val: "9qcu0d"
        string_val: "9qc1wp"
        string_val: "9q9k0n"
        string_val: "9qc4zu"
        string_val: "9qc1y6"
        string_val: "9q8yyz"
        string_val: "9q9qcv"
        string_val: "9q8ysq"
        string_val: "9q9k2r"
        string_val: "9q9p6e"
        string_val: "9qc2hc"
        string_val: "9q9ynz"
        string_val: "9qcezc"
        string_val: "9q9yxc"
        string_val: "9q97cm"
        string_val: "9q9pq7"
        string_val: "9q9qtb"
        string_val: "9q9r1w"
        string_val: "9q9p1u"
        string_val: "9q9hpe"
        string_val: "9q9zbr"
        string_val: "9q9nkd"
        string_val: "9qc0f7"
        string_val: "dqctem"
        string_val: "9qcet3"
        string_val: "9qbdz8"
        string_val: "9q95zv"
        string_val: "9q9j51"
        string_val: "9q8yyz"
        string_val: "9q9vyp"
        string_val: "9q9xzw"
        string_val: "9q9pr2"
        string_val: "9q9yxu"
        string_val: "9q9nt1"
        string_val: "dp4d60"
        string_val: "9qbcd4"
        string_val: "9qc2hu"
        string_val: "9q9k3f"
        string_val: "dp4d48"
        string_val: "9q8yyp"
        string_val: "9q93gb"
        string_val: "9q9p6s"
        string_val: "9q966d"
        string_val: "9q9k3e"
        string_val: "9qbe4d"
        string_val: "9qbeey"
        string_val: "9q9hfp"
        string_val: "9qc4pt"
        string_val: "9q5bcc"
        string_val: "9qc0fe"
        string_val: "9q9hpg"
        string_val: "9qb6pf"
        string_val: "9q9rur"
        string_val: "9qbdp1"
        string_val: "9q9kb0"
        string_val: "9q9p5b"
        string_val: "9q7nt8"
        string_val: "9q9d97"
        string_val: "9q9j3n"
        string_val: "9q8yy9"
        string_val: "9qbv96"
        string_val: "9q9zbf"
        string_val: "dp4d4r"
        string_val: "9qc60m"
        string_val: "9qc7qh"
        string_val: "9q9nmg"
        string_val: "9q9k1n"
        string_val: "9q9xp9"
        string_val: "9q9ndk"
        string_val: "9qc1bn"
        string_val: "9q8vz9"
        string_val: "9q9wez"
        string_val: "9q9py7"
        string_val: "9q9k46"
        string_val: "9q9m83"
        string_val: "9q8ytt"
        string_val: "9qcv01"
        string_val: "9q8yhv"
        string_val: "9qbdbe"
        string_val: "9q9jhm"
        string_val: "9qc1wj"
        string_val: "9q7nt1"
        string_val: "9qbdym"
        string_val: "9qc8r8"
        string_val: "9q8yyh"
        string_val: "9q97gz"
        string_val: "9q96jc"
        string_val: "9q9kk6"
        string_val: "9q9ncu"
        string_val: "9q9yrg"
        string_val: "9q979z"
        string_val: "9rcf8d"
        string_val: "9q9nn9"
        string_val: "9q9jz1"
        string_val: "9q9ycp"
        string_val: "9rcdqy"
        string_val: "9q9qcs"
        string_val: "9q9hgp"
        string_val: "9q9nx1"
        string_val: "9qc8zf"
        string_val: "9q9pb7"
        string_val: "9q7nt3"
        string_val: "9q9r1n"
        string_val: "9qc11c"
        string_val: "9q9wsm"
        string_val: "9q9j8q"
        string_val: "9qb6zv"
        string_val: "9qc0n5"
        string_val: "9q9nck"
        string_val: "9q8uvz"
        string_val: "9q9k3q"
        string_val: "9q9j4h"
        string_val: "9q9p9j"
        string_val: "9q9hpc"
        string_val: "9q9wub"
        string_val: "9q9nsq"
        string_val: "9qcezt"
        string_val: "9q9vzy"
        string_val: "9q9qcv"
        string_val: "9q8z7z"
        string_val: "9qc01d"
        string_val: "9q9hsy"
        string_val: "9q9hw0"
        string_val: "9q9p9b"
        string_val: "9qc239"
        string_val: "9q9d8e"
        string_val: "9q9nm9"
        string_val: "9q9m3m"
        string_val: "9q8yy6"
        string_val: "9q9d95"
        string_val: "9qc1wj"
        string_val: "9q9jrr"
        string_val: "9qc0n1"
        string_val: "9q9r26"
        string_val: "9qbf5z"
        string_val: "9q8yxk"
        string_val: "9qbb5j"
        string_val: "9q97pt"
        string_val: "9q97eh"
        string_val: "9q8ytj"
        string_val: "9q9z1d"
        string_val: "dp4d44"
        string_val: "9q7ntd"
        string_val: "9q9k1s"
        string_val: "9q9hfp"
        string_val: "9q9k43"
        string_val: "9qc8n7"
        string_val: "9q9ruv"
        string_val: "9q9qqr"
        string_val: "9q8yyu"
        string_val: "9qc8p1"
        string_val: "9qcgc5"
        string_val: "9qc0ju"
        string_val: "9q9k54"
        string_val: "9q8zn0"
        string_val: "9qc1c0"
        string_val: "9qc8pg"
        string_val: "9qbhgb"
        string_val: "9q9pz6"
        string_val: "9q9p8j"
        string_val: "9q9k24"
        string_val: "9q9xxz"
        string_val: "9q9xxe"
        string_val: "dp4d39"
        string_val: "9q9yyw"
        string_val: "9q8yyz"
        string_val: "9q97bg"
        string_val: "9qbb4m"
        string_val: "9q9qkw"
        string_val: "9q9j55"
        string_val: "9q8zzt"
        string_val: "9q9nqu"
        string_val: "9q97ct"
        string_val: "9qc9p8"
        string_val: "9qbgmw"
        string_val: "9q9p5r"
        string_val: "9q5b9u"
        string_val: "9qc8nt"
        string_val: "9q8vyb"
        string_val: "dqctfg"
        string_val: "9qbf13"
        string_val: "9q9nuh"
        string_val: "9q9kf5"
        string_val: "9q97pz"
        string_val: "9qc03f"
        string_val: "9q9p9q"
        string_val: "9qc0hy"
        string_val: "dqcteq"
        string_val: "9q9nez"
        string_val: "9q9ycx"
        string_val: "9qbc9c"
        string_val: "9q9yez"
        string_val: "9q9nm9"
        string_val: "9q9z0u"
        string_val: "9qbdzc"
        string_val: "9q9xzt"
        string_val: "9qbc91"
        string_val: "9qc9p9"
        string_val: "9q8yy7"
        string_val: "9qc8qc"
        string_val: "9qc9pd"
        string_val: "9q9k5h"
        string_val: "9q94z3"
        string_val: "9qc8zc"
        string_val: "9qc8qz"
        string_val: "9q5bcc"
        string_val: "9q9pb4"
        string_val: "9q9k2x"
        string_val: "9qbc9m"
        string_val: "9q9p1k"
        string_val: "9q9ngb"
        string_val: "9qbfuz"
        string_val: "9q9nes"
        string_val: "9q9k5g"
        string_val: "9q9nqm"
        string_val: "9q9nuh"
        string_val: "9qcb0j"
        string_val: "9q9z16"
        string_val: "9q9pz7"
        string_val: "9q9k54"
        string_val: "9qcgbd"
        string_val: "9q9kde"
        string_val: "9q9yxc"
        string_val: "9q9m8t"
        string_val: "9q9r0j"
        string_val: "dp4d1c"
        string_val: "9q8ytu"
        string_val: "9q6mt1"
        string_val: "9qbg6v"
        string_val: "9q9njt"
        string_val: "9q9k7x"
        string_val: "9qdnc8"
        string_val: "9qbf9y"
        string_val: "9qc7q6"
        string_val: "9q9p37"
        string_val: "9q8yuu"
        string_val: "9q9pe3"
        string_val: "9q8zsv"
        string_val: "9qcbbh"
        string_val: "9r4bft"
        string_val: "9q8yyx"
        string_val: "9qc8qx"
        string_val: "9q9nnb"
        string_val: "9q8ytv"
        string_val: "9q8yyp"
        string_val: "9qc2hu"
        string_val: "9qc8qq"
        string_val: "9qdngm"
        string_val: "9q9r4e"
        string_val: "9q9jxb"
        string_val: "9q9k61"
        string_val: "9q94zd"
        string_val: "9q94r5"
        string_val: "9q9x8e"
        string_val: "9q9yxm"
        string_val: "9q9kk7"
        string_val: "dp4d68"
        string_val: "9q9kkr"
        string_val: "9qc8qb"
        string_val: "9q8yyy"
        string_val: "9q9wev"
        string_val: "9qc269"
        string_val: "9q9rcj"
        string_val: "9q9hfz"
        string_val: "9q9jwx"
        string_val: "9qc1ww"
        string_val: "9q9m3j"
        string_val: "9q9hxn"
        string_val: "9q8zn2"
        string_val: "9q9ryr"
        string_val: "9q9k8d"
        string_val: "9q8vjg"
        string_val: "9q9jb3"
        string_val: "9qc7m8"
        string_val: "9q9pq7"
        string_val: "9rcdxv"
        string_val: "9q8vxe"
        string_val: "9rcfbh"
        string_val: "9q9jx9"
        string_val: "9qc8qk"
        string_val: "9q9keh"
        string_val: "9q9ndq"
        string_val: "9q9pyg"
        string_val: "9q97g5"
        string_val: "9qc8qd"
        string_val: "9qc60v"
        string_val: "9q7nw3"
        string_val: "9qcemh"
        string_val: "9rcfb8"
        string_val: "dp4d63"
        string_val: "9qc0s0"
        string_val: "9q8yyx"
        string_val: "9q93vr"
        string_val: "9qcbb5"
        string_val: "9q8yvs"
        string_val: "9q97fm"
        string_val: "9q9x8x"
        string_val: "9qc2k2"
        string_val: "9q9x8k"
        string_val: "9q9k1w"
        string_val: "9q9jwy"
        string_val: "9qc2hk"
        string_val: "9q9ypq"
        string_val: "9q8vyf"
        string_val: "9qbv96"
        string_val: "9q9nm6"
        string_val: "9q9d3k"
        string_val: "9q9xzz"
        string_val: "9q9qhx"
        string_val: "9q9pwc"
        string_val: "9qc148"
        string_val: "9q8zz2"
        string_val: "9q9jze"
        string_val: "9q9k4k"
        string_val: "9q8yjw"
        string_val: "9q9xxg"
        string_val: "9q9nu7"
        string_val: "9qdn85"
        string_val: "9q97pr"
        string_val: "9q9prd"
        string_val: "9qbdpz"
        string_val: "9q9rym"
        string_val: "9q8vmh"
        string_val: "9q8yvf"
        string_val: "9q6mtk"
        string_val: "9qbdrr"
        string_val: "9q8zj9"
        string_val: "9q97pu"
        string_val: "9qcbb9"
        string_val: "9qc8zz"
        string_val: "9q9jh3"
        string_val: "9q9k36"
        string_val: "9q9k08"
        string_val: "9q8yt3"
        string_val: "9qc2j2"
        string_val: "9qbfb0"
        string_val: "9q9pwk"
        string_val: "9q9j3w"
        string_val: "9q9nqp"
        string_val: "9q9xpd"
        string_val: "9rcdz6"
        string_val: "9q8ywm"
        string_val: "9q8yvx"
        string_val: "9q9p37"
        string_val: "9q9nsg"
        string_val: "9qc0s0"
        string_val: "9q9jhq"
        string_val: "dp4d6c"
        string_val: "9r4c5c"
        string_val: "9q9pqn"
        string_val: "9q5b9v"
        string_val: "9q9pb7"
        string_val: "9q8zn2"
        string_val: "9q8yyx"
        string_val: "9qc8rn"
        string_val: "9qc2n2"
        string_val: "9q8vjv"
        string_val: "9q99qn"
        string_val: "9qc60t"
        string_val: "9qc407"
        string_val: "9q9k2v"
        string_val: "9q5bc6"
        string_val: "dp4d1c"
        string_val: "9q9j99"
        string_val: "9q9k0d"
        string_val: "9qc8nu"
        string_val: "9qc1yb"
        string_val: "9qbv9s"
        string_val: "9q9qk8"
        string_val: "9q9pme"
        string_val: "9qc1xj"
        string_val: "9q9rvn"
        string_val: "9qbfdm"
        string_val: "9q9pyb"
        string_val: "9qc8n6"
        string_val: "9qc3q0"
        string_val: "9q9wuc"
        string_val: "9q9jyb"
        string_val: "9q9hxj"
        string_val: "9q8vjg"
        string_val: "9q8zgq"
        string_val: "9qc40c"
        string_val: "9q9jx7"
        string_val: "9q9r1t"
        string_val: "9q8ytz"
        string_val: "9q9p7t"
        string_val: "dp4d1h"
        string_val: "9q9z14"
        string_val: "9q8yyz"
        string_val: "dqctg2"
        string_val: "9q8zkm"
        string_val: "9q9k8d"
        string_val: "9q9r0z"
        string_val: "9q9k65"
        string_val: "9q9m89"
        string_val: "9qc8pc"
        string_val: "9q9nmy"
        string_val: "dqct9u"
        string_val: "9qc7md"
        string_val: "9qc261"
        string_val: "9q99qs"
        string_val: "9q8yyy"
        string_val: "9q962g"
        string_val: "9q9j1t"
        string_val: "9q9nud"
        string_val: "9q9p16"
        string_val: "9q9pyv"
        string_val: "9qc8qv"
        string_val: "9q9p50"
        string_val: "9q8yvb"
        string_val: "9qc3q2"
        string_val: "9q9p94"
        string_val: "9qc24n"
        string_val: "9q9m8m"
        string_val: "9q7nv9"
        string_val: "dp4d6s"
        string_val: "9qc0j2"
        string_val: "9qc40d"
        string_val: "9q8vy9"
        string_val: "9qc8nm"
        string_val: "9q6mt3"
        string_val: "9qc1xq"
        string_val: "9q9qcs"
        string_val: "9q8zzv"
        string_val: "9r4bgp"
        string_val: "9q8yqm"
        string_val: "9qbesj"
        string_val: "9qc6eg"
        string_val: "9q9jw9"
        string_val: "9q9z1m"
        string_val: "9q9k4b"
        string_val: "9q9yn5"
        string_val: "9q9njm"
        string_val: "9q9p1c"
        string_val: "9qc9xz"
        string_val: "9q8zmq"
        string_val: "9qc7r4"
        string_val: "9q9kec"
        string_val: "9qbv97"
        string_val: "9q9x8r"
        string_val: "9q8yyp"
        string_val: "9q9hrb"
        string_val: "9qc0pf"
        string_val: "9q9rbv"
        string_val: "9q5bc8"
        string_val: "9q9d8f"
        string_val: "9q5bce"
        string_val: "9q9jhn"
        string_val: "9qc03s"
        string_val: "9q9qce"
        string_val: "9qc3bh"
        string_val: "9q97gv"
        string_val: "9qcufk"
        string_val: "9q9pyy"
        string_val: "9q9yxs"
        string_val: "9q9ngx"
        string_val: "9q9x8u"
        string_val: "9q9p1f"
        string_val: "9q9nk5"
        string_val: "9q9kdm"
        string_val: "9q9huy"
        string_val: "9q9wep"
        string_val: "9qbesn"
        string_val: "9q8yt6"
        string_val: "9q9j8d"
        string_val: "9q5b9g"
        string_val: "9q9k2g"
        string_val: "9q9wsu"
        string_val: "9q8yke"
        string_val: "9qctr6"
        string_val: "9q9nqv"
        string_val: "9q9yxc"
        string_val: "dp4d1d"
        string_val: "9qcezt"
        string_val: "9q9nnx"
        string_val: "dp4d46"
        string_val: "9qc1wj"
        string_val: "9qc2nf"
        string_val: "dqctfd"
        string_val: "9q9xyx"
        string_val: "9q9nq9"
        string_val: "9q9k5f"
        string_val: "9qc1k9"
        string_val: "9q9pwk"
        string_val: "9q9pq7"
        string_val: "9q97uk"
        string_val: "9qc00z"
        string_val: "9q9k0d"
        string_val: "9r4bgr"
        string_val: "9qc8qv"
        string_val: "9q8zn2"
        string_val: "9q9q73"
        string_val: "9q9z1m"
        string_val: "9q9jhm"
        string_val: "9qdngn"
        string_val: "9q9kdu"
        string_val: "9q9rbf"
        string_val: "dp4d44"
        string_val: "9q9rc7"
        string_val: "9qc262"
        string_val: "9q97g9"
        string_val: "9q9nq2"
        string_val: "9q9hrr"
        string_val: "9q9ken"
        string_val: "9q9rbg"
        string_val: "9q9rym"
        string_val: "9q9nsj"
        string_val: "9q7nw3"
        string_val: "9qbf8m"
        string_val: "9q9ptd"
        string_val: "9qc0pu"
        string_val: "9q9zcj"
        string_val: "9q9pbn"
        string_val: "9q9pqj"
        string_val: "9q9kdj"
        string_val: "9q962d"
        string_val: "9q5bc8"
        string_val: "9qbfds"
        string_val: "9q9pyu"
        string_val: "9q9j5h"
        string_val: "9qc0fm"
        string_val: "9qdn27"
        string_val: "9q8yy9"
        string_val: "9qcbbe"
        string_val: "9q9yrg"
        string_val: "9q8yhy"
        string_val: "9q9jzp"
        string_val: "9qc1wb"
        string_val: "9qc1wm"
        string_val: "9q9wsp"
        string_val: "9q5bcc"
        string_val: "9q9hr3"
        string_val: "9qdn20"
        string_val: "9q9pbp"
        string_val: "dp4d60"
        string_val: "9q9kb8"
        string_val: "9q962q"
        string_val: "9q9nmh"
        string_val: "9q8vxt"
        string_val: "9q8yw5"
        string_val: "dqctf2"
        string_val: "9q9k6w"
        string_val: "9q97fg"
        string_val: "dqcter"
        string_val: "9q8ywp"
        string_val: "9q99tc"
        string_val: "9qbsb9"
        string_val: "9q8zn2"
        string_val: "9qc1x9"
        string_val: "9q7nv8"
        string_val: "9qbdz4"
        string_val: "9q9627"
        string_val: "9q9ngw"
        string_val: "9q9wsy"
        string_val: "dp4d4q"
        string_val: "9q8zxy"
        string_val: "9q9h9v"
        string_val: "9qc0hg"
        string_val: "9qcbbk"
        string_val: "9q8zek"
        string_val: "9q9pw0"
        string_val: "9qc24m"
        string_val: "9q9j57"
        string_val: "9q9z41"
        string_val: "9qc0pn"
        string_val: "9q9xp8"
        string_val: "9qc8qt"
        string_val: "9qbb49"
        string_val: "9q9zb7"
        string_val: "9qbc3q"
        string_val: "9q9huk"
        string_val: "9q97gs"
        string_val: "dqctfg"
        string_val: "9qc11v"
        string_val: "9q9p1z"
        string_val: "9qc7m6"
        string_val: "9q9qk2"
        string_val: "9q9hvq"
        string_val: "9q9nss"
        string_val: "9q9k29"
        string_val: "9q9ycr"
        string_val: "9q9p31"
        string_val: "9q9kfg"
        string_val: "9q96jc"
        string_val: "9qcgcz"
        string_val: "9qc60d"
        string_val: "dqctex"
        string_val: "9q9d8e"
        string_val: "dp4d65"
        string_val: "9q94wq"
        string_val: "9q9ryg"
        string_val: "9qbdwe"
        string_val: "9qbfuz"
        string_val: "9q9k48"
        string_val: "9q8yxj"
        string_val: "9qc2hs"
        string_val: "9q9q6f"
        string_val: "9q9nnq"
        string_val: "9q9zc4"
        string_val: "9q9pse"
        string_val: "9q9qcv"
        string_val: "9q9ng8"
        string_val: "9q9ng6"
        string_val: "9q9j9k"
        string_val: "9qc235"
        string_val: "9q9z8z"
        string_val: "9q8zz3"
        string_val: "9qbs8t"
        string_val: "9q9x8g"
        string_val: "9qc1ch"
        string_val: "9q9p3n"
        string_val: "9q9hud"
        string_val: "9q9k7q"
        string_val: "9q9wu8"
        string_val: "9q8yyy"
        string_val: "9q97cj"
        string_val: "9q8ywk"
        string_val: "9q8yyv"
        string_val: "9q9p3h"
        string_val: "9qctr5"
        string_val: "9qc20r"
        string_val: "9q9k7j"
        string_val: "9q97vh"
        string_val: "9q93qj"
        string_val: "9qc2hm"
        string_val: "9q9ng9"
        string_val: "9q97gu"
        string_val: "9q7nwj"
        string_val: "9qc261"
        string_val: "9q9xpd"
        string_val: "9q9j57"
        string_val: "9q8yw4"
        string_val: "9qc11y"
        string_val: "9q97em"
        string_val: "9q97fr"
        string_val: "9q9r23"
        string_val: "9qdn25"
        string_val: "9q97cx"
        string_val: "9q9p1y"
        string_val: "9q9jy4"
        string_val: "9r4c4b"
        string_val: "9qc1k8"
        string_val: "9qc0hu"
        string_val: "9rcfb3"
        string_val: "9qc0eg"
        string_val: "9q9j5c"
        string_val: "9q9kew"
        string_val: "9q9ngr"
        string_val: "9qc2hu"
        string_val: "9q9k88"
        string_val: "9qc004"
        string_val: "9q9p91"
        string_val: "9q8yxj"
        string_val: "9q9pbz"
        string_val: "9qc8pu"
        string_val: "9q9p8r"
        string_val: "9q9pq5"
        string_val: "9q9nm7"
        string_val: "9q8zgw"
        string_val: "9q9p8f"
        string_val: "dp4d60"
        string_val: "9q8yyp"
        string_val: "9q8zec"
        string_val: "9qbdxq"
        string_val: "9q9q6g"
        string_val: "9rcdxv"
        string_val: "9q9m41"
        string_val: "9q8zn0"
        string_val: "9q99tt"
        string_val: "9q9k64"
        string_val: "9qbfds"
        string_val: "9qc7qb"
        string_val: "9qc0n5"
        string_val: "9q8ywq"
        string_val: "9q9k7r"
        string_val: "9r4c51"
        string_val: "9q99qj"
        string_val: "9q9m2q"
        string_val: "9q9z1h"
        string_val: "9q9kee"
        string_val: "9q8yvh"
        string_val: "9q9yn3"
        string_val: "9q9km0"
        string_val: "9qdnc6"
        string_val: "9q9k4n"
        string_val: "9q8ywq"
        string_val: "9q7ny0"
        string_val: "9q9k0e"
        string_val: "9q9k2f"
        string_val: "9qcsp8"
        string_val: "9qdn25"
        string_val: "9qc8pg"
        string_val: "9qbbpc"
        string_val: "9q9qc5"
        string_val: "9q9nmn"
        string_val: "9q9pb7"
        string_val: "9qc7r1"
        string_val: "9q5b9u"
        string_val: "9q9ypp"
        string_val: "9q9p9r"
        string_val: "9q9qc4"
        string_val: "9qc8rd"
        string_val: "9qbfc6"
        string_val: "9q9j4k"
        string_val: "dqcter"
        string_val: "9q9k83"
        string_val: "9q9k77"
        string_val: "9q9xxz"
        string_val: "9q96j4"
        string_val: "9q9pzh"
        string_val: "9qbdbz"
        string_val: "9qc40e"
        string_val: "9q9z17"
        string_val: "9qc0je"
        string_val: "9q9ry9"
        string_val: "9q8ym8"
        string_val: "9q9k7h"
        string_val: "9q9jwq"
        string_val: "9q9yey"
        string_val: "9qbs8x"
        string_val: "9q9znc"
        string_val: "9q8vyk"
        string_val: "9q9j5e"
        string_val: "9qc0nn"
        string_val: "9qc06z"
        string_val: "9q5b9x"
        string_val: "9q9hpk"
        string_val: "9q8zgb"
        string_val: "9qcemr"
        string_val: "9qc24n"
        string_val: "9q9xzz"
        string_val: "9q9j39"
        string_val: "9qc7mk"
        string_val: "9q94xp"
        string_val: "9q9pmy"
        string_val: "9q9p1k"
        string_val: "9qcgct"
        string_val: "9q9ps5"
        string_val: "9q9htz"
        string_val: "9q9kc8"
        string_val: "9qc3bx"
        string_val: "9qcc74"
        string_val: "9q8zzd"
        string_val: "9q8yvg"
        string_val: "9q9d9k"
        string_val: "9qcb2m"
        string_val: "9qc7ms"
        string_val: "9qcszy"
        string_val: "9q9pb0"
        string_val: "9q9prs"
        string_val: "9q8yjh"
        string_val: "9q9pvv"
        string_val: "9q8zmm"
        string_val: "dqctex"
        string_val: "9q9k6t"
        string_val: "9qbfbj"
        string_val: "9q9p67"
        string_val: "9q9k4j"
        string_val: "9q8yyy"
        string_val: "9q9vzy"
        string_val: "9q9r04"
        string_val: "9qc8rd"
        string_val: "9qbb4m"
        string_val: "9q8yy1"
        string_val: "9qbe4c"
        string_val: "9q9p4j"
        string_val: "9q9qqr"
        string_val: "9qbfd7"
        string_val: "9qbeu0"
        string_val: "9qc8zz"
        string_val: "9qc8nk"
        string_val: "9qc7mw"
        string_val: "9qc0dm"
        string_val: "9q5bdh"
        string_val: "9q5bcd"
        string_val: "9qc70t"
        string_val: "9q8yyy"
        string_val: "9q8zn3"
        string_val: "9q8ynh"
        string_val: "9q9htx"
        string_val: "9q8ynn"
        string_val: "9qb9zv"
        string_val: "9q9r42"
        string_val: "9r4bgn"
        string_val: "9q99qn"
        string_val: "9q8yvb"
        string_val: "9q9j8k"
        string_val: "9qcufs"
        string_val: "9q9pz6"
        string_val: "9q9p6d"
        string_val: "9q97v1"
        string_val: "9qbesm"
        string_val: "9qc0jp"
        string_val: "9q9p37"
        string_val: "9q9rb9"
        string_val: "9q94q8"
        string_val: "9qc9p6"
        string_val: "9q94rm"
        string_val: "9q9kh1"
        string_val: "9q99td"
        string_val: "9q9ngd"
        string_val: "9q9rbu"
        string_val: "9qc7md"
        string_val: "9qc0pf"
        string_val: "9q9p95"
        string_val: "9qc0fp"
        string_val: "9q8ytg"
        string_val: "9qc1hx"
        string_val: "9qc2hj"
        string_val: "9q97fq"
        string_val: "9qcgbg"
        string_val: "dp4d19"
        string_val: "dp4d6s"
        string_val: "9q9nfx"
        string_val: "9qc1xc"
        string_val: "9qc8zc"
        string_val: "9q8yvs"
        string_val: "9q9x8v"
        string_val: "9qc04k"
        string_val: "9q94rc"
        string_val: "9qbfb2"
        string_val: "9qc7q4"
        string_val: "9q9k4j"
        string_val: "9qc8ns"
        string_val: "9qc0pf"
        string_val: "9q9ycx"
        string_val: "9q9wt4"
        string_val: "9q9p9d"
        string_val: "9q5bcd"
        string_val: "9q9k4t"
        string_val: "9qc3q0"
        string_val: "9q9yng"
        string_val: "9qc9p3"
        string_val: "9q9k51"
        string_val: "9q9k5w"
        string_val: "9q9rbx"
        string_val: "9q9pkb"
        string_val: "9q97pw"
        string_val: "9qcb09"
        string_val: "9q5bcc"
        string_val: "9qbghz"
        string_val: "9qc3q2"
        string_val: "9qcb0n"
        string_val: "9q9ryr"
        string_val: "9qc0fe"
        string_val: "9qc0fr"
        string_val: "9q9hwv"
        string_val: "9qc01x"
        string_val: "9q9z0n"
        string_val: "9q9ryq"
        string_val: "9q97g6"
        string_val: "9q8yyz"
        string_val: "9q8zn0"
        string_val: "9q8ywr"
        string_val: "9q9p94"
        string_val: "9q8zn8"
        string_val: "9qceth"
        string_val: "9qc3bs"
        string_val: "9q7ntg"
        string_val: "9q95z6"
        string_val: "9qc8pc"
        string_val: "9q8zmr"
        string_val: "9q9njc"
        string_val: "9qbf0h"
        string_val: "9qc8rj"
        string_val: "9q9r18"
        string_val: "dqctem"
        string_val: "9q9pqd"
        string_val: "9q7ntb"
        string_val: "dqcter"
        string_val: "9q8zn3"
        string_val: "9qc7r1"
        string_val: "9q8yvc"
        string_val: "9q8yyq"
        string_val: "9qc0gj"
        string_val: "9q99r4"
        string_val: "9q9j8r"
        string_val: "9q8yyu"
        string_val: "9qbs8w"
        string_val: "9q9xxs"
        string_val: "9qc8qd"
        string_val: "9qc38h"
        string_val: "9q9wt3"
        string_val: "9qc8ns"
        string_val: "9qc0fd"
        string_val: "9q9ke5"
        string_val: "9q9xxs"
        string_val: "9q9jy0"
        string_val: "9q6mt1"
        string_val: "9q9kk9"
        string_val: "9q8yx4"
        string_val: "9q8zgm"
        string_val: "9qc7qh"
        string_val: "9q9yn6"
        string_val: "9qc8p0"
        string_val: "9qdncc"
        string_val: "9qdncu"
        string_val: "9q9k6j"
        string_val: "9q9p4h"
        string_val: "9q97bx"
        string_val: "9qc60e"
        string_val: "9q8zzf"
        string_val: "9q9qhy"
        string_val: "9q8zzz"
        string_val: "9q8yvu"
        string_val: "9qc1s5"
        string_val: "9qc9p2"
        string_val: "9q9r0p"
        string_val: "9qc11u"
        string_val: "9q9ppq"
        string_val: "9q9xzr"
        string_val: "9qctpd"
        string_val: "9q8yts"
        string_val: "dp4d13"
        string_val: "9qdnfj"
        string_val: "9q9j98"
        string_val: "9q9jxm"
        string_val: "9q9rbj"
        string_val: "9rcfb5"
      }
    }
  }
}
node {
  name: "SparseTensor/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "SparseTensor_1/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2508
          }
          dim {
            size: 2
          }
        }
        tensor_contentt\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\000\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \002\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\002\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\314\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\315\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\316\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\317\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\320\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\321\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\322\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\323\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\324\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\325\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\326\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\327\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\330\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\331\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\332\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\333\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\334\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\335\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\336\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\337\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\340\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\341\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\342\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\343\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\344\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\345\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\346\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\347\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\350\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\351\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\352\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\353\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\354\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\355\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\356\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\357\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\360\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\361\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\362\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\363\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\364\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\365\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\366\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\367\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\370\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\371\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\372\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\373\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\374\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\375\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\376\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\005\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \006\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\006\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\006\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\006\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\006\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\006\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\006\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\006\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\006\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\006\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r`\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\010\000\000\000\000\000\000\000\000\000\000\000\000\000\000~t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\003\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\007\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\010\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\t\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\n\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\013\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\014\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\r\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\016\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\021\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\022\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\023\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\026\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\027\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\032\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\034\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\035\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\036\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\037\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \t\000\000\000\000\000\000\000\000\000\000\000\000\000\000!\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\"\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000#\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000$\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000%\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000&\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\'\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000)\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000*\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000+\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000,\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000-\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000.\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000/\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0000\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0001\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0002\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0003\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0004\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0006\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0007\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0008\t\000\000\000\000\000\000\000\000\000\000\000\000\000\0009\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000:\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000;\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000<\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000=\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000>\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000?\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000A\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000B\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000C\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000D\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000E\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000F\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000G\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000H\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000I\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000J\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000K\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000L\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000N\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000P\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Q\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000R\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000S\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000T\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000U\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000V\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000W\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000X\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Y\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000Z\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000[\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\\\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000]\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000^\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000_\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000`\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000a\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000b\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000c\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000d\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000e\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000f\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000g\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000i\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000k\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000l\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000m\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000n\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000o\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000p\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000q\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000r\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000s\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000t\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000u\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000v\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000w\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000x\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000y\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000z\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000{\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000|\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000}\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000~\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\177\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\200\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\201\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\202\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\203\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\204\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\205\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\207\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\211\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\212\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\213\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\214\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\215\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\216\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\217\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\220\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\221\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\222\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\223\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\224\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\225\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\226\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\227\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\231\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\232\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\233\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\234\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\235\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\236\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\237\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\240\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\241\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\242\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\243\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\244\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\245\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\246\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\247\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\251\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\253\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\254\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\255\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\256\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\260\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\261\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\262\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\263\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\264\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\265\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\266\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\267\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\271\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\272\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\273\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\274\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\275\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\276\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\277\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\300\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\301\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\302\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\303\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\304\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\305\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\306\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\307\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\310\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\311\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\312\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000\313\t\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "SparseTensor_1/values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 2508
          }
        }
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Multi Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Townhouse"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Condo"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
        string_val: "Single Family"
      }
    }
  }
}
node {
  name: "SparseTensor_1/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\000\000\000\000\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "Const_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2508
          }
        }
        tensor_content: "\000\361\275H\0004\236H\000e\201H\000|\222I\300u\222H\300\004tI\200\016\005I\200\237UI\200\000\206I\000@\234H\300\341\375H\300~\266I\000\357\347H\300Y\352H\200\247*I\200\226\030I\000c\022H\200tqI\000\261\036I`\376MJ\200\321\rI\340\353gI\000\353%H\000\367\274H\000Q\256H\000)\213H\300\301\257H\000Q\256H\200\266\346I\200a\276H\200\226\230I\200\010\006I\000\263\361H\300\257\031I\300\002\246H\300\265]I\000\261\036I\300\232\333I\000e\001I\300\263BJ\34052I\000\263\361H\000\310\257H\300\306\252I\200\3346I\000=[I\000\001\345H\200\255\333H\340\325sJ\200\237UI\000g\324H\200\021CI\000\252\036I\200\377wH\200%\026I\200\324aJ\200\226\230Jp\344\252I\000u\022I\000P\303I\300\306*I\200\247*I\200=\022I\000\266\200G\200C\221I\200\001\034I\340b\036J\300\221\236I\200y\010I\000\317\003I\200S\352H\200o\222H\200{[I\000\376&I\340\342*I\200\266\333I\200\226\230I\200\226\230I\200\226\030J\000\366\321H\000\314XI\300>\214I\000G\206H\300\375\245H\000\033\267H\000\205\317H\200\325LI\000G\206I\000\320\204I\300\252\205I\000#\014I ] I\200\226\030I@\r\200I\200\3346I\000\376&I|\235\002J\200\237UI\000\2056H@\357\204I\300\306\252I\000\317\231H\000u\250H\000\361\275H\000h?Gpo\230J\000^\027H\300\0016I\240\002\224J\200jII\200\345\363I\000\326\003I\200\360\tI\000\203`H\000\310/I@\231\274I\300~\266I@\026\275I\0002HI@\301xI\340\305LJ\200\016\005I\300@\006I\000@\006I\300\024\236I\0006qI\360OCI\000Y\203H\300\252\205I\300T\326H\000rgI\200\313VI\200S\352H\300+\257I@\222\322I\200\331\252H\200Q\027H\000\317\231H \233\005J\000\247\363H\000j\025H\000/\212H`uOJ\020g\034K\300@\006I`QUJ\200\276;I\200{[I\000\037\340H\370#\364I\34052I@M8I\200C\206I\000\254\333H\000T\354H\000\205\317H\000\320\204I\200\237\325J\300\265\230H\000-\264H\300e\317Ipo\230J\200hsJ\000\301\305H\000\330\326H\000B\357I\000g\324H\200Q\342H\000Y\003H\000\317\231H\000^\227H\000\361\275H\000$tH\200\331\252H\200\334\266I\200mqI\000\r\343H\000\rcI\200\371\370H\300\321\326H\200\237UI\000\346*I\200\237UI\000\276\007H\200\365\035J\000\360RI\300~\266I\340A\357H\200r\036I\200\007\233I\200\246\361H@\314\016I\300\337\221I\200\\uI\200\360\tI`\013\267J\200\021CI@w\230I\000\003\273H\000\2149H\2005=I\300}\344H\200\253\010H\200\322\016I\200\247\252I\0006qI\000\350gI\000\001\345H\000\247\363H\000\343\351H\000\207\245H\2006(I\000PCH\300\207\363I\000\006\315H\000\016\316I\0006qI\000\202\021H\000i\252H\200\255)I@\325\262I\000G\206I\200C\303H\000\013\220H\200r\036I\200\353rI\000\301\305H\200\316bIx\226\230I\360{\022I`\241\036J@w\230I\000\033\267I\000+\336H\200\237\325I\200\352\nI\000\334\177I\000|\022I\000\037\340H`H\030J\300\263\302I\000\204dH\000\"\241H\000\260\263H\300\024\236I\200\226\230I0\034\364I\3000\303I\000\032\314H\000\032\314H\200zpI\200\333\375H\000\247sI\360_\214I\200\273\257H\000\317}H\200[\rI\200zpI\300^\332I\300\306\252I\000\272\333H\000\205\317H\000\0337I\200\360\tI\000[\326H\000\261\236H\200\342\347H\000\310/I\200\027tH\200{[I\000)\213H\340\342*I\200,\000I\300\'\006J\340\034\200J\2005=I\000<\360H\000\205\317H\300\r4J\000G\206I\200a\014I\200/>I\200\313VH\200\226\230I\000ICI\000\210\220G\200C\021I\000@\234I`\242\tJ\000\316\256H`}$J\300\252\036I\200\255)I\200jII\000E0J\300\035\333I\000W\255H\360\271[I\300g\276H\200\3721I\000\310/I\000\205OI\000\330VI\000\310\257H\0004PH\000\323\302H\200\000\261I\000w\373H\200\331\252H\000\272[I\000+^I\000_\202H\200\331\252H\000G\206I\200\302dI\200a\014J\200,\200I\000\263[I\000}\372H\000|\022H\000\024MH\200C\021I\000\205\317H\300eOJ\000\247\363H\000\\\375H\300\207\363I\300\035tI\000\035\215H\000\323\302H\000\330\326G\000\261\036I\200\021CI\000-4I\000\303\233H@T\211I\200FOI\000G\006I\000n>I\000|\222H\000[\326H\200\276;I\300\306*J\000G\206I\000BoH\300e\317I\300\035\333I\360\276\252J\200_6J`H\030J\000\346\252H\200,\200I\000\336UH\000eeH\200\336sI\200\007\315H\000\247\363H@\276!J\200\215\215H\300\r\264I0b\225J\200\313$I\000\330VI\000W-I\340\264\010I\000\377\221H\300\024\236I\000\356|H\200=\022I\200\027\364H\000\346\252I\300u\022I\000G\006I\000\323\302H\000rgI\340O\303H`\376\315J\000\345\241I\200\211/I\200\246?I\200\010\206I\000\024\315H\000\357\347H@K\027J\200{[I\200\003YI\200M\271H\200\226\030I\000\357\347I\360\363\266J\000\200;I\000G\006I`\2245K\000)\213H\200\010\006I\200j\373H@\200\325I\000\350gI\00092I\200}\343H\3000\303I\000g\324H\200\247*I\340\201OI0=\260J\000\005\221I\200\247*I\000\355\224H\000\265GI\300\\\222I\200\313$I\000\"\241H\200\345sI\2005=I`7\006J@\276\241I\200\305\245H\0002\310H\000\272\333H\200\353rI\200\276;I\200\037\001I\200\253\210H\200\255)I\000fiH\300\266\003I\000@\034I\200FOI\200a\276H\300\263\302I\000|\022I\300I\303H\200\316bI@Y\235I\000\326\003I\200\021CI\000A\207H\000\323\302H\000\375\273H\0009\262H`@CJ\200\021CI\300\263\333H\000\346\252H\000u(I\340\227*J\000\0337J\200\306\302H\340\3146J\000VBH\000q|I0%\026I\200\231VI`}$J@-\303I\000\220bI\000\346*H\200LNI\000o\251I\000\326\203H\000\366\321H\300\'\206I\300~\266I\000\372\004J\000\357\347H\340~\007I\000\377\221H\000\261\236H\300h\225H\300\240ZI\000\332\375H\000\013tH\000\370\247H\000G\006J\00022I\200\3721I\000=[I\000\261\236H\200\314\017I\000\357\347H\300I*I\000n>H\000\200;I\200\000\261I\000\243\312H\300\321\326H\200{[I\000Z\353H\360\345*I\200&\001I\200{\333H\360\204OI\200\313\244I\000$\364G\000\000zG\200{[I\200\001\034I\200\237UI\000VBH\000\033\267H`\347<J\000\037\340H\200\334\266I\000\357\347H\000\024MH\000\215$I\200FOI\000\017\271H\200\016\005I\200x\035I\200\273\257H\000\350\375H\000\314XI`2\275I\200k4I\000\261\036I\0009\262H\300\257\031I\200a\276H\000R\231H\200\237UJ@\222RJ\200:\006I\200\3346I\200F\317I@\276\241I\200\030-I\200\352\nI\200k\264H\340\r\005I\000$tH\000~\345H\300\330\247I\000\361\275H\200\027BI\0004\036I\000\243\312H\200\313\244I\200,\000J`H\230J\200\267QI\200j\311I\000\377\221H\000G\006I\000G\206I\200[\rI\340\362QI\200\020XI\000[\326H\200k4I\000\316.H\000u(H\200\0001I\000K\257H\300\232\333I\000\355\224H\200r\036I\200\255)I\000\0337I\300g>I\000\223#I\200,\000I\000X\230I`@\021I\000\342\376I@k\345H\200a\014I\200\0001I\300\230\010I\0002\310H\000\242_Hp\256\024I\000j\340G\200FOI\000\001\345H\000\343iI\200r\036I\000G\206I\000\347\225I\200{[I\000\365\346H\200{[I\300\'\006I\000$\364G\200\3346I\300^\001I\300~\266I\000)\213H\200\247*I\000\037\340H\000fiH\000\310\257H\000\272[J \263\201J\000-\264H\000)\213H\000;\210H\200\352\nI\000\214\271H\000e\201H\340{\222H\000\245\240H\300\223\215H\200\247*I\000+\336HP!\230J\000$\364H\200\226\230I\200]`I\000\355\224H\200\211\031I\000\252\264H\200L8I\200\tnI`uOJ\200\345\363H\300\337\221I\000\312\005I\300\026\361I\000\005\221H\200\247*I\340%\013I\000\0337H\000\321\354H\034\253,J\000\312\351H\200.SI\000BoH\000\016\234G\000x\346I\300\221\236I\200r\036I\000\323\302H\000G\206I\000\031HH\000PCJ\000W\255H\000p\337H\000\r\343H\000\330VH\000\214\271H\200=\222I\300\263\333H\200\305%I\000#\214I\300@\006I\000\221\315H\200\362\\I\200\313\244I\200\266fI\200a\214I\000\243\312H\340\240gJ\200r\036I\300\'\206I\340\001\200H\200\222lI\370\204\317I`\355\tI\200\3721I\300\337\221I`\2620J\200?eI\200\220\231I\000\272[H\200E\231H`\243\264H\200,\200I\200$]I`\345*I\300\205\271H\200\322\216I\200q\345H\000\177\320H\200\3346I\000\205OI\200\3721I\200<\'I\000\306\016I\200\021CI@w\230I\200T#I\000\227\314H\000i\252H\000\347\225I\000\220\342H\200\000\261I\000b\300H\300`TI\000\352SI\300I\303H\000\343\351H\300W\027I\000$tH\200\351\037I\200{[I\000w\373H\000\017\271H\000\235\313H\000\024\315H\000w{I\200\363GI\000\375\273H\300\330\300H\000\310\257H\200Z\324H\000\314XI\000u\250H\200\371\306H\200\020XI\000W-I\000\346\252I\200\000\343H\200.SI\200\253\210H\200M9I\2003\234H`\300\204J\200r\036I\200<\'I\340C\006I\200\353rI\000\0337I\370\260\236I\000G\006J\200\247*I\000\013tH\300\314\251I\300\004\020I\000\336\325H\200a\014I\000\317}H\300\252\036I\000\321\354H\200\021CI\300\350\316I\200\313\326H\000*sH\200\235\002I`F\006I\000-\210H\300\373\266I\200\021\303I\200\021CI\0004\036I\000\204NI\340a\001I\200(TI`\337\252H\340\251\264H\000\013\220I\200\211\257H\300\232\333I\000\343iI\000\261\236J\000\341\226H\000y8H\360\345*I\200{\333H\260\2139I\0009\262H\000~\345H\200\273/H\300\2434I\200\276;I\000yQI\300\341\344I\000\270\010I\200\264\023I\300\002\246H\200\353rI\000\017\271H \033\000J\000c\022H\000\303\233H\200\247*I\300\263\333H\200\246?I\0009\262H\000\243\312H\000@\234H\000\377\221H\000\310\257H\000\\\301G\200LNJ\000|\222I\300\330\247I\0202\220K\360\363\266J\000\357\347H\000\351hH\200\211/I\200\247*I\000\245\240H`\177\242H\000#>I\300\373\266I\000\301EI\000G\006I\000u\250H\200\227\003I\200\027BI\000y\321H\000\263\361I\000\227\314H\000_\202I\000\377\221H`\0137J\000\323\302H@\276!J\000\004&I\000\355\224H\000\310\257H\000\001eI\200\027BI\340O\303H\000\236\266H\3009\034I\000\"!I\000-\264H\300\350\316I\200\tnI\200\316bI\340\206\030J\300~\266I\200C\021I\340x\022I\200<\'I\200\004DI\000G\206I`\273mJ\000^\027I\000\004&I\200=\222I\360(\303J\200r\036I\300\337\221I\000\2149I\200jII\200\247\252H\200\237UI\000PCI\200FOI\200\3346I\000\234\340H\000\013\220H\200\331\252H\000\"\241H\000\263\330H\000\337\300H\300A\325J\000\247sI\000\272\333H\200{[I\300\232\333I\200\3721I\200\255)I\000\337\300H\000\252\264H\000\375\273I\000\272\333H\000\350\321H\300)\316I\360\276\252J\000G\006I\200k4I\000\263\361H\300\002\246H\0009\262H\340\0277J\300\2059I\200\021*I\000<\214I\200\tnI\200\027\364H\000\377\221H\300\337\221I\340\322\003I\200\217.I\000\261\036J\000ICI\000P\303I\000\305\356H\000\261\036I\0009\262H\200\227\003I\200\324aI\200\237\325I\300I\252I\340x\022I\200\342\347H\340\353gI\000\243JI\200t[I\200\003oI\200\247*I\200\255)I\200a\014I\000\330\326G\200a\276H\200J\255H\000\272\333H\000\272\333I\240\277\032I\000\rcI\200\327\"I@{\301I\000y\321H\200=\022I\000fiH\2005=I\200\247*I\000\375\273H@T\211I@\265\341I\300\263[I\200_6J\200C\303H\200r\036I\200&\001I\200\343 I\0002\310H\000\033\267H\340\3146J\300\r4J\200\247*I\300ICI\360\345\252I\200\201ZIp\031\267I\000\272\333H\200{[I\000fiH\200a\214I\200{[I\340-\022J\000c\022H\300\225\340H\000\335QH\000=\333H\000K\257H\000\252\036I\000\006yH\000rgI\000=[I\340\273$J\000\377\221H\200\304:I\240D\211I\000\377\021H\200\nCI\000\001\345H\000\017\271H\360C\375J\000\375;I\200\311\203H\000\250^H\000P\303I\200\021CI\300\330\'I\000G\206I\2005\357H\000\243\312H@\341\260I\000*\363H\340#\364H\000\326\003I\000=\333H\034\226\230J\000\0337I\340\201OI\000\247sI\000\352SI\2005=I\000-\264H\000\335QH\300\252\036I\000[\326H\200/>I\000\255\362I\300\341dJ\000&JI\000\330\326H\000k\375H\200\010\006I\000\2524H\200jII\000\350\375H\000G\006I\200\345\363I`\267\210H\000y\321H\200%\026I\000\n%H\000\263\361H\000\205\317H\000\020$J\200,\000I`\013\267J\000P\303I\200\226\230I\300\321VI\200\217\340H\200\360\tI\000\326\203H\000\366\371H\300~6J\000\221\315H\000\223\243H\200\201ZI\000|\022H\000\223\243H\340\227*J\200\240\300H\200FOI\000\263qI\000\346\334H\260\206%I\000g\324H\000\355\224H\300\'\213H\000\270\010G\000>FH\200CCI\200\237\325I\0003\263H\300^\001I\0002\310H\340\356\022I\000\276\207H\000\261\036J\340\034\000J\200\020XI\000\317\231IP\n\007K\340LCI\000\243JI`\2620J\200\177\271H\000\316.H\000\310\257H\000`\352G\000\361\275H\200\226\030Ip\270\333I\200\226\230I\200\000\261I\000G\006I`\001PI\340\306\205I\200{[I\300\\\222I\200C\021I\300\232\333I\300\205\271H\000^bH`gII\000\223\243H@T\211I\000=\333H\200\324aI\000\033\267I\200a\014I0\343\021I\200\000\261I\200\273\257H\000&JH\000!6I\000v8H\0006qI\000\346\252H\200,\000I\000@\234H\200C\303H\000#\214I\000:\235I\000\013\020H\000B\357H@w\230I\000\323\302H\200\345sI\300\223\rI\000|\222G\000o\251I\200\027BI\300E\201I\3004\354I\000\r\343H\300\252\205I\200\331\252H\2003\234H\340\342*I\200\3721I\000\213\316H\200\333\375H\200\0001I\000\205\317H\000\270\010I\300\252\236I\000$\364I\300\024\236I\000\265\307H@T\tK\000\024\315H\0006qI\000\366\321H\200\244\236H\200\353rI\200\345sI\000\263qH@\r\200I\200\000\261J\200a\014I\200<\'I\300~OI\300\263\302I\340\034\301H\000\377\221H\000\377\221H\200\260gI\200\001\034I@\r\200I@\3410J\000\2524H\2003\234H\300\211bI\200\003oI\000\356|H\000n\222H\000\355xH\200\322\016I\000~eH@~\202I\000\231\363H\000\265\307H\3000CI\000\247\363H\000\314\330G\200FOI\270\223\220K@]\306I\000\253\206H\000\205\317H\000\227\314H\000\026#I\200C\021I\000u\250H\000\321\354H\200zpI\240D\tJ\340k[J\200\227\003I \261\236H\340\206\030J\200j\373H@\350\232I\200\nYI\200{[I@\363\255I\200a\014I\200\220\031I\000\234\340H\340`\325H\3000\303I\000y\321H\000i\252H\200\336sI\200\247*I\000\2741I\000\242_H\200\300\252I\000\323\302H\0009\262H\340\003\246H\200\352\nI\000|\222H\200\367\245H`\310\244I\200=\222HpL\211J\200\021CI\000\366\321H\200\363GI\000lhH\000\303\233H\200\255)I\200\276;I\000\2228H\200\0001I@&\000I\000$\364H\200\027\364H\200\021CI\200\021CI\000\350\375H\000\301\305H\200\235\264H@\r\200I\300\221\236I\3000\303I`?\234H\000\326\203G\200\226\230I\200\313$I\000n(I\200a\276H\340#\364H`\234\325I\000\247\363H@\026\275I\300\'\206I\000\2228H\300\033\241H\200\311\203H\360#tI\200F9I\000\313TH\340\001CJ\000\004\246G\000^\227H\000w\373H\200,\200I\200\345sI\200q3I\200\242}I\000\344\324G\000\234\340G\000\024\315I\200\3425I\000y\321H\000\244\265I\200\210DI\000\366QI\200tqI\200\3346I\000\346*J\000!\266H\000,II\000~\345H\200\0001I\000\357\347H\300\221\236I@$\206I\200{[I\24006J\200\010\206I\200x\317H\000\311\232H\000w\373H\000\234`I\000\247sI\000\304\206G\000\270\010I\000\352SI\300\263\302I\200\007\033I\300\'\206I\200\027BI\200FOI\000\033\267H\000\220\342H\000a\325H\000\270\210H\000\205\317I\000\024\315H\000e\201H\200\260gI@\363\255I\200\027BI\000A\207H\200r\036I\000\330\326H\300\'\006J\300\337\221I\200\201ZI\200\313$I\000\321\354H\340|1I\200]`I`\365\220J\000\016\316I\2006(I\000\035\rI\340-\022J\2008\373H\000\200\273H\340C\006I\200=\022I\340\3146J\200\032\003J\200\215XI\000\337\300H\000BoH\200\314\017I@\307\336I\200,\000I@\222RI\000|\222I\360]\027I\300u\222H\200\021\303H\200\027BI\200C\021I@\3720I\200x\035I\000\346\252H\300\301/I\000?\261H\000\330VH\200\313\326H\340\313\031I\200Z\"I\300\026qJ\000\317\231H\000 KH\000@\221I\000\247sI\200\007\315H\000\330\326H@S\036I\000\017\271H\200\273\257H@T\tK\200=\022I\000\033\267H\200\226\030I\000\326\203H\000\346\252H@)%I\000\356|H\240@\335J\000TlI\200\322\016I\300\350\316I\340\217\325J\3000\303I\300~OI\200\247*I\000\234`H\200C\021I\000I\331H\200jII\240b\317I\300\267\010H\000\232\215H\2005=I\000PCI\200\0001J\300\004\364I\300\326VH\300\306\252I\300\357\321H\300\022HI`*\035J\200%\026I\200o\222H\300\337\252H\200\255)I\300\355\327I@\305\213I\000B\357H\200=\222H\360\236\203I@\266LI\000G\206I\000\375\273H\000_\202I\200,\000I\200tqI\300\243\233I\200,\200I\200\237UI\000\346\252H\0009\262H\340\001CJ\340\266[I\200\333\375H\200\0001I\000\357\347H\200_6J\200\345sI\3401\310H\000{\247H@B\214I\200\010\206I\200y\010I\200T#I\200)qH\000u\022I\000o\251I\200\313$I\300\254\330I\000\326\203H\000\303\033I\200\343 I`}$J@@6J\000n>H\300\373\266I\300\252\236I\300\263[I\300@\006I\300\221\036J@\341\260I\200\305\245H\000\317\031I\2003\234H\3001\310H\000^\027I\000\006\371H\000|\222I\200\021\303I\000\326\003I\200=\022I\300\207\363I\000\300ZI\340\000&I\300\2059I`\201\221H\200{[I\300\\\222I\000\201\277H\000~eH@\247\220I\000\346\252H\300\321VI\200\213\005J\000\320\204I\300\026qJ\300eOJ\000\335jJ\200]JI\000K\257H\340\036!I\200\306\302H\360\345*Ip\226\030I\200**J@\222\322I\000\346\252H\000=\333H\300\263\333H\200{[I\000\272\333H\340b\036J\340\0277I\200{\333I\000\205\317H\200jII\000e\201H\000\275\003H\300\0247I\300\330\247J`u\222H\200C\303H\300\341\344I\300\252\036I@\210\252I\300n\017J\370\030\000K\000PCJ\200\313$I\200r\036I\200\226\030J\000\261\036I\000\301EI\000-4I\200%\026I\000\234`H\360\345*I\000\245\240H\300\263\333H\000\323\302H\000u\250H\3000\303I\200\021CI\000\rMI\000\004\246I\300\306\252I\340\3146J\200[\277H0b\225J\000\216\017I@<qI\000\010OI\340\3146J\000\033\267H\000\2524H\0002HH\370\356\347I\300\024\236I\000\353%H\200\246?I\340\256;J\200\001\034I\300\350\316I\200\021CI\000\013tH\300~\266I@;\242I\340\351\024I@\370\266I\200\256\024I\200r\036I@Y\235I\200\376\217H\000\361\275H\300~\266I\000\366\321H\200\353rI\000\014\370H\200\255\333H\200\211\257H@\267\333H\200a\214I\200,\200I\300ICI\000\0337I\370#\364I\200M9I\000:\235I\200\0001I\000R\344G\3009\203I\000\2524H\000\034\242H\000\320\204I\340\217UJ@w\030J\300\263\333H\000\337\300I\200C\303H\200\325LI\000|\022I\000G\206I\000\242_H\340 tI\300\344\245I\200\360\273H@\214\243H\000W\255H\000\013\220I\340fTI\340\260\236H\000K\257H\270@\tK\340x\022I\000\270\210H\200\007\033I\000^\227H\000G\006I\000\"\241H\300n(I@\341\260I\3009\203I\300a\022H@]\306I\200\226\030I\3009\003J`7\006J\000\272[I\000^\027H\000\346\252I\000\206\272I\200zpI\000\224\216I\000`jH\3009\003J\200!\352H\200mqI\000\024\315H\000\0337I\340\217#I\200\237UJp\031\267I\300^\332I\200\222lI\000\350\375H\200a\014I\340\3146J\200\260gI\000k\375H\200=\022I\000\001\345H\200jII\000\247\363H\200\255)I\300\373\266I\300\252\205I\200x\235H\200y\010I\200j\311I@\316aI\200S8I\300w\314I\200j\311I\200\231VI\000\245 I\000\034\242I\000\323\302H\000GjH\000\303\233H\000\337\300H\200{\333I\340x\022I\300\261\010I@\216\251I\000g\324H\300\232\333I\300 !H\340\255\036I\000|\222H\200x\317H\000\035\215H\000\r\343H\000|\022J \263\201K\200\237UJ\000\336UH\000s9H`\252\251I\000\n%H\000\026#I\200\034\213H\300\252\036I\000\205\317H\200\3346I\000\2603H\240\326\304J\2005=I\300I\252I\200\305%I@\026\275I\000\035\215H\300B\300I\340y\257J\000\357\347H\340\3600J\000\247\363H\200\324\341I\200\247*I\000=\333H\370{\222I\000\336UI\300\026\361I\000W\255H\200\360\tI\300\243\233I\000\357gJ\000`\352G\000n>H\000`jH\000\346\252H\200\010\006I\200\313$I\000G\206I\200a\276H\200\003YI\200\226\230I\200=\022I\000k\375H\200\030-I\200\226\230I\200\003oI\300\337\221I\000|\022I\3009\203I\200\300\021I\200\0001I\200\255\333H\000\013tH\3009\034I\000\277VH\300\263\302I\000\330@I\0009\262H\000i*I\000DEI\000-\264H@Y\235I\200\356\263H\000e\201H\000o\251I`m\276H\200y\010I\300\004tI\200\322\216J\340\266[I\000\272\333H\000\323\302H\000\346*H\240\026\262I\000\252\264H\340\271\333H\300~\266I\000\003\273H\360F\006I\200<\'I@\363\255I\00092I\300\322\250I\000\nCI\000\243\312I\340\310\232H\200\037\027I\000\343\351H\000\356|H\300e\317I\3009\203I\200\226\030Ip:\214J\340b\036J\0006qI\000\375\273H\300\375%I\000~\345H\200\237\325I@\211\025J\200<\'I\000\225\366H\000ICI\200\177\271H\200\247\252I\300\'\206I\200.SI@\r\200I\200.SI\200=\222I\300\223\346I@F\203H\200\253\210H\000\203`H\360v\235I@\363-J\000\200;I\000\243\312H\200\177\007I\300a&I\200\\uI\200\333}H\000\0337I\200\220\031I\200\324aI\340\017\227J\3009\034I\000\326\203H\200(\324H\200\304:I\200E\344H\200T#I\000G\206H\200\304\272H\000\355\224H\200\313\326H`}$J \233\320I@6\216I\000\375;I\220\371\216J\000\017\271H\200\016\205I\0006qI\0008GH\200C\021I@\211\225I@\363\255I\000TlH\000\223#J\200m\nI\300\350\316I\200%\026I\200\316LI\200T\243I\000)\013I\000\035tI\200[\rI\300\004\364I\000\375\273H\000\346\252H\000\343\351H\200\016\005I\000~\345H\000g\324H\200\276;I\200\331*H\200r\036I\000\261\236H\200FOI\000\377\221H\000\006yH\200\276%I\300\'\206I\000\307+H\000\"\241H@\021\251I\000\272\333H\000\320\204I\000\370\'I\000i*I\000\232\215H\300 \234I\200V\311H\200\226\030I\340x\022I\200\3721I\340!\241H\000\033\267H\000\377\021I\000rgI\200r\036I@@OI\000\214\271H\300\035\364H@\265\341I\000~eH@\321\211I\000\257/H\200\021CI\360\260\036I\000\247\363H\200\360\273H\200\313$I\000)\013I\200\tnI\300\252\205I\300\263\302I\340\370\005J\200\273\257H\000\346*H\000$\364H\000b\300H\000\350gI`\241\036J\200x\235I\340\271\333H\200\331\252H\200x\035I`\234UJ\200\0001I\200r\036I\340\206\230I\300\261\010I\300\214#I\000\256\335H\000i*I\000c\022H\200\016\005I\200\247\252H\000\033\267I\200\235\002I\000\312\205H\000\361\275H \305{K\200\226\230I\000\367\274H\200\237UI\200{[I\200=\022I\200<\'I\200\021CI\200j\311I\000\247\363H@\001\202I\200\037\027I\000\377\221H`\300\204J`\r\315H\200\003YI\200Q\227H\000\243\312H\200\333KI\300\337\021I\300\252\205I\000G\206H\000\230\267H\000\006yH\000\024\315H\200\025\241H\000y8H@[\014I\200\tnI\200\003\357H\200y\210H\200\3346I\200tqI\200\251\375H\000u\250H\000\326\003I\360\235\325I\200VvI@\316\226H\000\310\257H\340\3146J\000VBH\200\010\006I\200\325LI\200\367%H\340\\jI\2005\275I\200\302\231H\000BoH\200]`I\300R\347I@\'OI\000e\201H\200\010\006I\000\035\215H\200\3346I\200\324\341I\000\"!I\300\330@I\300I\252I\300I\252I\000\2741H`\267\010I\340\206\230J\200\206nI\000\202\021H\000\361\221H0-\211J\340x\022I\340\0277I\0004\036I\000\243\312H\000\205OI\000\205OI\000^\214I\000G\206I\200\351\321H\200\2216I\200 \177I\200\313\244I\300\252\205I\000\375;I\200\227\003I\200\247*I\000t\213H\2003\234H\000\346\252H\340\3146J\000\033\267H\000\006cI\000\334\177I\300\024\267H\000\355\024I\200zpI\300\0247I\000\357\347H\200\276;I\200{[Ipo\230J\000PCH\200\334\266I\200\313\244I\000\247\363H\0009\262H\000F\033H\000\205OI@\r\200I\200k\264H\000\235\313H\300\366;I\200=\022I\000)\013I\000\366\321H\340\213\271H`\243?I\000%\337I\300\263\302I\300\330\'J\340x\022I\200\021CI`W\242I\340\217UJ@B\014J\000=BH\300\337\252H \274>K\000\357gI\300\221\236I\200FOI\300\r4J\000\330\326H\000\253QI\000n>H\200r\036I\300\"\364H\200C\221I\000F\233H\200\3721I \263\201J\200\353rI\3009\003J\300\257\231I\200=\022I\000`\352H\000\004\246H\200r\036I0t\222J\000\337\300H\300P\224I\000\326\203H\000\260\263H\000\270\010H\000\013tH\200,\000I\200,\375H\000*\363H\200\255)I\000\326\203H\300\337\252H\200\276;I\000\303\233H\000+^H\200\305%I\300\341\344I\2000\333H\000\0179I\000\"\241H\000\263[I\000\277VH\200FOI\200\0001I\000\035\215H\340\325sJ\200EdI\200\264\023I\000\326\003H\200,\375H@\350\232I\000o\251I\2006(I\000\343\351H~\226\230J\300\\\222I\300\330\'J\300~\266I\000\343\275H`\355\211I\300\341\375H\000\033\267H\000\361\275H\000VBH\000\341\226H\200\247*I\200\240@I\200\247*I\200\372\033I\200\3721I\000\333\027J\000\"!I\3002\031I\200{[I\000G\206I\000\263\361I@\r\200I\000\317\231H\200k4I\000B\357H\300\350gI\000e\201H\000\024MH\000G\206H\3408\262H\000s9H\000C\332H\340C\006I\200\311\203H\0002\310H\000\366QI\000\261\036I\000P\303H\200\016\005I\000\310\257H\340\201OI\2006(I\300n\217I\000\"!H\300\337\252H\200\313\244I`\234UI\000\\\225H\200\010\006I\200\020XI\000-4I@\305$I\200\253\210H@\312\037I\300\243\264H\000=[I\000P\303I\200\334\266I\000:\235I\200a\014I\200\0001I\000\205\317H\000~eH\000\330\326H\000G\206I\200\331\252H\000\"!H\000\346\252H\200=\022I\200\201ZI\300\263[I0\023\267J\200\3425I\000PCI\240t\201I\000\254\nH\300\004\220H`\023\014J\000~eH\000-\264H\200{[I\000u\022I\200\001\234H\200\016\005I\000\305\356H@K\311I\2005\275I`\307\257H\340#\364H\200\034\213H\000:\235I\360#tI\200=\022I0\034\364J\000|\222I\200,\000I\340\342*I\200[\215I\000\272\333H@\211\025J\000\312\005I\200\0001I\200FOI\000\272\333H\000\253QH\300;\357H\200a\014I\200\305%I\000\013\220H\000\324-H\000@\234H\200&\001I\200M9I\200\215\215H\000\261\036J\300B\300I\200o\222H\000\0337J\200\340\224H\000\232\361H\200C\303H\300\024\267H\200=\022I\000\n%H\300\035[I`H\030J\200\237UI\200{[I\000\037\340H\200=\022I\000\3020I\200\322\216I\3009\003J\000\361=I\200\255\251I\000@\234H\000W-I\200,\200I\000[\326H\000\033\267H\000\004\246H@\331LI\200\0001I\000\001\345H\200A;I\340\255\036I\200\222\354H@\363\255I\000\037`I\200M9I\200S\352H\000|\222I\340a\001I\0002HH`\034IJ\200\000\261I\300\033\241H\000\377\221H\000\2366I\200Q\227H\000VBH\000\314XH\000\323\302H\200,\000I\200r\036I\200\304:I\000}\341J\200%\026I\000\035\215H\200U\016J@F\265I\200\021CI\200\231VI\200\021CI\200\010\006I\200\001\034I\200\322\016I\000\326\203I\200\352\nI\200\235\264H\200\344\244H\340LCI\000\245\240H\000W\255H\0009\262H@\003UJ\000K/I\000P\252H`^\214I\300\306\252I@\037\372I\000)\213H\000[\326H\200\240@I\200FOI\200o\222H\200\255\333H\200\255)I\300I\303H\300\337*I\200\213\005J\000\320\204I\200r\036I\000\260\263H\000\037`I\000\247\363H\200\021CI\200\231@I\000\"\241H\000\234yG\340C\006I\000\330\326H\200\177\007I\300\330\247J\300\321\326H\000^\227H\340\370\005J\300\330\247I\000[\326H\000\320\204I\200X\201H\300\230\210I@\254\244I\200\314\017I\200\021CI\200a\014I\200\212\232I\200\226\030I\300\373\266I\200\360\tI\200\251}H\200&\001I\200\003YI\200,\262H\000G\206I\200a\214I\000^\027H\300\344\232I\000\252\264H\300^\345I\000\346\252I\000\024MH\200\353rI\000G\206I\000\361\275H\000^\227H\200\313VH\200^\344H\300\357QI\340%\013I\200a\276H\200!jI@\222\322I\000\356|H@\254\244I\200\260gI\000\016NH\200,\200I\300\373\266I@\211\025J\000\224\216I\000\323\302H\000\2228H\000\261\036I\000R\031I\000\247\363H\200\030-I\200\302\231H\000G\006I\2005\357H\000#>I\000\261\036I\000\337\300H\000b\300H\000W\255H\200\273\257H\200\226\030J _\217J\200k4I\340x\022I\340ZIJ\300\\\022J\340\227*J\000\266\375G\0004\236H\2003\034H\300\212\264I\000PCI@\211\225I\200\240@I\200\305%I\340\r\005I\000I\331I\200\021\303I\300^\001I\200C\303H`gII\300\306\257H\200\226\230I\000^\027I\000I\331H\200\235\002I\000\343\351H\000\323\302H@T\211J\200\345sI`2=I\340\001CJ\200(TI\200\021CI\000G\206I\200\226\030J\2005\275I\200=\222I\000\027rH\300\024\236I\000\272[H\200\nYIp\005\200J\000[\326H\200\324aI`m>I\200\226\230I\2005\275I\000\033\267H\200!\352H\200\3721I\000Y\203H\300\\\222I`\326*J\000-\264H\200\313\244I\340D#J\000\323BI\200\226\030I\000h\277I\300n\217I\340\027\267I\0007CH\30022I\340\3146J\200\345\363I@\247\220I\200\247*I\300\232\333I@\323*I\000\004\246I\000\326\003I\200\226\030I\200!jI\300>\227I\000)\213H\200\345sI\200\247*I\000B\357H\000\361\275H\000\341\226H\000+^I\340A\357H\200=\022I\000\202\221H\000\352SI\200x\317H\000Y\203H\000\024\315H\300~\266I\200:\206H\000`jH\200\217.I\000\017\271H\200\010\006I\200\336sI\340\0277I\000\377\221H\200\313$I\200\266fI\000i\252H\000C\332I\000\236\266H\000G\006I\300\004\220H\200\371FI\300\252\005J`\326*J\300\252\205I\000\024\315H\000&JH\300\317\203H\340\266QI\200\037\027I\340q(I\300\373\266I\200\313$I\000\353%H\000G\006J\200\027BI\000\227\314H\000\375\273H\000\"!I\000\337\300H\000\033\267H\200FOI\000\232\215H\000@\234H\360\242JI\200\324aI\200{[I\200\324aJ\300\024\236I\200K\343H\000\314XI\000\332,H\000\263\361H\000\377\221H\200x\035J\000\272[H\300w\314I\200=\022I\000\004\246H\000\253\237H\360\345*I\000*\363H\000\323BI\000\023IH\200a\014J`\023\014J\200{[I :*J\200\021CI\300T\275H\000`jI\300\2059I\300\252\205I\000\270\010I\000\326\203H\000PCH\000\357\347H\340x\022I\200\225\224H\000\272\333H\000\337*I\000@\234H\200{[I\000\272[H\300\t\200I j\332H\300\263[I\000\326\203H\000\326\003H\200o\222H\000\252\264H\000\346\252H\000\323BI\000G\006I\300\353\217I\000W\255H\200C\303H\000\006cI\000\261\236H@T\tJ\300\353\217I\000_\377H\300\t\013J\000\205\317H \350\rJ\000`jH\000\205\317H\200!jI\200\273\257H\000\317\231H\200r\236I@B\214I\000\310/I`I\303H"
      }
    }
  }
}
node {
  name: "linear/linear/bucketize"
  op: "Bucketize"
  input: "Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "boundaries"
    value {
      list {
        f: 0.0
        f: 200.0
        f: 400.0
        f: 600.0
        f: 800.0
        f: 1000.0
        f: 1200.0
        f: 1400.0
        f: 1600.0
        f: 1800.0
        f: 2000.0
        f: 2200.0
        f: 2400.0
        f: 2600.0
        f: 2800.0
        f: 3000.0
        f: 3200.0
        f: 3400.0
        f: 3600.0
        f: 3800.0
        f: 4000.0
        f: 4200.0
        f: 4400.0
        f: 4600.0
        f: 4800.0
        f: 5000.0
        f: 5200.0
        f: 5400.0
        f: 5600.0
        f: 5800.0
      }
    }
  }
}
node {
  name: "linear/linear/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2508
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/shape"
  input: "linear/linear/strided_slice/stack"
  input: "linear/linear/strided_slice/stack_1"
  input: "linear/linear/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/range"
  op: "Range"
  input: "linear/linear/range/start"
  input: "linear/linear/strided_slice"
  input: "linear/linear/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zeros/shape"
  op: "Pack"
  input: "linear/linear/strided_slice"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zeros"
  op: "Fill"
  input: "linear/linear/zeros/shape"
  input: "linear/linear/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/reshape"
  op: "Reshape"
  input: "linear/linear/bucketize"
  input: "linear/linear/reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/stack"
  op: "Pack"
  input: "linear/linear/range"
  input: "linear/linear/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/transpose/Rank"
  op: "Rank"
  input: "linear/linear/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/transpose/sub"
  op: "Sub"
  input: "linear/linear/transpose/Rank"
  input: "linear/linear/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose/Range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/transpose/Range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/transpose/Range"
  op: "Range"
  input: "linear/linear/transpose/Range/start"
  input: "linear/linear/transpose/Rank"
  input: "linear/linear/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose/sub_1"
  op: "Sub"
  input: "linear/linear/transpose/sub"
  input: "linear/linear/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose"
  op: "Transpose"
  input: "linear/linear/stack"
  input: "linear/linear/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/ToInt64"
  op: "Cast"
  input: "linear/linear/transpose"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/stack_1/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/stack_1"
  op: "Pack"
  input: "linear/linear/strided_slice"
  input: "linear/linear/stack_1/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/ToInt64_1"
  op: "Cast"
  input: "linear/linear/stack_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/lotsize_bucketized/weights/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/lotsize_bucketized/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/lotsize_bucketized/weights/part_0/Assign"
  op: "Assign"
  input: "linear/lotsize_bucketized/weights/part_0"
  input: "linear/lotsize_bucketized/weights/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/lotsize_bucketized/weights/part_0/read"
  op: "Identity"
  input: "linear/lotsize_bucketized/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice"
  op: "Slice"
  input: "linear/linear/ToInt64_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice/begin"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Prod"
  op: "Prod"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Gather"
  op: "Gather"
  input: "linear/linear/ToInt64_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseReshape/new_shape"
  op: "Pack"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Prod"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Gather"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseReshape"
  op: "SparseReshape"
  input: "linear/linear/ToInt64"
  input: "linear/linear/ToInt64_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseReshape/new_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear/reshape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseReshape/Identity"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Where"
  op: "Where"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape"
  op: "Reshape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Where"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Gather_1"
  op: "Gather"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseReshape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Gather_2"
  op: "Gather"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseReshape/Identity"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Identity"
  op: "Identity"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Identity"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice/stack"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Cast"
  op: "Cast"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/range"
  op: "Range"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/range/start"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Cast"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Cast_1"
  op: "Cast"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_1"
  op: "StridedSlice"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Gather_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/ListDiff"
  op: "ListDiff"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Cast_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_2"
  op: "StridedSlice"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Identity"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/strided_slice_2"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/SparseToDense"
  op: "SparseToDense"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/ExpandDims"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Reshape"
  op: "Reshape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Reshape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat"
  op: "ConcatV2"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Reshape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/zeros_like"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Shape"
  op: "Shape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/ListDiff"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Fill"
  op: "Fill"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Shape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat_1"
  op: "ConcatV2"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Gather_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat_2"
  op: "ConcatV2"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Gather_2"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Fill"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/SparseReorder"
  op: "SparseReorder"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/concat_2"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/Identity"
  op: "Identity"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/SparseReorder"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/strided_slice/stack"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/SparseReorder:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup"
  op: "Gather"
  input: "linear/lotsize_bucketized/weights/part_0/read"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse"
  op: "SparseSegmentSum"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_1"
  op: "Reshape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/SparseFillEmptyRows/SparseToDense"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Shape"
  op: "Shape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Shape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/strided_slice/stack"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/strided_slice/stack_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/stack"
  op: "Pack"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/stack/0"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Tile"
  op: "Tile"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/stack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights"
  op: "Select"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Tile"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/zeros_like"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Cast"
  op: "Cast"
  input: "linear/linear/ToInt64_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_1"
  op: "Slice"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Cast"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_1/begin"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Shape_1"
  op: "Shape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_2"
  op: "Slice"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Shape_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_2/begin"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/concat"
  op: "ConcatV2"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Slice_2"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_2"
  op: "Reshape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape"
  op: "Reshape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_2"
  input: "linear/linear/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/bucketize_1"
  op: "Bucketize"
  input: "Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "boundaries"
    value {
      list {
        f: 0.0
        f: 200.0
        f: 400.0
        f: 600.0
        f: 800.0
        f: 1000.0
        f: 1200.0
        f: 1400.0
        f: 1600.0
        f: 1800.0
        f: 2000.0
        f: 2200.0
        f: 2400.0
        f: 2600.0
        f: 2800.0
        f: 3000.0
        f: 3200.0
        f: 3400.0
        f: 3600.0
        f: 3800.0
        f: 4000.0
        f: 4200.0
        f: 4400.0
        f: 4600.0
        f: 4800.0
        f: 5000.0
        f: 5200.0
        f: 5400.0
        f: 5600.0
        f: 5800.0
      }
    }
  }
}
node {
  name: "linear/linear/shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2508
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/strided_slice_1"
  op: "StridedSlice"
  input: "linear/linear/shape_1"
  input: "linear/linear/strided_slice_1/stack"
  input: "linear/linear/strided_slice_1/stack_1"
  input: "linear/linear/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/range_1"
  op: "Range"
  input: "linear/linear/range_1/start"
  input: "linear/linear/strided_slice_1"
  input: "linear/linear/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zeros_1/shape"
  op: "Pack"
  input: "linear/linear/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/zeros_1"
  op: "Fill"
  input: "linear/linear/zeros_1/shape"
  input: "linear/linear/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/reshape_1"
  op: "Reshape"
  input: "linear/linear/bucketize_1"
  input: "linear/linear/reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/stack_2"
  op: "Pack"
  input: "linear/linear/range_1"
  input: "linear/linear/zeros_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/transpose_1/Rank"
  op: "Rank"
  input: "linear/linear/stack_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose_1/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/transpose_1/sub"
  op: "Sub"
  input: "linear/linear/transpose_1/Rank"
  input: "linear/linear/transpose_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose_1/Range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/transpose_1/Range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/transpose_1/Range"
  op: "Range"
  input: "linear/linear/transpose_1/Range/start"
  input: "linear/linear/transpose_1/Rank"
  input: "linear/linear/transpose_1/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose_1/sub_1"
  op: "Sub"
  input: "linear/linear/transpose_1/sub"
  input: "linear/linear/transpose_1/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/transpose_1"
  op: "Transpose"
  input: "linear/linear/stack_2"
  input: "linear/linear/transpose_1/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/ToInt64_2"
  op: "Cast"
  input: "linear/linear/transpose_1"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/stack_3/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/stack_3"
  op: "Pack"
  input: "linear/linear/strided_slice_1"
  input: "linear/linear/stack_3/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/ToInt64_3"
  op: "Cast"
  input: "linear/linear/stack_3"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/Assign"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0"
  input: "linear/size_bucketized/weights/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/size_bucketized/weights/part_0/read"
  op: "Identity"
  input: "linear/size_bucketized/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice"
  op: "Slice"
  input: "linear/linear/ToInt64_3"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice/begin"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Prod"
  op: "Prod"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Gather"
  op: "Gather"
  input: "linear/linear/ToInt64_3"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/new_shape"
  op: "Pack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Prod"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape"
  op: "SparseReshape"
  input: "linear/linear/ToInt64_2"
  input: "linear/linear/ToInt64_3"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/new_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear/reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Where"
  op: "Where"
  input: "linear/linear/size_bucketized/size_bucketized_weights/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Where"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Gather_1"
  op: "Gather"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Gather_2"
  op: "Gather"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  op: "Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/stack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Cast"
  op: "Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range"
  op: "Range"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range/start"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Cast_1"
  op: "Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ListDiff"
  op: "ListDiff"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Cast_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/strided_slice_2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense"
  op: "SparseToDense"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ExpandDims"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat"
  op: "ConcatV2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/zeros_like"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/ListDiff"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Fill"
  op: "Fill"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_1"
  op: "ConcatV2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_2"
  op: "ConcatV2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Gather_2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Fill"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseReorder"
  op: "SparseReorder"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/concat_2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/Identity"
  op: "Identity"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseReorder"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseReorder:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup"
  op: "Gather"
  input: "linear/size_bucketized/weights/part_0/read"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse"
  op: "SparseSegmentSum"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_1"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/SparseFillEmptyRows/SparseToDense"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/stack"
  op: "Pack"
  input: "linear/linear/size_bucketized/size_bucketized_weights/stack/0"
  input: "linear/linear/size_bucketized/size_bucketized_weights/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Tile"
  op: "Tile"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/stack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights"
  op: "Select"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Tile"
  input: "linear/linear/size_bucketized/size_bucketized_weights/zeros_like"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Cast"
  op: "Cast"
  input: "linear/linear/ToInt64_3"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1"
  op: "Slice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Cast"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/begin"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Shape_1"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2"
  op: "Slice"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Shape_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/begin"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/concat"
  op: "ConcatV2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Slice_2"
  input: "linear/linear/size_bucketized/size_bucketized_weights/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_2"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights"
  input: "linear/linear/size_bucketized/size_bucketized_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_1"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_2"
  input: "linear/linear/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/bathroom/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/bathroom/expand_dims"
  op: "ExpandDims"
  input: "Const_1"
  input: "linear/linear/bathroom/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/Assign"
  op: "Assign"
  input: "linear/bathroom/weight/part_0"
  input: "linear/bathroom/weight/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bathroom/weight/part_0/read"
  op: "Identity"
  input: "linear/bathroom/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bathroom/weight"
  op: "Identity"
  input: "linear/bathroom/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/bathroom/matmul"
  op: "MatMul"
  input: "linear/linear/bathroom/expand_dims"
  input: "linear/bathroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_2"
  op: "Reshape"
  input: "linear/linear/bathroom/matmul"
  input: "linear/linear/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/bedroom/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/bedroom/expand_dims"
  op: "ExpandDims"
  input: "Const"
  input: "linear/linear/bedroom/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/Assign"
  op: "Assign"
  input: "linear/bedroom/weight/part_0"
  input: "linear/bedroom/weight/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bedroom/weight/part_0/read"
  op: "Identity"
  input: "linear/bedroom/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bedroom/weight"
  op: "Identity"
  input: "linear/bedroom/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/bedroom/matmul"
  op: "MatMul"
  input: "linear/linear/bedroom/expand_dims"
  input: "linear/bedroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_3"
  op: "Reshape"
  input: "linear/linear/bedroom/matmul"
  input: "linear/linear/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/school_ratingE/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/school_ratingE/expand_dims"
  op: "ExpandDims"
  input: "Const_3"
  input: "linear/linear/school_ratingE/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/school_ratingE/weight/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/school_ratingE/weight/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/school_ratingE/weight/part_0/Assign"
  op: "Assign"
  input: "linear/school_ratingE/weight/part_0"
  input: "linear/school_ratingE/weight/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/school_ratingE/weight/part_0/read"
  op: "Identity"
  input: "linear/school_ratingE/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/school_ratingE/weight"
  op: "Identity"
  input: "linear/school_ratingE/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/school_ratingE/matmul"
  op: "MatMul"
  input: "linear/linear/school_ratingE/expand_dims"
  input: "linear/school_ratingE/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape_4/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_4"
  op: "Reshape"
  input: "linear/linear/school_ratingE/matmul"
  input: "linear/linear/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/school_ratingH/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/school_ratingH/expand_dims"
  op: "ExpandDims"
  input: "Const_4"
  input: "linear/linear/school_ratingH/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/school_ratingH/weight/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/school_ratingH/weight/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/school_ratingH/weight/part_0/Assign"
  op: "Assign"
  input: "linear/school_ratingH/weight/part_0"
  input: "linear/school_ratingH/weight/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/school_ratingH/weight/part_0/read"
  op: "Identity"
  input: "linear/school_ratingH/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/school_ratingH/weight"
  op: "Identity"
  input: "linear/school_ratingH/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/school_ratingH/matmul"
  op: "MatMul"
  input: "linear/linear/school_ratingH/expand_dims"
  input: "linear/school_ratingH/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape_5/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_5"
  op: "Reshape"
  input: "linear/linear/school_ratingH/matmul"
  input: "linear/linear/Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/school_ratingM/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/school_ratingM/expand_dims"
  op: "ExpandDims"
  input: "Const_5"
  input: "linear/linear/school_ratingM/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/school_ratingM/weight/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/school_ratingM/weight/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/school_ratingM/weight/part_0/Assign"
  op: "Assign"
  input: "linear/school_ratingM/weight/part_0"
  input: "linear/school_ratingM/weight/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/school_ratingM/weight/part_0/read"
  op: "Identity"
  input: "linear/school_ratingM/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/school_ratingM/weight"
  op: "Identity"
  input: "linear/school_ratingM/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/school_ratingM/matmul"
  op: "MatMul"
  input: "linear/linear/school_ratingM/expand_dims"
  input: "linear/school_ratingM/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape_6/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_6"
  op: "Reshape"
  input: "linear/linear/school_ratingM/matmul"
  input: "linear/linear/Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zestimate/expand_dims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/zestimate/expand_dims"
  op: "ExpandDims"
  input: "Const_6"
  input: "linear/linear/zestimate/expand_dims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/zestimate/weight/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/zestimate/weight/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/zestimate/weight/part_0/Assign"
  op: "Assign"
  input: "linear/zestimate/weight/part_0"
  input: "linear/zestimate/weight/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/zestimate/weight/part_0/read"
  op: "Identity"
  input: "linear/zestimate/weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/zestimate/weight"
  op: "Identity"
  input: "linear/zestimate/weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/zestimate/matmul"
  op: "MatMul"
  input: "linear/linear/zestimate/expand_dims"
  input: "linear/zestimate/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/Reshape_7/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_7"
  op: "Reshape"
  input: "linear/linear/zestimate/matmul"
  input: "linear/linear/Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lookup"
  op: "StringToHashBucketFast"
  input: "SparseTensor/values"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 10000
    }
  }
}
node {
  name: "linear/geohash/weights/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/geohash/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10000
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/geohash/weights/part_0/Assign"
  op: "Assign"
  input: "linear/geohash/weights/part_0"
  input: "linear/geohash/weights/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/geohash/weights/part_0/read"
  op: "Identity"
  input: "linear/geohash/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Slice"
  op: "Slice"
  input: "SparseTensor/dense_shape"
  input: "linear/linear/geohash/geohash_weights/Slice/begin"
  input: "linear/linear/geohash/geohash_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Prod"
  op: "Prod"
  input: "linear/linear/geohash/geohash_weights/Slice"
  input: "linear/linear/geohash/geohash_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Gather"
  op: "Gather"
  input: "SparseTensor/dense_shape"
  input: "linear/linear/geohash/geohash_weights/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseReshape/new_shape"
  op: "Pack"
  input: "linear/linear/geohash/geohash_weights/Prod"
  input: "linear/linear/geohash/geohash_weights/Gather"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseReshape"
  op: "SparseReshape"
  input: "SparseTensor/indices"
  input: "SparseTensor/dense_shape"
  input: "linear/linear/geohash/geohash_weights/SparseReshape/new_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear/lookup"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "linear/linear/geohash/geohash_weights/SparseReshape/Identity"
  input: "linear/linear/geohash/geohash_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Where"
  op: "Where"
  input: "linear/linear/geohash/geohash_weights/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Reshape"
  op: "Reshape"
  input: "linear/linear/geohash/geohash_weights/Where"
  input: "linear/linear/geohash/geohash_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Gather_1"
  op: "Gather"
  input: "linear/linear/geohash/geohash_weights/SparseReshape"
  input: "linear/linear/geohash/geohash_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Gather_2"
  op: "Gather"
  input: "linear/linear/geohash/geohash_weights/SparseReshape/Identity"
  input: "linear/linear/geohash/geohash_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Identity"
  op: "Identity"
  input: "linear/linear/geohash/geohash_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/geohash/geohash_weights/Identity"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice/stack"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice/stack_1"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Cast"
  op: "Cast"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/range"
  op: "Range"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/range/start"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Cast"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Cast_1"
  op: "Cast"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_1"
  op: "StridedSlice"
  input: "linear/linear/geohash/geohash_weights/Gather_1"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_1/stack"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/ListDiff"
  op: "ListDiff"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Cast_1"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_2"
  op: "StridedSlice"
  input: "linear/linear/geohash/geohash_weights/Identity"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_2/stack"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/strided_slice_2"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/SparseToDense"
  op: "SparseToDense"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/ExpandDims"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Reshape"
  op: "Reshape"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Reshape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat"
  op: "ConcatV2"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Reshape"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/zeros_like"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Shape"
  op: "Shape"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/ListDiff"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Fill"
  op: "Fill"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Shape"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat_1"
  op: "ConcatV2"
  input: "linear/linear/geohash/geohash_weights/Gather_1"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat_2"
  op: "ConcatV2"
  input: "linear/linear/geohash/geohash_weights/Gather_2"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Fill"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/SparseReorder"
  op: "SparseReorder"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat_1"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/concat_2"
  input: "linear/linear/geohash/geohash_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/Identity"
  op: "Identity"
  input: "linear/linear/geohash/geohash_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/SparseReorder"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/strided_slice/stack"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/strided_slice/stack_1"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/SparseReorder:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup"
  op: "Gather"
  input: "linear/geohash/weights/part_0/read"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse"
  op: "SparseSegmentSum"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Reshape_1"
  op: "Reshape"
  input: "linear/linear/geohash/geohash_weights/SparseFillEmptyRows/SparseToDense"
  input: "linear/linear/geohash/geohash_weights/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Shape"
  op: "Shape"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/geohash/geohash_weights/Shape"
  input: "linear/linear/geohash/geohash_weights/strided_slice/stack"
  input: "linear/linear/geohash/geohash_weights/strided_slice/stack_1"
  input: "linear/linear/geohash/geohash_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/stack"
  op: "Pack"
  input: "linear/linear/geohash/geohash_weights/stack/0"
  input: "linear/linear/geohash/geohash_weights/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Tile"
  op: "Tile"
  input: "linear/linear/geohash/geohash_weights/Reshape_1"
  input: "linear/linear/geohash/geohash_weights/stack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights"
  op: "Select"
  input: "linear/linear/geohash/geohash_weights/Tile"
  input: "linear/linear/geohash/geohash_weights/zeros_like"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Cast"
  op: "Cast"
  input: "SparseTensor/dense_shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Slice_1"
  op: "Slice"
  input: "linear/linear/geohash/geohash_weights/Cast"
  input: "linear/linear/geohash/geohash_weights/Slice_1/begin"
  input: "linear/linear/geohash/geohash_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Shape_1"
  op: "Shape"
  input: "linear/linear/geohash/geohash_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Slice_2"
  op: "Slice"
  input: "linear/linear/geohash/geohash_weights/Shape_1"
  input: "linear/linear/geohash/geohash_weights/Slice_2/begin"
  input: "linear/linear/geohash/geohash_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/concat"
  op: "ConcatV2"
  input: "linear/linear/geohash/geohash_weights/Slice_1"
  input: "linear/linear/geohash/geohash_weights/Slice_2"
  input: "linear/linear/geohash/geohash_weights/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/geohash/geohash_weights/Reshape_2"
  op: "Reshape"
  input: "linear/linear/geohash/geohash_weights"
  input: "linear/linear/geohash/geohash_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_8/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_8"
  op: "Reshape"
  input: "linear/linear/geohash/geohash_weights/Reshape_2"
  input: "linear/linear/Reshape_8/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/lookup_1"
  op: "StringToHashBucketFast"
  input: "SparseTensor_1/values"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "num_buckets"
    value {
      i: 10
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/property_type/weights/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/Assign"
  op: "Assign"
  input: "linear/property_type/weights/part_0"
  input: "linear/property_type/weights/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/property_type/weights/part_0/read"
  op: "Identity"
  input: "linear/property_type/weights/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice"
  op: "Slice"
  input: "SparseTensor_1/dense_shape"
  input: "linear/linear/property_type/property_type_weights/Slice/begin"
  input: "linear/linear/property_type/property_type_weights/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Prod"
  op: "Prod"
  input: "linear/linear/property_type/property_type_weights/Slice"
  input: "linear/linear/property_type/property_type_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Gather"
  op: "Gather"
  input: "SparseTensor_1/dense_shape"
  input: "linear/linear/property_type/property_type_weights/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseReshape/new_shape"
  op: "Pack"
  input: "linear/linear/property_type/property_type_weights/Prod"
  input: "linear/linear/property_type/property_type_weights/Gather"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseReshape"
  op: "SparseReshape"
  input: "SparseTensor_1/indices"
  input: "SparseTensor_1/dense_shape"
  input: "linear/linear/property_type/property_type_weights/SparseReshape/new_shape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseReshape/Identity"
  op: "Identity"
  input: "linear/linear/lookup_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/GreaterEqual"
  op: "GreaterEqual"
  input: "linear/linear/property_type/property_type_weights/SparseReshape/Identity"
  input: "linear/linear/property_type/property_type_weights/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Where"
  op: "Where"
  input: "linear/linear/property_type/property_type_weights/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/Where"
  input: "linear/linear/property_type/property_type_weights/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Gather_1"
  op: "Gather"
  input: "linear/linear/property_type/property_type_weights/SparseReshape"
  input: "linear/linear/property_type/property_type_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Gather_2"
  op: "Gather"
  input: "linear/linear/property_type/property_type_weights/SparseReshape/Identity"
  input: "linear/linear/property_type/property_type_weights/Reshape"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Identity"
  op: "Identity"
  input: "linear/linear/property_type/property_type_weights/SparseReshape:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/Identity"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/stack"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/stack_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Cast"
  op: "Cast"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range"
  op: "Range"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range/start"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Cast"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Cast_1"
  op: "Cast"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/range"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/Gather_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/stack"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/stack_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ListDiff"
  op: "ListDiff"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Cast_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/Identity"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/stack"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/stack_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ExpandDims"
  op: "ExpandDims"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/strided_slice_2"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense"
  op: "SparseToDense"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ExpandDims"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense/sparse_values"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ListDiff"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat"
  op: "ConcatV2"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Reshape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/zeros_like"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/ListDiff"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Fill"
  op: "Fill"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Shape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_1"
  op: "ConcatV2"
  input: "linear/linear/property_type/property_type_weights/Gather_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_2"
  op: "ConcatV2"
  input: "linear/linear/property_type/property_type_weights/Gather_2"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Fill"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseReorder"
  op: "SparseReorder"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_1"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/concat_2"
  input: "linear/linear/property_type/property_type_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/Identity"
  op: "Identity"
  input: "linear/linear/property_type/property_type_weights/Identity"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseReorder"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack_1"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Cast"
  op: "Cast"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/strided_slice"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique"
  op: "Unique"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseReorder:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup"
  op: "Gather"
  input: "linear/property_type/weights/part_0/read"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse"
  op: "SparseSegmentSum"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape_1"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/SparseFillEmptyRows/SparseToDense"
  input: "linear/linear/property_type/property_type_weights/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/strided_slice"
  op: "StridedSlice"
  input: "linear/linear/property_type/property_type_weights/Shape"
  input: "linear/linear/property_type/property_type_weights/strided_slice/stack"
  input: "linear/linear/property_type/property_type_weights/strided_slice/stack_1"
  input: "linear/linear/property_type/property_type_weights/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/stack"
  op: "Pack"
  input: "linear/linear/property_type/property_type_weights/stack/0"
  input: "linear/linear/property_type/property_type_weights/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Tile"
  op: "Tile"
  input: "linear/linear/property_type/property_type_weights/Reshape_1"
  input: "linear/linear/property_type/property_type_weights/stack"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights"
  op: "Select"
  input: "linear/linear/property_type/property_type_weights/Tile"
  input: "linear/linear/property_type/property_type_weights/zeros_like"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Cast"
  op: "Cast"
  input: "SparseTensor_1/dense_shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_1/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_1"
  op: "Slice"
  input: "linear/linear/property_type/property_type_weights/Cast"
  input: "linear/linear/property_type/property_type_weights/Slice_1/begin"
  input: "linear/linear/property_type/property_type_weights/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Shape_1"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Slice_2"
  op: "Slice"
  input: "linear/linear/property_type/property_type_weights/Shape_1"
  input: "linear/linear/property_type/property_type_weights/Slice_2/begin"
  input: "linear/linear/property_type/property_type_weights/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/concat"
  op: "ConcatV2"
  input: "linear/linear/property_type/property_type_weights/Slice_1"
  input: "linear/linear/property_type/property_type_weights/Slice_2"
  input: "linear/linear/property_type/property_type_weights/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/property_type/property_type_weights/Reshape_2"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights"
  input: "linear/linear/property_type/property_type_weights/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_9/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/linear/Reshape_9"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/Reshape_2"
  input: "linear/linear/Reshape_9/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/AddN"
  op: "AddN"
  input: "linear/linear/Reshape"
  input: "linear/linear/Reshape_1"
  input: "linear/linear/Reshape_2"
  input: "linear/linear/Reshape_3"
  input: "linear/linear/Reshape_4"
  input: "linear/linear/Reshape_5"
  input: "linear/linear/Reshape_6"
  input: "linear/linear/Reshape_7"
  input: "linear/linear/Reshape_8"
  input: "linear/linear/Reshape_9"
  attr {
    key: "N"
    value {
      i: 10
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/bias_weight/part_0"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/bias_weight/part_0/Assign"
  op: "Assign"
  input: "linear/bias_weight/part_0"
  input: "linear/bias_weight/part_0/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/bias_weight/part_0/read"
  op: "Identity"
  input: "linear/bias_weight/part_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/bias_weight"
  op: "Identity"
  input: "linear/bias_weight/part_0/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/linear/BiasAdd"
  op: "BiasAdd"
  input: "linear/linear/AddN"
  input: "linear/bias_weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "linear/regression_head/predictions/scores"
  op: "Squeeze"
  input: "linear/linear/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/predictions/Identity"
  op: "Identity"
  input: "linear/regression_head/predictions/scores"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/mean_squared_loss/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/mean_squared_loss/ExpandDims"
  op: "ExpandDims"
  input: "Const_8"
  input: "linear/regression_head/mean_squared_loss/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/mean_squared_loss/sub"
  op: "Sub"
  input: "linear/linear/BiasAdd"
  input: "linear/regression_head/mean_squared_loss/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/mean_squared_loss"
  op: "Square"
  input: "linear/regression_head/mean_squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/mean_squared_loss/loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/mean_squared_loss/loss"
  op: "Mean"
  input: "linear/regression_head/mean_squared_loss"
  input: "linear/regression_head/mean_squared_loss/loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/ScalarSummary/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "linear/regression_head/ScalarSummary"
  op: "ScalarSummary"
  input: "linear/regression_head/ScalarSummary/tags"
  input: "linear/regression_head/mean_squared_loss/loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/Shape"
  input: "linear/regression_head/strided_slice/stack"
  input: "linear/regression_head/strided_slice/stack_1"
  input: "linear/regression_head/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/Fill"
  op: "Fill"
  input: "linear/regression_head/train_op/gradients/Shape"
  input: "linear/regression_head/train_op/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/Fill"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Tile"
  op: "Tile"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Prod"
  op: "Prod"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Prod_1"
  op: "Prod"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Shape_1"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Maximum"
  op: "Maximum"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Prod_1"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/floordiv"
  op: "FloorDiv"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Prod"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Cast"
  op: "Cast"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/truediv"
  op: "RealDiv"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Tile"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/mul/x"
  op: "Const"
  input: "^linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/mul"
  op: "Mul"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/mul/x"
  input: "linear/regression_head/mean_squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/mul_1"
  op: "Mul"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/loss_grad/truediv"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Sum"
  op: "Sum"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/mul_1"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Sum"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss_grad/mul_1"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Neg"
  op: "Neg"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Neg"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_grad/Shape"
  op: "Shape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_1_grad/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_3_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_4_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_4_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_5_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_5_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_5_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_6_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_6_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_6_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_7_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\314\t\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_7_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_8_grad/Shape"
  op: "Shape"
  input: "linear/linear/geohash/geohash_weights/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_8_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_9_grad/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/Reshape_9_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/regression_head/mean_squared_loss/sub_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_2_grad/Shape"
  op: "Shape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_1_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/bathroom/matmul_grad/MatMul"
  op: "MatMul"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_2_grad/Reshape"
  input: "linear/bathroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/bathroom/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/bathroom/expand_dims"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/bedroom/matmul_grad/MatMul"
  op: "MatMul"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_3_grad/Reshape"
  input: "linear/bedroom/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/bedroom/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/bedroom/expand_dims"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_3_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/school_ratingE/matmul_grad/MatMul"
  op: "MatMul"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_4_grad/Reshape"
  input: "linear/school_ratingE/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/school_ratingE/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/school_ratingE/expand_dims"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/school_ratingH/matmul_grad/MatMul"
  op: "MatMul"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_5_grad/Reshape"
  input: "linear/school_ratingH/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/school_ratingH/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/school_ratingH/expand_dims"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_5_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/school_ratingM/matmul_grad/MatMul"
  op: "MatMul"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_6_grad/Reshape"
  input: "linear/school_ratingM/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/school_ratingM/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/school_ratingM/expand_dims"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_6_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zestimate/matmul_grad/MatMul"
  op: "MatMul"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_7_grad/Reshape"
  input: "linear/zestimate/weight"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/zestimate/matmul_grad/MatMul_1"
  op: "MatMul"
  input: "linear/linear/zestimate/expand_dims"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_7_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/Reshape_2_grad/Shape"
  op: "Shape"
  input: "linear/linear/geohash/geohash_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_8_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/Reshape_9_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights_grad/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights_grad/Select"
  op: "Select"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_2_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights_grad/Select_1"
  op: "Select"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights_grad/zeros_like"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/size_bucketized/size_bucketized_weights/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/Select"
  op: "Select"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/Select_1"
  op: "Select"
  input: "linear/linear/size_bucketized/size_bucketized_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/zeros_like"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights_grad/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/geohash/geohash_weights/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights_grad/Select"
  op: "Select"
  input: "linear/linear/geohash/geohash_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/Reshape_2_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights_grad/Select_1"
  op: "Select"
  input: "linear/linear/geohash/geohash_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights_grad/zeros_like"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights_grad/zeros_like"
  op: "ZerosLike"
  input: "linear/linear/property_type/property_type_weights/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights_grad/Select"
  op: "Select"
  input: "linear/linear/property_type/property_type_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights_grad/Select_1"
  op: "Select"
  input: "linear/linear/property_type/property_type_weights/Tile"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights_grad/zeros_like"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/Reshape_2_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2508
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/Gather"
  op: "Gather"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights_grad/Select_1"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/Gather"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/Gather"
  op: "Gather"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights_grad/Select_1"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/Gather"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/Gather"
  op: "Gather"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights_grad/Select_1"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/Gather"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/Shape"
  op: "Shape"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/Gather"
  op: "Gather"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights_grad/Select_1"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Cast"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/Gather"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique:1"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\037\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\037\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\'\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "linear/linear/geohash/geohash_weights/embedding_lookup_sparse/Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  op: "Size"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Size"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Shape"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_1"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/strided_slice"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse_grad/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "linear/linear/property_type/property_type_weights/embedding_lookup_sparse/Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta1_power/Assign"
  op: "Assign"
  input: "linear/regression_head/train_op/beta1_power"
  input: "linear/regression_head/train_op/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta1_power/read"
  op: "Identity"
  input: "linear/regression_head/train_op/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta2_power/Assign"
  op: "Assign"
  input: "linear/regression_head/train_op/beta2_power"
  input: "linear/regression_head/train_op/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/beta2_power/read"
  op: "Identity"
  input: "linear/regression_head/train_op/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 31
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/zestimate/weight/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/zestimate/weight/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/zestimate/weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/zestimate/weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/geohash/weights/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/geohash/weights/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10000
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/geohash/weights/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/geohash/weights/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/geohash/weights/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/geohash/weights/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10000
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/geohash/weights/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam_1"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/geohash/weights/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/property_type/weights/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam/read"
  op: "Identity"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam_1/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam_1/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/linear/bias_weight/part_0/Adam_1/read"
  op: "Identity"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 500
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Unique"
  op: "Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Shape"
  op: "Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/strided_slice/stack"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/strided_slice/stack_1"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/lotsize_bucketized/lotsize_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Unique:1"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub/x"
  input: "linear/regression_head/train_op/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Sqrt"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_1"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_1/x"
  input: "linear/regression_head/train_op/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/truediv"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_2"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_2/x"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_1"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_2"
  op: "Mul"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam/read"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/ScatterAdd"
  op: "ScatterAdd"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Assign"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_3"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_3"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_3/x"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_4"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_3"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_5"
  op: "Mul"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1/read"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Assign_1"
  op: "Assign"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/ScatterAdd_1"
  op: "ScatterAdd"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Assign_1"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Sqrt_1"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_6"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/truediv"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/add"
  op: "Add"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/Sqrt_1"
  input: "linear/regression_head/train_op/Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/truediv_1"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/mul_6"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/AssignSub"
  op: "AssignSub"
  input: "linear/lotsize_bucketized/weights/part_0"
  input: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/group_deps"
  op: "NoOp"
  input: "^linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/AssignSub"
  input: "^linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/ScatterAdd"
  input: "^linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Unique"
  op: "Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Shape"
  op: "Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice/stack"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice/stack_1"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/size_bucketized/size_bucketized_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Unique:1"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub/x"
  input: "linear/regression_head/train_op/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Sqrt"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_1"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_1/x"
  input: "linear/regression_head/train_op/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/truediv"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_2"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_2/x"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_1"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_2"
  op: "Mul"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam/read"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd"
  op: "ScatterAdd"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Assign"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_3"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_3"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_3/x"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_4"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_3"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_5"
  op: "Mul"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/read"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Assign_1"
  op: "Assign"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd_1"
  op: "ScatterAdd"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Assign_1"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Sqrt_1"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_6"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/truediv"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/add"
  op: "Add"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/Sqrt_1"
  input: "linear/regression_head/train_op/Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/truediv_1"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/mul_6"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/AssignSub"
  op: "AssignSub"
  input: "linear/size_bucketized/weights/part_0"
  input: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  op: "NoOp"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/AssignSub"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/bathroom/weight/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/bathroom/weight/part_0"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/update_linear/bathroom/weight/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "linear/regression_head/train_op/Adam/epsilon"
  input: "linear/regression_head/train_op/gradients/linear/linear/bathroom/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/bedroom/weight/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/bedroom/weight/part_0"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/update_linear/bedroom/weight/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "linear/regression_head/train_op/Adam/epsilon"
  input: "linear/regression_head/train_op/gradients/linear/linear/bedroom/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/school_ratingE/weight/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/school_ratingE/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/school_ratingE/weight/part_0"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/update_linear/school_ratingE/weight/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "linear/regression_head/train_op/Adam/epsilon"
  input: "linear/regression_head/train_op/gradients/linear/linear/school_ratingE/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/school_ratingH/weight/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/school_ratingH/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/school_ratingH/weight/part_0"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/update_linear/school_ratingH/weight/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "linear/regression_head/train_op/Adam/epsilon"
  input: "linear/regression_head/train_op/gradients/linear/linear/school_ratingH/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/school_ratingM/weight/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/school_ratingM/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/school_ratingM/weight/part_0"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/update_linear/school_ratingM/weight/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "linear/regression_head/train_op/Adam/epsilon"
  input: "linear/regression_head/train_op/gradients/linear/linear/school_ratingM/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zestimate/weight/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/zestimate/weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/zestimate/weight/part_0"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/update_linear/zestimate/weight/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "linear/regression_head/train_op/Adam/epsilon"
  input: "linear/regression_head/train_op/gradients/linear/linear/zestimate/matmul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Unique"
  op: "Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Shape"
  op: "Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/strided_slice/stack"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/strided_slice/stack_1"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/geohash/geohash_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Unique:1"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub/x"
  input: "linear/regression_head/train_op/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Sqrt"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_1"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_1/x"
  input: "linear/regression_head/train_op/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/truediv"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_2"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_2/x"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_1"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_2"
  op: "Mul"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam/read"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/ScatterAdd"
  op: "ScatterAdd"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Assign"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_3"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_3"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_3/x"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_4"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_3"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_5"
  op: "Mul"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam_1/read"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Assign_1"
  op: "Assign"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam_1"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/ScatterAdd_1"
  op: "ScatterAdd"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Assign_1"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Sqrt_1"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_6"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/truediv"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/add"
  op: "Add"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/Sqrt_1"
  input: "linear/regression_head/train_op/Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/truediv_1"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/mul_6"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/AssignSub"
  op: "AssignSub"
  input: "linear/geohash/weights/part_0"
  input: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/group_deps"
  op: "NoOp"
  input: "^linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/AssignSub"
  input: "^linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/ScatterAdd"
  input: "^linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Unique"
  op: "Unique"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Shape"
  op: "Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice"
  op: "StridedSlice"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Shape"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice/stack"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice/stack_1"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "linear/regression_head/train_op/gradients/linear/linear/property_type/property_type_weights/embedding_lookup_sparse/embedding_lookup_grad/Reshape"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Unique:1"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub/x"
  input: "linear/regression_head/train_op/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Sqrt"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_1"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_1/x"
  input: "linear/regression_head/train_op/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/truediv"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_2"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_2/x"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_1"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_2"
  op: "Mul"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam/read"
  input: "linear/regression_head/train_op/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Assign"
  op: "Assign"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/ScatterAdd"
  op: "ScatterAdd"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Assign"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_3"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/UnsortedSegmentSum"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_3"
  op: "Sub"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_3/x"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_4"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_3"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_5"
  op: "Mul"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1/read"
  input: "linear/regression_head/train_op/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Assign_1"
  op: "Assign"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/ScatterAdd_1"
  op: "ScatterAdd"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Assign_1"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Unique"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Sqrt_1"
  op: "Sqrt"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_6"
  op: "Mul"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/truediv"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/add"
  op: "Add"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/Sqrt_1"
  input: "linear/regression_head/train_op/Adam/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/truediv_1"
  op: "RealDiv"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/mul_6"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/AssignSub"
  op: "AssignSub"
  input: "linear/property_type/weights/part_0"
  input: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/group_deps"
  op: "NoOp"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/AssignSub"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/ScatterAdd"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/bias_weight/part_0/Cast_2"
  op: "Cast"
  input: "linear/regression_head/train_op/Adam/learning_rate"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update_linear/bias_weight/part_0/ApplyAdam"
  op: "ApplyAdam"
  input: "linear/bias_weight/part_0"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/update_linear/bias_weight/part_0/Cast_2"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "linear/regression_head/train_op/Adam/epsilon"
  input: "linear/regression_head/train_op/gradients/linear/linear/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/mul"
  op: "Mul"
  input: "linear/regression_head/train_op/beta1_power/read"
  input: "linear/regression_head/train_op/Adam/beta1"
  input: "^linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/school_ratingE/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/school_ratingH/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/school_ratingM/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/zestimate/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/bias_weight/part_0/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/Assign"
  op: "Assign"
  input: "linear/regression_head/train_op/beta1_power"
  input: "linear/regression_head/train_op/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/mul_1"
  op: "Mul"
  input: "linear/regression_head/train_op/beta2_power/read"
  input: "linear/regression_head/train_op/Adam/beta2"
  input: "^linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/school_ratingE/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/school_ratingH/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/school_ratingM/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/zestimate/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/bias_weight/part_0/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/Assign_1"
  op: "Assign"
  input: "linear/regression_head/train_op/beta2_power"
  input: "linear/regression_head/train_op/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam/update"
  op: "NoOp"
  input: "^linear/regression_head/train_op/Adam/update_linear/lotsize_bucketized/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/size_bucketized/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/bathroom/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/bedroom/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/school_ratingE/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/school_ratingH/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/school_ratingM/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/zestimate/weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/update_linear/geohash/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/property_type/weights/part_0/group_deps"
  input: "^linear/regression_head/train_op/Adam/update_linear/bias_weight/part_0/ApplyAdam"
  input: "^linear/regression_head/train_op/Adam/Assign"
  input: "^linear/regression_head/train_op/Adam/Assign_1"
}
node {
  name: "linear/regression_head/train_op/Adam/value"
  op: "Const"
  input: "^linear/regression_head/train_op/Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/train_op/Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "linear/regression_head/train_op/Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/total"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/total/Assign"
  op: "Assign"
  input: "linear/regression_head/metrics/mean/total"
  input: "linear/regression_head/metrics/mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/total/read"
  op: "Identity"
  input: "linear/regression_head/metrics/mean/total"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/count"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/count/Assign"
  op: "Assign"
  input: "linear/regression_head/metrics/mean/count"
  input: "linear/regression_head/metrics/mean/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/count/read"
  op: "Identity"
  input: "linear/regression_head/metrics/mean/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/ToFloat_1"
  op: "Cast"
  input: "linear/regression_head/metrics/mean/Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/Sum"
  op: "Sum"
  input: "linear/regression_head/mean_squared_loss/loss"
  input: "linear/regression_head/metrics/mean/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/AssignAdd"
  op: "AssignAdd"
  input: "linear/regression_head/metrics/mean/total"
  input: "linear/regression_head/metrics/mean/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/AssignAdd_1"
  op: "AssignAdd"
  input: "linear/regression_head/metrics/mean/count"
  input: "linear/regression_head/metrics/mean/ToFloat_1"
  input: "^linear/regression_head/mean_squared_loss/loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/Greater"
  op: "Greater"
  input: "linear/regression_head/metrics/mean/count/read"
  input: "linear/regression_head/metrics/mean/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/truediv"
  op: "RealDiv"
  input: "linear/regression_head/metrics/mean/total/read"
  input: "linear/regression_head/metrics/mean/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/value/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/value"
  op: "Select"
  input: "linear/regression_head/metrics/mean/Greater"
  input: "linear/regression_head/metrics/mean/truediv"
  input: "linear/regression_head/metrics/mean/value/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/Greater_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/Greater_1"
  op: "Greater"
  input: "linear/regression_head/metrics/mean/AssignAdd_1"
  input: "linear/regression_head/metrics/mean/Greater_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/truediv_1"
  op: "RealDiv"
  input: "linear/regression_head/metrics/mean/AssignAdd"
  input: "linear/regression_head/metrics/mean/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/update_op/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear/regression_head/metrics/mean/update_op"
  op: "Select"
  input: "linear/regression_head/metrics/mean/Greater_1"
  input: "linear/regression_head/metrics/mean/truediv_1"
  input: "linear/regression_head/metrics/mean/update_op/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^linear/lotsize_bucketized/weights/part_0/Assign"
  input: "^linear/size_bucketized/weights/part_0/Assign"
  input: "^linear/bathroom/weight/part_0/Assign"
  input: "^linear/bedroom/weight/part_0/Assign"
  input: "^linear/school_ratingE/weight/part_0/Assign"
  input: "^linear/school_ratingH/weight/part_0/Assign"
  input: "^linear/school_ratingM/weight/part_0/Assign"
  input: "^linear/zestimate/weight/part_0/Assign"
  input: "^linear/geohash/weights/part_0/Assign"
  input: "^linear/property_type/weights/part_0/Assign"
  input: "^linear/bias_weight/part_0/Assign"
  input: "^linear/regression_head/train_op/beta1_power/Assign"
  input: "^linear/regression_head/train_op/beta2_power/Assign"
  input: "^linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/size_bucketized/weights/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/bathroom/weight/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/bathroom/weight/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/bedroom/weight/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/bedroom/weight/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/school_ratingE/weight/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/school_ratingH/weight/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/school_ratingM/weight/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/zestimate/weight/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/zestimate/weight/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/geohash/weights/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/geohash/weights/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/property_type/weights/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/property_type/weights/part_0/Adam_1/Assign"
  input: "^linear/regression_head/linear/bias_weight/part_0/Adam/Assign"
  input: "^linear/regression_head/linear/bias_weight/part_0/Adam_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "linear/lotsize_bucketized/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "linear/size_bucketized/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "linear/bathroom/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "linear/bedroom/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "linear/school_ratingE/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "linear/school_ratingH/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "linear/school_ratingM/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "linear/zestimate/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "linear/geohash/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "linear/property_type/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "linear/regression_head/train_op/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "linear/regression_head/train_op/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "linear/regression_head/metrics/mean/total"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/total"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "linear/regression_head/metrics/mean/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/regression_head/metrics/mean/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  attr {
    key: "N"
    value {
      i: 38
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 38
          }
        }
        string_val: "global_step"
        string_val: "linear/lotsize_bucketized/weights/part_0"
        string_val: "linear/size_bucketized/weights/part_0"
        string_val: "linear/bathroom/weight/part_0"
        string_val: "linear/bedroom/weight/part_0"
        string_val: "linear/school_ratingE/weight/part_0"
        string_val: "linear/school_ratingH/weight/part_0"
        string_val: "linear/school_ratingM/weight/part_0"
        string_val: "linear/zestimate/weight/part_0"
        string_val: "linear/geohash/weights/part_0"
        string_val: "linear/property_type/weights/part_0"
        string_val: "linear/bias_weight/part_0"
        string_val: "linear/regression_head/train_op/beta1_power"
        string_val: "linear/regression_head/train_op/beta2_power"
        string_val: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/zestimate/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/geohash/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/geohash/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/property_type/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/bias_weight/part_0/Adam"
        string_val: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
        string_val: "linear/regression_head/metrics/mean/total"
        string_val: "linear/regression_head/metrics/mean/count"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 38
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 38
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 38
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/Gather"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "linear/lotsize_bucketized/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "linear/size_bucketized/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "linear/bathroom/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "linear/bedroom/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "linear/school_ratingE/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "linear/school_ratingH/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "linear/school_ratingM/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "linear/zestimate/weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "linear/geohash/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "linear/property_type/weights/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "linear/bias_weight/part_0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "linear/regression_head/train_op/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "linear/regression_head/train_op/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_24"
  input: "report_uninitialized_variables_1/IsVariableInitialized_25"
  input: "report_uninitialized_variables_1/IsVariableInitialized_26"
  input: "report_uninitialized_variables_1/IsVariableInitialized_27"
  input: "report_uninitialized_variables_1/IsVariableInitialized_28"
  input: "report_uninitialized_variables_1/IsVariableInitialized_29"
  input: "report_uninitialized_variables_1/IsVariableInitialized_30"
  input: "report_uninitialized_variables_1/IsVariableInitialized_31"
  input: "report_uninitialized_variables_1/IsVariableInitialized_32"
  input: "report_uninitialized_variables_1/IsVariableInitialized_33"
  input: "report_uninitialized_variables_1/IsVariableInitialized_34"
  input: "report_uninitialized_variables_1/IsVariableInitialized_35"
  attr {
    key: "N"
    value {
      i: 36
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 36
          }
        }
        string_val: "global_step"
        string_val: "linear/lotsize_bucketized/weights/part_0"
        string_val: "linear/size_bucketized/weights/part_0"
        string_val: "linear/bathroom/weight/part_0"
        string_val: "linear/bedroom/weight/part_0"
        string_val: "linear/school_ratingE/weight/part_0"
        string_val: "linear/school_ratingH/weight/part_0"
        string_val: "linear/school_ratingM/weight/part_0"
        string_val: "linear/zestimate/weight/part_0"
        string_val: "linear/geohash/weights/part_0"
        string_val: "linear/property_type/weights/part_0"
        string_val: "linear/bias_weight/part_0"
        string_val: "linear/regression_head/train_op/beta1_power"
        string_val: "linear/regression_head/train_op/beta2_power"
        string_val: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/zestimate/weight/part_0/Adam"
        string_val: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1"
        string_val: "linear/regression_head/linear/geohash/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/geohash/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/property_type/weights/part_0/Adam"
        string_val: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
        string_val: "linear/regression_head/linear/bias_weight/part_0/Adam"
        string_val: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 36
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 36
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^linear/regression_head/metrics/mean/total/Assign"
  input: "^linear/regression_head/metrics/mean/count/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "linear/regression_head/ScalarSummary"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_e1cb465f5efc458c8eed044ffc2ae99d/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 36
          }
        }
        string_val: "global_step"
        string_val: "linear/bathroom/weight"
        string_val: "linear/bathroom/weight/bathroom/weight/part_0/Adam"
        string_val: "linear/bathroom/weight/bathroom/weight/part_0/Adam_1"
        string_val: "linear/bedroom/weight"
        string_val: "linear/bedroom/weight//bedroom/weight/part_0/Adam"
        string_val: "linear/bedroom/weight//bedroom/weight/part_0/Adam_1"
        string_val: "linear/bias_weight"
        string_val: "linear/bias_weight/ear/bias_weight/part_0/Adam"
        string_val: "linear/bias_weight/ear/bias_weight/part_0/Adam_1"
        string_val: "linear/geohash/weights"
        string_val: "linear/geohash/weights/geohash/weights/part_0/Adam"
        string_val: "linear/geohash/weights/geohash/weights/part_0/Adam_1"
        string_val: "linear/lotsize_bucketized/weights"
        string_val: "linear/lotsize_bucketized/weights/ketized/weights/part_0/Adam"
        string_val: "linear/lotsize_bucketized/weights/ketized/weights/part_0/Adam_1"
        string_val: "linear/property_type/weights"
        string_val: "linear/property_type/weights/ty_type/weights/part_0/Adam"
        string_val: "linear/property_type/weights/ty_type/weights/part_0/Adam_1"
        string_val: "linear/regression_head/train_op/beta1_power"
        string_val: "linear/regression_head/train_op/beta2_power"
        string_val: "linear/school_ratingE/weight"
        string_val: "linear/school_ratingE/weight/_ratingE/weight/part_0/Adam"
        string_val: "linear/school_ratingE/weight/_ratingE/weight/part_0/Adam_1"
        string_val: "linear/school_ratingH/weight"
        string_val: "linear/school_ratingH/weight/_ratingH/weight/part_0/Adam"
        string_val: "linear/school_ratingH/weight/_ratingH/weight/part_0/Adam_1"
        string_val: "linear/school_ratingM/weight"
        string_val: "linear/school_ratingM/weight/_ratingM/weight/part_0/Adam"
        string_val: "linear/school_ratingM/weight/_ratingM/weight/part_0/Adam_1"
        string_val: "linear/size_bucketized/weights"
        string_val: "linear/size_bucketized/weights/ketized/weights/part_0/Adam"
        string_val: "linear/size_bucketized/weights/ketized/weights/part_0/Adam_1"
        string_val: "linear/zestimate/weight"
        string_val: "linear/zestimate/weight/estimate/weight/part_0/Adam"
        string_val: "linear/zestimate/weight/estimate/weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 36
          }
        }
        string_val: ""
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "1 0,1"
        string_val: "10000 1 0,10000:0,1"
        string_val: "10000 1 0,10000:0,1"
        string_val: "10000 1 0,10000:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "10 1 0,10:0,1"
        string_val: "10 1 0,10:0,1"
        string_val: "10 1 0,10:0,1"
        string_val: ""
        string_val: ""
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "31 1 0,31:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "global_step"
  input: "linear/bathroom/weight/part_0/read"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam/read"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1/read"
  input: "linear/bedroom/weight/part_0/read"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam/read"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1/read"
  input: "linear/bias_weight/part_0/read"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam/read"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1/read"
  input: "linear/geohash/weights/part_0/read"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam/read"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam_1/read"
  input: "linear/lotsize_bucketized/weights/part_0/read"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam/read"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1/read"
  input: "linear/property_type/weights/part_0/read"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam/read"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1/read"
  input: "linear/regression_head/train_op/beta1_power"
  input: "linear/regression_head/train_op/beta2_power"
  input: "linear/school_ratingE/weight/part_0/read"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam/read"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1/read"
  input: "linear/school_ratingH/weight/part_0/read"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam/read"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1/read"
  input: "linear/school_ratingM/weight/part_0/read"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam/read"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1/read"
  input: "linear/size_bucketized/weights/part_0/read"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam/read"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1/read"
  input: "linear/zestimate/weight/part_0/read"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam/read"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1/read"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/control_dependency"
  input: "^save/MergeV2Checkpoints"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bathroom/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "linear/bathroom/weight/part_0"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bathroom/weight/bathroom/weight/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bathroom/weight/bathroom/weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "linear/regression_head/linear/bathroom/weight/part_0/Adam_1"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bathroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bedroom/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "linear/bedroom/weight/part_0"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bedroom/weight//bedroom/weight/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bedroom/weight//bedroom/weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "linear/regression_head/linear/bedroom/weight/part_0/Adam_1"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bedroom/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bias_weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "linear/bias_weight/part_0"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bias_weight/ear/bias_weight/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/bias_weight/ear/bias_weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "linear/regression_head/linear/bias_weight/part_0/Adam_1"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/bias_weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/geohash/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10000 1 0,10000:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "linear/geohash/weights/part_0"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/geohash/weights/geohash/weights/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10000 1 0,10000:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/geohash/weights/geohash/weights/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10000 1 0,10000:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "linear/regression_head/linear/geohash/weights/part_0/Adam_1"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/geohash/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/lotsize_bucketized/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "31 1 0,31:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "linear/lotsize_bucketized/weights/part_0"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/lotsize_bucketized/weights/ketized/weights/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "31 1 0,31:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/lotsize_bucketized/weights/ketized/weights/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "31 1 0,31:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "linear/regression_head/linear/lotsize_bucketized/weights/part_0/Adam_1"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/property_type/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10 1 0,10:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear/property_type/weights/part_0"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/property_type/weights/ty_type/weights/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10 1 0,10:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/property_type/weights/ty_type/weights/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "10 1 0,10:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear/regression_head/linear/property_type/weights/part_0/Adam_1"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/property_type/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/regression_head/train_op/beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear/regression_head/train_op/beta1_power"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/regression_head/train_op/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear/regression_head/train_op/beta2_power"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/lotsize_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_ratingE/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear/school_ratingE/weight/part_0"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_ratingE/weight/_ratingE/weight/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_ratingE/weight/_ratingE/weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingE/weight/part_0/Adam_1"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingE/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_ratingH/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "linear/school_ratingH/weight/part_0"
  input: "save/RestoreV2_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_ratingH/weight/_ratingH/weight/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam"
  input: "save/RestoreV2_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_ratingH/weight/_ratingH/weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingH/weight/part_0/Adam_1"
  input: "save/RestoreV2_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingH/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_ratingM/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "linear/school_ratingM/weight/part_0"
  input: "save/RestoreV2_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_ratingM/weight/_ratingM/weight/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam"
  input: "save/RestoreV2_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/school_ratingM/weight/_ratingM/weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "linear/regression_head/linear/school_ratingM/weight/part_0/Adam_1"
  input: "save/RestoreV2_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/school_ratingM/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/size_bucketized/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "31 1 0,31:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "linear/size_bucketized/weights/part_0"
  input: "save/RestoreV2_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/size_bucketized/weights/ketized/weights/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "31 1 0,31:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam"
  input: "save/RestoreV2_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/size_bucketized/weights/ketized/weights/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "31 1 0,31:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "linear/regression_head/linear/size_bucketized/weights/part_0/Adam_1"
  input: "save/RestoreV2_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/size_bucketized/weights/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 31
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/zestimate/weight"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "linear/zestimate/weight/part_0"
  input: "save/RestoreV2_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/zestimate/weight/estimate/weight/part_0/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam"
  input: "save/RestoreV2_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "linear/zestimate/weight/estimate/weight/part_0/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "1 1 0,1:0,1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "linear/regression_head/linear/zestimate/weight/part_0/Adam_1"
  input: "save/RestoreV2_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear/zestimate/weight/part_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 21
}
